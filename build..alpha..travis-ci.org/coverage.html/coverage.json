{"/home/travis/build/npmtest/node-npmtest-protobufjs/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_protobufjs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/lib.npmtest_protobufjs.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/lib.npmtest_protobufjs.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_protobufjs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_protobufjs = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_protobufjs = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":68},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-protobufjs && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_protobufjs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_protobufjs","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_protobufjs.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_protobufjs.rollup.js'] =","            local.assetsDict['/assets.npmtest_protobufjs.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_protobufjs.__dirname + '/lib.npmtest_protobufjs.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}}},"branchMap":{},"code":["// full library entry point.","","\"use strict\";","module.exports = require(\"./src/index\");",""],"l":{"4":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":57}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":24}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":73}}},"branchMap":{},"code":["\"use strict\";","var protobuf = module.exports = require(\"./index-light\");","","protobuf.build = \"full\";","","// Parser","protobuf.tokenize         = require(\"./tokenize\");","protobuf.parse            = require(\"./parse\");","protobuf.common           = require(\"./common\");","","// Configure parser","protobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);",""],"l":{"2":1,"4":1,"7":1,"8":1,"9":1,"12":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/index-light.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/index-light.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"load","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}}},"2":{"name":"loadSync","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":34}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":59}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"3":{"start":{"line":23,"column":0},"end":{"line":30,"column":1}},"4":{"start":{"line":24,"column":4},"end":{"line":28,"column":35}},"5":{"start":{"line":25,"column":8},"end":{"line":25,"column":24}},"6":{"start":{"line":26,"column":8},"end":{"line":26,"column":35}},"7":{"start":{"line":27,"column":11},"end":{"line":28,"column":35}},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":35}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":41}},"10":{"start":{"line":56,"column":0},"end":{"line":56,"column":21}},"11":{"start":{"line":66,"column":0},"end":{"line":70,"column":1}},"12":{"start":{"line":67,"column":4},"end":{"line":68,"column":35}},"13":{"start":{"line":68,"column":8},"end":{"line":68,"column":35}},"14":{"start":{"line":69,"column":4},"end":{"line":69,"column":35}},"15":{"start":{"line":72,"column":0},"end":{"line":72,"column":29}},"16":{"start":{"line":75,"column":0},"end":{"line":75,"column":49}},"17":{"start":{"line":76,"column":0},"end":{"line":76,"column":49}},"18":{"start":{"line":77,"column":0},"end":{"line":77,"column":50}},"19":{"start":{"line":78,"column":0},"end":{"line":78,"column":51}},"20":{"start":{"line":81,"column":0},"end":{"line":81,"column":48}},"21":{"start":{"line":82,"column":0},"end":{"line":82,"column":51}},"22":{"start":{"line":83,"column":0},"end":{"line":83,"column":46}},"23":{"start":{"line":84,"column":0},"end":{"line":84,"column":46}},"24":{"start":{"line":85,"column":0},"end":{"line":85,"column":46}},"25":{"start":{"line":86,"column":0},"end":{"line":86,"column":47}},"26":{"start":{"line":87,"column":0},"end":{"line":87,"column":47}},"27":{"start":{"line":88,"column":0},"end":{"line":88,"column":50}},"28":{"start":{"line":89,"column":0},"end":{"line":89,"column":49}},"29":{"start":{"line":90,"column":0},"end":{"line":90,"column":48}},"30":{"start":{"line":93,"column":0},"end":{"line":93,"column":47}},"31":{"start":{"line":94,"column":0},"end":{"line":94,"column":49}},"32":{"start":{"line":97,"column":0},"end":{"line":97,"column":47}},"33":{"start":{"line":98,"column":0},"end":{"line":98,"column":46}},"34":{"start":{"line":101,"column":0},"end":{"line":101,"column":52}},"35":{"start":{"line":102,"column":0},"end":{"line":102,"column":63}},"36":{"start":{"line":103,"column":0},"end":{"line":103,"column":40}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":11},"end":{"line":27,"column":11}},{"start":{"line":27,"column":11},"end":{"line":27,"column":11}}]},"3":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]}},"code":["\"use strict\";","var protobuf = module.exports = require(\"./index-minimal\");","","protobuf.build = \"light\";","","/**"," * A node-style callback as used by {@link load} and {@link Root#load}."," * @typedef LoadCallback"," * @type {function}"," * @param {?Error} error Error, if any, otherwise `null`"," * @param {Root} [root] Root, if there hasn't been an error"," * @returns {undefined}"," */","","/**"," * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback."," * @param {string|string[]} filename One or multiple files to load"," * @param {Root} root Root namespace, defaults to create a new one if omitted."," * @param {LoadCallback} callback Callback function"," * @returns {undefined}"," * @see {@link Root#load}"," */","function load(filename, root, callback) {","    if (typeof root === \"function\") {","        callback = root;","        root = new protobuf.Root();","    } else if (!root)","        root = new protobuf.Root();","    return root.load(filename, callback);","}","","/**"," * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback."," * @name load"," * @function"," * @param {string|string[]} filename One or multiple files to load"," * @param {LoadCallback} callback Callback function"," * @returns {undefined}"," * @see {@link Root#load}"," * @variation 2"," */","// function load(filename:string, callback:LoadCallback):undefined","","/**"," * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise."," * @name load"," * @function"," * @param {string|string[]} filename One or multiple files to load"," * @param {Root} [root] Root namespace, defaults to create a new one if omitted."," * @returns {Promise<Root>} Promise"," * @see {@link Root#load}"," * @variation 3"," */","// function load(filename:string, [root:Root]):Promise<Root>","","protobuf.load = load;","","/**"," * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only)."," * @param {string|string[]} filename One or multiple files to load"," * @param {Root} [root] Root namespace, defaults to create a new one if omitted."," * @returns {Root} Root namespace"," * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid"," * @see {@link Root#loadSync}"," */","function loadSync(filename, root) {","    if (!root)","        root = new protobuf.Root();","    return root.loadSync(filename);","}","","protobuf.loadSync = loadSync;","","// Serialization","protobuf.encoder          = require(\"./encoder\");","protobuf.decoder          = require(\"./decoder\");","protobuf.verifier         = require(\"./verifier\");","protobuf.converter        = require(\"./converter\");","","// Reflection","protobuf.ReflectionObject = require(\"./object\");","protobuf.Namespace        = require(\"./namespace\");","protobuf.Root             = require(\"./root\");","protobuf.Enum             = require(\"./enum\");","protobuf.Type             = require(\"./type\");","protobuf.Field            = require(\"./field\");","protobuf.OneOf            = require(\"./oneof\");","protobuf.MapField         = require(\"./mapfield\");","protobuf.Service          = require(\"./service\");","protobuf.Method           = require(\"./method\");","","// Runtime","protobuf.Class            = require(\"./class\");","protobuf.Message          = require(\"./message\");","","// Utility","protobuf.types            = require(\"./types\");","protobuf.util             = require(\"./util\");","","// Configure reflection","protobuf.ReflectionObject._configure(protobuf.Root);","protobuf.Namespace._configure(protobuf.Type, protobuf.Service);","protobuf.Root._configure(protobuf.Type);",""],"l":{"2":1,"4":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"56":1,"66":1,"67":0,"68":0,"69":0,"72":1,"75":1,"76":1,"77":1,"78":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"93":1,"94":1,"97":1,"98":1,"101":1,"102":1,"103":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/index-minimal.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/index-minimal.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"configure","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":21}},"skip":true}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":20}},"4":{"start":{"line":30,"column":0},"end":{"line":30,"column":44}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":51}},"6":{"start":{"line":32,"column":0},"end":{"line":32,"column":44}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":51}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":50}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":41}},"10":{"start":{"line":38,"column":0},"end":{"line":38,"column":34}},"11":{"start":{"line":45,"column":0},"end":{"line":48,"column":1},"skip":true},"12":{"start":{"line":46,"column":4},"end":{"line":46,"column":54},"skip":true},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":31},"skip":true},"14":{"start":{"line":51,"column":0},"end":{"line":51,"column":50}},"15":{"start":{"line":52,"column":0},"end":{"line":52,"column":12}}},"branchMap":{},"code":["\"use strict\";","var protobuf = exports;","","/**"," * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`."," * @name build"," * @type {string}"," * @const"," */","protobuf.build = \"minimal\";","","/**"," * Named roots."," * This is where pbjs stores generated structures (the option `-r, --root` specifies a name)."," * Can also be used manually to make roots available accross modules."," * @name roots"," * @type {Object.<string,Root>}"," * @example"," * // pbjs -r myroot -o compiled.js ..."," *"," * // in another module:"," * require(\"./compiled.js\");"," *"," * // in any subsequent module:"," * var root = protobuf.roots[\"myroot\"];"," */","protobuf.roots = {};","","// Serialization","protobuf.Writer       = require(\"./writer\");","protobuf.BufferWriter = require(\"./writer_buffer\");","protobuf.Reader       = require(\"./reader\");","protobuf.BufferReader = require(\"./reader_buffer\");","","// Utility","protobuf.util         = require(\"./util/minimal\");","protobuf.rpc          = require(\"./rpc\");","protobuf.configure    = configure;","","/* istanbul ignore next */","/**"," * Reconfigures the library according to the environment."," * @returns {undefined}"," */","function configure() {","    protobuf.Reader._configure(protobuf.BufferReader);","    protobuf.util._configure();","}","","// Configure serialization","protobuf.Writer._configure(protobuf.BufferWriter);","configure();",""],"l":{"2":1,"10":1,"27":1,"30":1,"31":1,"32":1,"33":1,"36":1,"37":1,"38":1,"45":1,"46":1,"47":1,"51":1,"52":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/writer.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/writer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":1,"46":1,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":1,"66":1,"67":0,"68":0,"69":1,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":1,"79":1,"80":0,"81":0,"82":1,"83":1,"84":0,"85":1,"86":0,"87":1,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":1},"b":{"1":[1,0],"2":[1,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[1,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"fnMap":{"1":{"name":"Op","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":26}}},"2":{"name":"noop","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":16}},"skip":true},"3":{"name":"State","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":23}}},"4":{"name":"Writer","line":92,"loc":{"start":{"line":92,"column":0},"end":{"line":92,"column":18}}},"5":{"name":"create_buffer_setup","line":131,"loc":{"start":{"line":131,"column":6},"end":{"line":131,"column":37}}},"6":{"name":"create_buffer","line":132,"loc":{"start":{"line":132,"column":32},"end":{"line":132,"column":57}}},"7":{"name":"create_array","line":137,"loc":{"start":{"line":137,"column":6},"end":{"line":137,"column":30}},"skip":true},"8":{"name":"alloc","line":146,"loc":{"start":{"line":146,"column":15},"end":{"line":146,"column":36}}},"9":{"name":"push","line":162,"loc":{"start":{"line":162,"column":24},"end":{"line":162,"column":52}}},"10":{"name":"writeByte","line":168,"loc":{"start":{"line":168,"column":0},"end":{"line":168,"column":34}}},"11":{"name":"writeVarint32","line":172,"loc":{"start":{"line":172,"column":0},"end":{"line":172,"column":38}}},"12":{"name":"VarintOp","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":28}}},"13":{"name":"write_uint32","line":203,"loc":{"start":{"line":203,"column":26},"end":{"line":203,"column":55}}},"14":{"name":"write_int32","line":223,"loc":{"start":{"line":223,"column":25},"end":{"line":223,"column":53}}},"15":{"name":"write_sint32","line":234,"loc":{"start":{"line":234,"column":26},"end":{"line":234,"column":55}}},"16":{"name":"writeVarint64","line":238,"loc":{"start":{"line":238,"column":0},"end":{"line":238,"column":38}}},"17":{"name":"write_uint64","line":257,"loc":{"start":{"line":257,"column":26},"end":{"line":257,"column":55}}},"18":{"name":"write_sint64","line":277,"loc":{"start":{"line":277,"column":26},"end":{"line":277,"column":55}}},"19":{"name":"write_bool","line":287,"loc":{"start":{"line":287,"column":24},"end":{"line":287,"column":51}}},"20":{"name":"writeFixed32","line":291,"loc":{"start":{"line":291,"column":0},"end":{"line":291,"column":37}}},"21":{"name":"write_fixed32","line":303,"loc":{"start":{"line":303,"column":27},"end":{"line":303,"column":57}}},"22":{"name":"write_fixed64","line":321,"loc":{"start":{"line":321,"column":27},"end":{"line":321,"column":57}}},"23":{"name":"write_float","line":341,"loc":{"start":{"line":341,"column":25},"end":{"line":341,"column":53}}},"24":{"name":"write_double","line":351,"loc":{"start":{"line":351,"column":26},"end":{"line":351,"column":55}}},"25":{"name":"writeBytes_set","line":356,"loc":{"start":{"line":356,"column":6},"end":{"line":356,"column":45}}},"26":{"name":"writeBytes_for","line":360,"loc":{"start":{"line":360,"column":6},"end":{"line":360,"column":45}},"skip":true},"27":{"name":"write_bytes","line":370,"loc":{"start":{"line":370,"column":25},"end":{"line":370,"column":53}}},"28":{"name":"write_string","line":387,"loc":{"start":{"line":387,"column":26},"end":{"line":387,"column":55}}},"29":{"name":"fork","line":399,"loc":{"start":{"line":399,"column":24},"end":{"line":399,"column":40}}},"30":{"name":"reset","line":410,"loc":{"start":{"line":410,"column":25},"end":{"line":410,"column":42}}},"31":{"name":"ldelim","line":427,"loc":{"start":{"line":427,"column":26},"end":{"line":427,"column":44}}},"32":{"name":"finish","line":444,"loc":{"start":{"line":444,"column":26},"end":{"line":444,"column":44}}},"33":{"name":"(anonymous_33)","line":457,"loc":{"start":{"line":457,"column":20},"end":{"line":457,"column":44}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":8,"column":0},"end":{"line":10,"column":26}},"5":{"start":{"line":21,"column":0},"end":{"line":46,"column":1}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":17}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":19}},"8":{"start":{"line":39,"column":4},"end":{"line":39,"column":26}},"9":{"start":{"line":45,"column":4},"end":{"line":45,"column":19}},"10":{"start":{"line":49,"column":0},"end":{"line":49,"column":18},"skip":true},"11":{"start":{"line":60,"column":0},"end":{"line":85,"column":1}},"12":{"start":{"line":66,"column":4},"end":{"line":66,"column":28}},"13":{"start":{"line":72,"column":4},"end":{"line":72,"column":28}},"14":{"start":{"line":78,"column":4},"end":{"line":78,"column":26}},"15":{"start":{"line":84,"column":4},"end":{"line":84,"column":30}},"16":{"start":{"line":92,"column":0},"end":{"line":123,"column":1}},"17":{"start":{"line":98,"column":4},"end":{"line":98,"column":17}},"18":{"start":{"line":104,"column":4},"end":{"line":104,"column":35}},"19":{"start":{"line":110,"column":4},"end":{"line":110,"column":26}},"20":{"start":{"line":116,"column":4},"end":{"line":116,"column":23}},"21":{"start":{"line":130,"column":0},"end":{"line":139,"column":6}},"22":{"start":{"line":132,"column":8},"end":{"line":134,"column":13}},"23":{"start":{"line":133,"column":12},"end":{"line":133,"column":38}},"24":{"start":{"line":138,"column":8},"end":{"line":138,"column":28},"skip":true},"25":{"start":{"line":146,"column":0},"end":{"line":148,"column":2}},"26":{"start":{"line":147,"column":4},"end":{"line":147,"column":32}},"27":{"start":{"line":152,"column":0},"end":{"line":153,"column":74}},"28":{"start":{"line":153,"column":4},"end":{"line":153,"column":74}},"29":{"start":{"line":162,"column":0},"end":{"line":166,"column":2}},"30":{"start":{"line":163,"column":4},"end":{"line":163,"column":54}},"31":{"start":{"line":164,"column":4},"end":{"line":164,"column":20}},"32":{"start":{"line":165,"column":4},"end":{"line":165,"column":16}},"33":{"start":{"line":168,"column":0},"end":{"line":170,"column":1}},"34":{"start":{"line":169,"column":4},"end":{"line":169,"column":25}},"35":{"start":{"line":172,"column":0},"end":{"line":178,"column":1}},"36":{"start":{"line":173,"column":4},"end":{"line":176,"column":5}},"37":{"start":{"line":174,"column":8},"end":{"line":174,"column":37}},"38":{"start":{"line":175,"column":8},"end":{"line":175,"column":19}},"39":{"start":{"line":177,"column":4},"end":{"line":177,"column":19}},"40":{"start":{"line":189,"column":0},"end":{"line":193,"column":1}},"41":{"start":{"line":190,"column":4},"end":{"line":190,"column":19}},"42":{"start":{"line":191,"column":4},"end":{"line":191,"column":26}},"43":{"start":{"line":192,"column":4},"end":{"line":192,"column":19}},"44":{"start":{"line":195,"column":0},"end":{"line":195,"column":49}},"45":{"start":{"line":196,"column":0},"end":{"line":196,"column":38}},"46":{"start":{"line":203,"column":0},"end":{"line":215,"column":2}},"47":{"start":{"line":206,"column":4},"end":{"line":213,"column":16}},"48":{"start":{"line":214,"column":4},"end":{"line":214,"column":16}},"49":{"start":{"line":223,"column":0},"end":{"line":227,"column":2}},"50":{"start":{"line":224,"column":4},"end":{"line":226,"column":29}},"51":{"start":{"line":234,"column":0},"end":{"line":236,"column":2}},"52":{"start":{"line":235,"column":4},"end":{"line":235,"column":57}},"53":{"start":{"line":238,"column":0},"end":{"line":249,"column":1}},"54":{"start":{"line":239,"column":4},"end":{"line":243,"column":5}},"55":{"start":{"line":240,"column":8},"end":{"line":240,"column":40}},"56":{"start":{"line":241,"column":8},"end":{"line":241,"column":53}},"57":{"start":{"line":242,"column":8},"end":{"line":242,"column":22}},"58":{"start":{"line":244,"column":4},"end":{"line":247,"column":5}},"59":{"start":{"line":245,"column":8},"end":{"line":245,"column":40}},"60":{"start":{"line":246,"column":8},"end":{"line":246,"column":30}},"61":{"start":{"line":248,"column":4},"end":{"line":248,"column":24}},"62":{"start":{"line":257,"column":0},"end":{"line":260,"column":2}},"63":{"start":{"line":258,"column":4},"end":{"line":258,"column":36}},"64":{"start":{"line":259,"column":4},"end":{"line":259,"column":57}},"65":{"start":{"line":269,"column":0},"end":{"line":269,"column":49}},"66":{"start":{"line":277,"column":0},"end":{"line":280,"column":2}},"67":{"start":{"line":278,"column":4},"end":{"line":278,"column":47}},"68":{"start":{"line":279,"column":4},"end":{"line":279,"column":57}},"69":{"start":{"line":287,"column":0},"end":{"line":289,"column":2}},"70":{"start":{"line":288,"column":4},"end":{"line":288,"column":50}},"71":{"start":{"line":291,"column":0},"end":{"line":296,"column":1}},"72":{"start":{"line":292,"column":4},"end":{"line":292,"column":38}},"73":{"start":{"line":293,"column":4},"end":{"line":293,"column":38}},"74":{"start":{"line":294,"column":4},"end":{"line":294,"column":38}},"75":{"start":{"line":295,"column":4},"end":{"line":295,"column":31}},"76":{"start":{"line":303,"column":0},"end":{"line":305,"column":2}},"77":{"start":{"line":304,"column":4},"end":{"line":304,"column":51}},"78":{"start":{"line":313,"column":0},"end":{"line":313,"column":53}},"79":{"start":{"line":321,"column":0},"end":{"line":324,"column":2}},"80":{"start":{"line":322,"column":4},"end":{"line":322,"column":36}},"81":{"start":{"line":323,"column":4},"end":{"line":323,"column":78}},"82":{"start":{"line":333,"column":0},"end":{"line":333,"column":53}},"83":{"start":{"line":341,"column":0},"end":{"line":343,"column":2}},"84":{"start":{"line":342,"column":4},"end":{"line":342,"column":56}},"85":{"start":{"line":351,"column":0},"end":{"line":353,"column":2}},"86":{"start":{"line":352,"column":4},"end":{"line":352,"column":57}},"87":{"start":{"line":355,"column":0},"end":{"line":363,"column":6}},"88":{"start":{"line":357,"column":8},"end":{"line":357,"column":26}},"89":{"start":{"line":361,"column":8},"end":{"line":362,"column":34},"skip":true},"90":{"start":{"line":362,"column":12},"end":{"line":362,"column":34},"skip":true},"91":{"start":{"line":370,"column":0},"end":{"line":380,"column":2}},"92":{"start":{"line":371,"column":4},"end":{"line":371,"column":33}},"93":{"start":{"line":372,"column":4},"end":{"line":373,"column":42}},"94":{"start":{"line":373,"column":8},"end":{"line":373,"column":42}},"95":{"start":{"line":374,"column":4},"end":{"line":378,"column":5}},"96":{"start":{"line":375,"column":8},"end":{"line":375,"column":59}},"97":{"start":{"line":376,"column":8},"end":{"line":376,"column":37}},"98":{"start":{"line":377,"column":8},"end":{"line":377,"column":20}},"99":{"start":{"line":379,"column":4},"end":{"line":379,"column":57}},"100":{"start":{"line":387,"column":0},"end":{"line":392,"column":2}},"101":{"start":{"line":388,"column":4},"end":{"line":388,"column":33}},"102":{"start":{"line":389,"column":4},"end":{"line":391,"column":37}},"103":{"start":{"line":399,"column":0},"end":{"line":404,"column":2}},"104":{"start":{"line":400,"column":4},"end":{"line":400,"column":34}},"105":{"start":{"line":401,"column":4},"end":{"line":401,"column":47}},"106":{"start":{"line":402,"column":4},"end":{"line":402,"column":17}},"107":{"start":{"line":403,"column":4},"end":{"line":403,"column":16}},"108":{"start":{"line":410,"column":0},"end":{"line":421,"column":2}},"109":{"start":{"line":411,"column":4},"end":{"line":419,"column":5}},"110":{"start":{"line":412,"column":8},"end":{"line":412,"column":39}},"111":{"start":{"line":413,"column":8},"end":{"line":413,"column":39}},"112":{"start":{"line":414,"column":8},"end":{"line":414,"column":38}},"113":{"start":{"line":415,"column":8},"end":{"line":415,"column":39}},"114":{"start":{"line":417,"column":8},"end":{"line":417,"column":51}},"115":{"start":{"line":418,"column":8},"end":{"line":418,"column":22}},"116":{"start":{"line":420,"column":4},"end":{"line":420,"column":16}},"117":{"start":{"line":427,"column":0},"end":{"line":438,"column":2}},"118":{"start":{"line":428,"column":4},"end":{"line":430,"column":24}},"119":{"start":{"line":431,"column":4},"end":{"line":431,"column":29}},"120":{"start":{"line":432,"column":4},"end":{"line":436,"column":5}},"121":{"start":{"line":433,"column":8},"end":{"line":433,"column":35}},"122":{"start":{"line":434,"column":8},"end":{"line":434,"column":25}},"123":{"start":{"line":435,"column":8},"end":{"line":435,"column":24}},"124":{"start":{"line":437,"column":4},"end":{"line":437,"column":16}},"125":{"start":{"line":444,"column":0},"end":{"line":455,"column":2}},"126":{"start":{"line":445,"column":4},"end":{"line":447,"column":17}},"127":{"start":{"line":448,"column":4},"end":{"line":452,"column":5}},"128":{"start":{"line":449,"column":8},"end":{"line":449,"column":36}},"129":{"start":{"line":450,"column":8},"end":{"line":450,"column":24}},"130":{"start":{"line":451,"column":8},"end":{"line":451,"column":25}},"131":{"start":{"line":454,"column":4},"end":{"line":454,"column":15}},"132":{"start":{"line":457,"column":0},"end":{"line":459,"column":2}},"133":{"start":{"line":458,"column":4},"end":{"line":458,"column":33}}},"branchMap":{"1":{"line":130,"type":"cond-expr","locations":[{"start":{"line":131,"column":6},"end":{"line":135,"column":5}},{"start":{"line":137,"column":6},"end":{"line":139,"column":5},"skip":true}]},"2":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":0},"end":{"line":152,"column":0}},{"start":{"line":152,"column":0},"end":{"line":152,"column":0},"skip":true}]},"3":{"line":207,"type":"cond-expr","locations":[{"start":{"line":208,"column":30},"end":{"line":208,"column":31}},{"start":{"line":209,"column":10},"end":{"line":212,"column":31}}]},"4":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":30},"end":{"line":209,"column":31}},{"start":{"line":210,"column":10},"end":{"line":212,"column":31}}]},"5":{"line":210,"type":"cond-expr","locations":[{"start":{"line":210,"column":30},"end":{"line":210,"column":31}},{"start":{"line":211,"column":10},"end":{"line":212,"column":31}}]},"6":{"line":211,"type":"cond-expr","locations":[{"start":{"line":211,"column":30},"end":{"line":211,"column":31}},{"start":{"line":212,"column":30},"end":{"line":212,"column":31}}]},"7":{"line":224,"type":"cond-expr","locations":[{"start":{"line":225,"column":10},"end":{"line":225,"column":66}},{"start":{"line":226,"column":10},"end":{"line":226,"column":28}}]},"8":{"line":288,"type":"cond-expr","locations":[{"start":{"line":288,"column":43},"end":{"line":288,"column":44}},{"start":{"line":288,"column":47},"end":{"line":288,"column":48}}]},"9":{"line":355,"type":"cond-expr","locations":[{"start":{"line":356,"column":6},"end":{"line":358,"column":5}},{"start":{"line":360,"column":6},"end":{"line":363,"column":5},"skip":true}]},"10":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":4},"end":{"line":372,"column":4}},{"start":{"line":372,"column":4},"end":{"line":372,"column":4}}]},"11":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":4},"end":{"line":374,"column":4}},{"start":{"line":374,"column":4},"end":{"line":374,"column":4}}]},"12":{"line":389,"type":"cond-expr","locations":[{"start":{"line":390,"column":10},"end":{"line":390,"column":55}},{"start":{"line":391,"column":10},"end":{"line":391,"column":36}}]},"13":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":4}},{"start":{"line":411,"column":4},"end":{"line":411,"column":4}}]},"14":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":4},"end":{"line":432,"column":4}},{"start":{"line":432,"column":4},"end":{"line":432,"column":4}}]}},"code":["\"use strict\";","module.exports = Writer;","","var util      = require(\"./util/minimal\");","","var BufferWriter; // cyclic","","var LongBits  = util.LongBits,","    base64    = util.base64,","    utf8      = util.utf8;","","/**"," * Constructs a new writer operation instance."," * @classdesc Scheduled writer operation."," * @constructor"," * @param {function(*, Uint8Array, number)} fn Function to call"," * @param {number} len Value byte length"," * @param {*} val Value to write"," * @ignore"," */","function Op(fn, len, val) {","","    /**","     * Function to call.","     * @type {function(Uint8Array, number, *)}","     */","    this.fn = fn;","","    /**","     * Value byte length.","     * @type {number}","     */","    this.len = len;","","    /**","     * Next operation.","     * @type {Writer.Op|undefined}","     */","    this.next = undefined;","","    /**","     * Value to write.","     * @type {*}","     */","    this.val = val; // type varies","}","","/* istanbul ignore next */","function noop() {} // eslint-disable-line no-empty-function","","/**"," * Constructs a new writer state instance."," * @classdesc Copied writer state."," * @memberof Writer"," * @constructor"," * @param {Writer} writer Writer to copy state from"," * @private"," * @ignore"," */","function State(writer) {","","    /**","     * Current head.","     * @type {Writer.Op}","     */","    this.head = writer.head;","","    /**","     * Current tail.","     * @type {Writer.Op}","     */","    this.tail = writer.tail;","","    /**","     * Current buffer length.","     * @type {number}","     */","    this.len = writer.len;","","    /**","     * Next state.","     * @type {?State}","     */","    this.next = writer.states;","}","","/**"," * Constructs a new writer instance."," * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`."," * @constructor"," */","function Writer() {","","    /**","     * Current length.","     * @type {number}","     */","    this.len = 0;","","    /**","     * Operations head.","     * @type {Object}","     */","    this.head = new Op(noop, 0, 0);","","    /**","     * Operations tail","     * @type {Object}","     */","    this.tail = this.head;","","    /**","     * Linked forked states.","     * @type {?Object}","     */","    this.states = null;","","    // When a value is written, the writer calculates its byte length and puts it into a linked","    // list of operations to perform when finish() is called. This both allows us to allocate","    // buffers of the exact required size and reduces the amount of work we have to do compared","    // to first calculating over objects and then encoding over objects. In our case, the encoding","    // part is just a linked list walk calling operations with already prepared values.","}","","/**"," * Creates a new writer."," * @function"," * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}"," */","Writer.create = util.Buffer","    ? function create_buffer_setup() {","        return (Writer.create = function create_buffer() {","            return new BufferWriter();","        })();","    }","    /* istanbul ignore next */","    : function create_array() {","        return new Writer();","    };","","/**"," * Allocates a buffer of the specified size."," * @param {number} size Buffer size"," * @returns {Uint8Array} Buffer"," */","Writer.alloc = function alloc(size) {","    return new util.Array(size);","};","","// Use Uint8Array buffer pool in the browser, just like node does with buffers","/* istanbul ignore else */","if (util.Array !== Array)","    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);","","/**"," * Pushes a new operation to the queue."," * @param {function(Uint8Array, number, *)} fn Function to call"," * @param {number} len Value byte length"," * @param {number} val Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.push = function push(fn, len, val) {","    this.tail = this.tail.next = new Op(fn, len, val);","    this.len += len;","    return this;","};","","function writeByte(val, buf, pos) {","    buf[pos] = val & 255;","}","","function writeVarint32(val, buf, pos) {","    while (val > 127) {","        buf[pos++] = val & 127 | 128;","        val >>>= 7;","    }","    buf[pos] = val;","}","","/**"," * Constructs a new varint writer operation instance."," * @classdesc Scheduled varint writer operation."," * @extends Op"," * @constructor"," * @param {number} len Value byte length"," * @param {number} val Value to write"," * @ignore"," */","function VarintOp(len, val) {","    this.len = len;","    this.next = undefined;","    this.val = val;","}","","VarintOp.prototype = Object.create(Op.prototype);","VarintOp.prototype.fn = writeVarint32;","","/**"," * Writes an unsigned 32 bit value as a varint."," * @param {number} value Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.uint32 = function write_uint32(value) {","    // here, the call to this.push has been inlined and a varint specific Op subclass is used.","    // uint32 is by far the most frequently used operation and benefits significantly from this.","    this.len += (this.tail = this.tail.next = new VarintOp(","        (value = value >>> 0)","                < 128       ? 1","        : value < 16384     ? 2","        : value < 2097152   ? 3","        : value < 268435456 ? 4","        :                     5,","    value)).len;","    return this;","};","","/**"," * Writes a signed 32 bit value as a varint."," * @function"," * @param {number} value Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.int32 = function write_int32(value) {","    return value < 0","        ? this.push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec","        : this.uint32(value);","};","","/**"," * Writes a 32 bit value as a varint, zig-zag encoded."," * @param {number} value Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.sint32 = function write_sint32(value) {","    return this.uint32((value << 1 ^ value >> 31) >>> 0);","};","","function writeVarint64(val, buf, pos) {","    while (val.hi) {","        buf[pos++] = val.lo & 127 | 128;","        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;","        val.hi >>>= 7;","    }","    while (val.lo > 127) {","        buf[pos++] = val.lo & 127 | 128;","        val.lo = val.lo >>> 7;","    }","    buf[pos++] = val.lo;","}","","/**"," * Writes an unsigned 64 bit value as a varint."," * @param {Long|number|string} value Value to write"," * @returns {Writer} `this`"," * @throws {TypeError} If `value` is a string and no long library is present."," */","Writer.prototype.uint64 = function write_uint64(value) {","    var bits = LongBits.from(value);","    return this.push(writeVarint64, bits.length(), bits);","};","","/**"," * Writes a signed 64 bit value as a varint."," * @function"," * @param {Long|number|string} value Value to write"," * @returns {Writer} `this`"," * @throws {TypeError} If `value` is a string and no long library is present."," */","Writer.prototype.int64 = Writer.prototype.uint64;","","/**"," * Writes a signed 64 bit value as a varint, zig-zag encoded."," * @param {Long|number|string} value Value to write"," * @returns {Writer} `this`"," * @throws {TypeError} If `value` is a string and no long library is present."," */","Writer.prototype.sint64 = function write_sint64(value) {","    var bits = LongBits.from(value).zzEncode();","    return this.push(writeVarint64, bits.length(), bits);","};","","/**"," * Writes a boolish value as a varint."," * @param {boolean} value Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.bool = function write_bool(value) {","    return this.push(writeByte, 1, value ? 1 : 0);","};","","function writeFixed32(val, buf, pos) {","    buf[pos    ] =  val         & 255;","    buf[pos + 1] =  val >>> 8   & 255;","    buf[pos + 2] =  val >>> 16  & 255;","    buf[pos + 3] =  val >>> 24;","}","","/**"," * Writes an unsigned 32 bit value as fixed 32 bits."," * @param {number} value Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.fixed32 = function write_fixed32(value) {","    return this.push(writeFixed32, 4, value >>> 0);","};","","/**"," * Writes a signed 32 bit value as fixed 32 bits."," * @function"," * @param {number} value Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.sfixed32 = Writer.prototype.fixed32;","","/**"," * Writes an unsigned 64 bit value as fixed 64 bits."," * @param {Long|number|string} value Value to write"," * @returns {Writer} `this`"," * @throws {TypeError} If `value` is a string and no long library is present."," */","Writer.prototype.fixed64 = function write_fixed64(value) {","    var bits = LongBits.from(value);","    return this.push(writeFixed32, 4, bits.lo).push(writeFixed32, 4, bits.hi);","};","","/**"," * Writes a signed 64 bit value as fixed 64 bits."," * @function"," * @param {Long|number|string} value Value to write"," * @returns {Writer} `this`"," * @throws {TypeError} If `value` is a string and no long library is present."," */","Writer.prototype.sfixed64 = Writer.prototype.fixed64;","","/**"," * Writes a float (32 bit)."," * @function"," * @param {number} value Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.float = function write_float(value) {","    return this.push(util.float.writeFloatLE, 4, value);","};","","/**"," * Writes a double (64 bit float)."," * @function"," * @param {number} value Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.double = function write_double(value) {","    return this.push(util.float.writeDoubleLE, 8, value);","};","","var writeBytes = util.Array.prototype.set","    ? function writeBytes_set(val, buf, pos) {","        buf.set(val, pos); // also works for plain array values","    }","    /* istanbul ignore next */","    : function writeBytes_for(val, buf, pos) {","        for (var i = 0; i < val.length; ++i)","            buf[pos + i] = val[i];","    };","","/**"," * Writes a sequence of bytes."," * @param {Uint8Array|string} value Buffer or base64 encoded string to write"," * @returns {Writer} `this`"," */","Writer.prototype.bytes = function write_bytes(value) {","    var len = value.length >>> 0;","    if (!len)","        return this.push(writeByte, 1, 0);","    if (util.isString(value)) {","        var buf = Writer.alloc(len = base64.length(value));","        base64.decode(value, buf, 0);","        value = buf;","    }","    return this.uint32(len).push(writeBytes, len, value);","};","","/**"," * Writes a string."," * @param {string} value Value to write"," * @returns {Writer} `this`"," */","Writer.prototype.string = function write_string(value) {","    var len = utf8.length(value);","    return len","        ? this.uint32(len).push(utf8.write, len, value)","        : this.push(writeByte, 1, 0);","};","","/**"," * Forks this writer's state by pushing it to a stack."," * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state."," * @returns {Writer} `this`"," */","Writer.prototype.fork = function fork() {","    this.states = new State(this);","    this.head = this.tail = new Op(noop, 0, 0);","    this.len = 0;","    return this;","};","","/**"," * Resets this instance to the last state."," * @returns {Writer} `this`"," */","Writer.prototype.reset = function reset() {","    if (this.states) {","        this.head   = this.states.head;","        this.tail   = this.states.tail;","        this.len    = this.states.len;","        this.states = this.states.next;","    } else {","        this.head = this.tail = new Op(noop, 0, 0);","        this.len  = 0;","    }","    return this;","};","","/**"," * Resets to the last state and appends the fork state's current write length as a varint followed by its operations."," * @returns {Writer} `this`"," */","Writer.prototype.ldelim = function ldelim() {","    var head = this.head,","        tail = this.tail,","        len  = this.len;","    this.reset().uint32(len);","    if (len) {","        this.tail.next = head.next; // skip noop","        this.tail = tail;","        this.len += len;","    }","    return this;","};","","/**"," * Finishes the write operation."," * @returns {Uint8Array} Finished buffer"," */","Writer.prototype.finish = function finish() {","    var head = this.head.next, // skip noop","        buf  = this.constructor.alloc(this.len),","        pos  = 0;","    while (head) {","        head.fn(head.val, buf, pos);","        pos += head.len;","        head = head.next;","    }","    // this.head = this.tail = null;","    return buf;","};","","Writer._configure = function(BufferWriter_) {","    BufferWriter = BufferWriter_;","};",""],"l":{"2":1,"4":1,"6":1,"8":1,"21":1,"27":0,"33":0,"39":0,"45":0,"49":1,"60":1,"66":0,"72":0,"78":0,"84":0,"92":1,"98":0,"104":0,"110":0,"116":0,"130":1,"132":0,"133":0,"138":1,"146":1,"147":0,"152":1,"153":1,"162":1,"163":0,"164":0,"165":0,"168":1,"169":0,"172":1,"173":0,"174":0,"175":0,"177":0,"189":1,"190":0,"191":0,"192":0,"195":1,"196":1,"203":1,"206":0,"214":0,"223":1,"224":0,"234":1,"235":0,"238":1,"239":0,"240":0,"241":0,"242":0,"244":0,"245":0,"246":0,"248":0,"257":1,"258":0,"259":0,"269":1,"277":1,"278":0,"279":0,"287":1,"288":0,"291":1,"292":0,"293":0,"294":0,"295":0,"303":1,"304":0,"313":1,"321":1,"322":0,"323":0,"333":1,"341":1,"342":0,"351":1,"352":0,"355":1,"357":0,"361":1,"362":1,"370":1,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"379":0,"387":1,"388":0,"389":0,"399":1,"400":0,"401":0,"402":0,"403":0,"410":1,"411":0,"412":0,"413":0,"414":0,"415":0,"417":0,"418":0,"420":0,"427":1,"428":0,"431":0,"432":0,"433":0,"434":0,"435":0,"437":0,"444":1,"445":0,"448":0,"449":0,"450":0,"451":0,"454":0,"457":1,"458":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/util/minimal.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/util/minimal.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":0,"29":1,"30":1,"31":1,"32":0,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":5,"48":5,"49":1,"50":1,"51":1,"52":0,"53":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":1,"66":0,"67":1,"68":0,"69":1,"70":1,"71":1,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":1,"94":1,"95":1,"96":0,"97":0,"98":1,"99":0,"100":1,"101":0},"b":{"1":[1,0],"2":[1,0],"3":[1,1,1],"4":[1,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[1,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[1,0],"18":[1,0,1],"19":[0,0],"20":[0,0],"21":[5,0],"22":[5,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,1],"31":[1,1,0],"32":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0},"fnMap":{"1":{"name":"isInteger","line":57,"loc":{"start":{"line":57,"column":64},"end":{"line":57,"column":90}},"skip":true},"2":{"name":"isString","line":66,"loc":{"start":{"line":66,"column":16},"end":{"line":66,"column":41}}},"3":{"name":"isObject","line":75,"loc":{"start":{"line":75,"column":16},"end":{"line":75,"column":41}}},"4":{"name":"isSet","line":95,"loc":{"start":{"line":95,"column":13},"end":{"line":95,"column":39}}},"5":{"name":"(anonymous_5)","line":113,"loc":{"start":{"line":113,"column":15},"end":{"line":113,"column":26}}},"6":{"name":"newBuffer","line":148,"loc":{"start":{"line":148,"column":17},"end":{"line":148,"column":49}}},"7":{"name":"longToHash","line":209,"loc":{"start":{"line":209,"column":18},"end":{"line":209,"column":45}}},"8":{"name":"longFromHash","line":221,"loc":{"start":{"line":221,"column":20},"end":{"line":221,"column":58}}},"9":{"name":"merge","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":35}}},"10":{"name":"lcFirst","line":250,"loc":{"start":{"line":250,"column":15},"end":{"line":250,"column":37}}},"11":{"name":"newError","line":260,"loc":{"start":{"line":260,"column":0},"end":{"line":260,"column":24}}},"12":{"name":"CustomError","line":262,"loc":{"start":{"line":262,"column":4},"end":{"line":262,"column":46}}},"13":{"name":"(anonymous_13)","line":270,"loc":{"start":{"line":270,"column":54},"end":{"line":270,"column":65}}},"14":{"name":"(anonymous_14)","line":284,"loc":{"start":{"line":284,"column":64},"end":{"line":284,"column":75}}},"15":{"name":"toString","line":286,"loc":{"start":{"line":286,"column":37},"end":{"line":286,"column":57}}},"16":{"name":"getOneOf","line":324,"loc":{"start":{"line":324,"column":19},"end":{"line":324,"column":49}}},"17":{"name":"(anonymous_17)","line":334,"loc":{"start":{"line":334,"column":11},"end":{"line":334,"column":22}}},"18":{"name":"setOneOf","line":346,"loc":{"start":{"line":346,"column":19},"end":{"line":346,"column":49}}},"19":{"name":"(anonymous_19)","line":354,"loc":{"start":{"line":354,"column":11},"end":{"line":354,"column":26}}},"20":{"name":"lazyResolve","line":369,"loc":{"start":{"line":369,"column":19},"end":{"line":369,"column":57}},"skip":true},"21":{"name":"(anonymous_21)","line":391,"loc":{"start":{"line":391,"column":18},"end":{"line":391,"column":29}}},"22":{"name":"Buffer_from","line":402,"loc":{"start":{"line":402,"column":8},"end":{"line":402,"column":46}},"skip":true},"23":{"name":"Buffer_allocUnsafe","line":407,"loc":{"start":{"line":407,"column":8},"end":{"line":407,"column":42}},"skip":true}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":19}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":56}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":42}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":38}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":84}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":85}},"12":{"start":{"line":49,"column":0},"end":{"line":49,"column":97}},"13":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"14":{"start":{"line":58,"column":4},"end":{"line":58,"column":87},"skip":true},"15":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"16":{"start":{"line":67,"column":4},"end":{"line":67,"column":64}},"17":{"start":{"line":75,"column":0},"end":{"line":77,"column":2}},"18":{"start":{"line":76,"column":4},"end":{"line":76,"column":46}},"19":{"start":{"line":87,"column":0},"end":{"line":100,"column":2}},"20":{"start":{"line":96,"column":4},"end":{"line":96,"column":26}},"21":{"start":{"line":97,"column":4},"end":{"line":98,"column":114}},"22":{"start":{"line":98,"column":8},"end":{"line":98,"column":114}},"23":{"start":{"line":99,"column":4},"end":{"line":99,"column":17}},"24":{"start":{"line":113,"column":0},"end":{"line":122,"column":5}},"25":{"start":{"line":114,"column":4},"end":{"line":121,"column":5}},"26":{"start":{"line":115,"column":8},"end":{"line":115,"column":51}},"27":{"start":{"line":117,"column":8},"end":{"line":117,"column":85}},"28":{"start":{"line":120,"column":8},"end":{"line":120,"column":20},"skip":true},"29":{"start":{"line":132,"column":0},"end":{"line":132,"column":25}},"30":{"start":{"line":141,"column":0},"end":{"line":141,"column":32}},"31":{"start":{"line":148,"column":0},"end":{"line":159,"column":2}},"32":{"start":{"line":150,"column":4},"end":{"line":158,"column":46},"skip":true},"33":{"start":{"line":165,"column":0},"end":{"line":165,"column":95}},"34":{"start":{"line":181,"column":0},"end":{"line":181,"column":128}},"35":{"start":{"line":188,"column":0},"end":{"line":188,"column":33}},"36":{"start":{"line":195,"column":0},"end":{"line":195,"column":39}},"37":{"start":{"line":202,"column":0},"end":{"line":202,"column":60}},"38":{"start":{"line":209,"column":0},"end":{"line":213,"column":2}},"39":{"start":{"line":210,"column":4},"end":{"line":212,"column":33}},"40":{"start":{"line":221,"column":0},"end":{"line":226,"column":2}},"41":{"start":{"line":222,"column":4},"end":{"line":222,"column":44}},"42":{"start":{"line":223,"column":4},"end":{"line":224,"column":62}},"43":{"start":{"line":224,"column":8},"end":{"line":224,"column":62}},"44":{"start":{"line":225,"column":4},"end":{"line":225,"column":44}},"45":{"start":{"line":236,"column":0},"end":{"line":241,"column":1}},"46":{"start":{"line":237,"column":4},"end":{"line":239,"column":40}},"47":{"start":{"line":238,"column":8},"end":{"line":239,"column":40}},"48":{"start":{"line":239,"column":12},"end":{"line":239,"column":40}},"49":{"start":{"line":240,"column":4},"end":{"line":240,"column":15}},"50":{"start":{"line":243,"column":0},"end":{"line":243,"column":19}},"51":{"start":{"line":250,"column":0},"end":{"line":252,"column":2}},"52":{"start":{"line":251,"column":4},"end":{"line":251,"column":58}},"53":{"start":{"line":260,"column":0},"end":{"line":291,"column":1}},"54":{"start":{"line":262,"column":4},"end":{"line":280,"column":5}},"55":{"start":{"line":264,"column":8},"end":{"line":265,"column":56}},"56":{"start":{"line":265,"column":12},"end":{"line":265,"column":56}},"57":{"start":{"line":270,"column":8},"end":{"line":270,"column":88}},"58":{"start":{"line":270,"column":67},"end":{"line":270,"column":82}},"59":{"start":{"line":273,"column":8},"end":{"line":276,"column":87},"skip":true},"60":{"start":{"line":274,"column":12},"end":{"line":274,"column":55},"skip":true},"61":{"start":{"line":276,"column":12},"end":{"line":276,"column":87},"skip":true},"62":{"start":{"line":278,"column":8},"end":{"line":279,"column":36}},"63":{"start":{"line":279,"column":12},"end":{"line":279,"column":36}},"64":{"start":{"line":282,"column":4},"end":{"line":282,"column":87}},"65":{"start":{"line":284,"column":4},"end":{"line":284,"column":95}},"66":{"start":{"line":284,"column":77},"end":{"line":284,"column":89}},"67":{"start":{"line":286,"column":4},"end":{"line":288,"column":6}},"68":{"start":{"line":287,"column":8},"end":{"line":287,"column":47}},"69":{"start":{"line":290,"column":4},"end":{"line":290,"column":23}},"70":{"start":{"line":293,"column":0},"end":{"line":293,"column":25}},"71":{"start":{"line":311,"column":0},"end":{"line":311,"column":47}},"72":{"start":{"line":324,"column":0},"end":{"line":339,"column":2}},"73":{"start":{"line":325,"column":4},"end":{"line":325,"column":22}},"74":{"start":{"line":326,"column":4},"end":{"line":327,"column":36}},"75":{"start":{"line":327,"column":8},"end":{"line":327,"column":36}},"76":{"start":{"line":334,"column":4},"end":{"line":338,"column":6}},"77":{"start":{"line":335,"column":8},"end":{"line":337,"column":31}},"78":{"start":{"line":336,"column":12},"end":{"line":337,"column":31}},"79":{"start":{"line":337,"column":16},"end":{"line":337,"column":31}},"80":{"start":{"line":346,"column":0},"end":{"line":359,"column":2}},"81":{"start":{"line":354,"column":4},"end":{"line":358,"column":6}},"82":{"start":{"line":355,"column":8},"end":{"line":357,"column":43}},"83":{"start":{"line":356,"column":12},"end":{"line":357,"column":43}},"84":{"start":{"line":357,"column":16},"end":{"line":357,"column":43}},"85":{"start":{"line":369,"column":0},"end":{"line":379,"column":2},"skip":true},"86":{"start":{"line":370,"column":4},"end":{"line":378,"column":5},"skip":true},"87":{"start":{"line":371,"column":8},"end":{"line":377,"column":9},"skip":true},"88":{"start":{"line":372,"column":12},"end":{"line":373,"column":28},"skip":true},"89":{"start":{"line":374,"column":12},"end":{"line":375,"column":40},"skip":true},"90":{"start":{"line":375,"column":16},"end":{"line":375,"column":40},"skip":true},"91":{"start":{"line":376,"column":12},"end":{"line":376,"column":40},"skip":true},"92":{"start":{"line":385,"column":0},"end":{"line":389,"column":2}},"93":{"start":{"line":391,"column":0},"end":{"line":410,"column":2}},"94":{"start":{"line":392,"column":4},"end":{"line":392,"column":29}},"95":{"start":{"line":394,"column":4},"end":{"line":397,"column":5}},"96":{"start":{"line":395,"column":8},"end":{"line":395,"column":60},"skip":true},"97":{"start":{"line":396,"column":8},"end":{"line":396,"column":15},"skip":true},"98":{"start":{"line":400,"column":4},"end":{"line":404,"column":10}},"99":{"start":{"line":403,"column":12},"end":{"line":403,"column":47},"skip":true},"100":{"start":{"line":405,"column":4},"end":{"line":409,"column":10}},"101":{"start":{"line":408,"column":12},"end":{"line":408,"column":36},"skip":true}},"branchMap":{"1":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":34},"end":{"line":34,"column":51}},{"start":{"line":34,"column":81},"end":{"line":34,"column":83},"skip":true}]},"2":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":35},"end":{"line":41,"column":52}},{"start":{"line":41,"column":82},"end":{"line":41,"column":84},"skip":true}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":22},"end":{"line":49,"column":36}},{"start":{"line":49,"column":40},"end":{"line":49,"column":63}},{"start":{"line":49,"column":67},"end":{"line":49,"column":95}}]},"4":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":17},"end":{"line":57,"column":33}},{"start":{"line":57,"column":64},"end":{"line":59,"column":1},"skip":true}]},"5":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":11},"end":{"line":58,"column":36},"skip":true},{"start":{"line":58,"column":40},"end":{"line":58,"column":55},"skip":true},{"start":{"line":58,"column":59},"end":{"line":58,"column":86},"skip":true}]},"6":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":11},"end":{"line":67,"column":36}},{"start":{"line":67,"column":40},"end":{"line":67,"column":63}}]},"7":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":11},"end":{"line":76,"column":16}},{"start":{"line":76,"column":20},"end":{"line":76,"column":45}}]},"8":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"9":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":21}},{"start":{"line":97,"column":25},"end":{"line":97,"column":49}}]},"10":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":15},"end":{"line":98,"column":40}},{"start":{"line":98,"column":44},"end":{"line":98,"column":113}}]},"11":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":68},"end":{"line":98,"column":80}},{"start":{"line":98,"column":83},"end":{"line":98,"column":108}}]},"12":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":44},"end":{"line":117,"column":50}},{"start":{"line":117,"column":80},"end":{"line":117,"column":84},"skip":true}]},"13":{"line":150,"type":"cond-expr","locations":[{"start":{"line":151,"column":10},"end":{"line":153,"column":41},"skip":true},{"start":{"line":154,"column":10},"end":{"line":158,"column":45},"skip":true}]},"14":{"line":151,"type":"cond-expr","locations":[{"start":{"line":152,"column":14},"end":{"line":152,"column":51},"skip":true},{"start":{"line":153,"column":14},"end":{"line":153,"column":41},"skip":true}]},"15":{"line":154,"type":"cond-expr","locations":[{"start":{"line":155,"column":14},"end":{"line":155,"column":44},"skip":true},{"start":{"line":156,"column":14},"end":{"line":158,"column":45},"skip":true}]},"16":{"line":156,"type":"cond-expr","locations":[{"start":{"line":157,"column":18},"end":{"line":157,"column":29},"skip":true},{"start":{"line":158,"column":18},"end":{"line":158,"column":45},"skip":true}]},"17":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":49},"end":{"line":165,"column":59}},{"start":{"line":165,"column":89},"end":{"line":165,"column":94},"skip":true}]},"18":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":39},"end":{"line":181,"column":53},"skip":true},{"start":{"line":181,"column":84},"end":{"line":181,"column":103},"skip":true},{"start":{"line":181,"column":107},"end":{"line":181,"column":127},"skip":true}]},"19":{"line":210,"type":"cond-expr","locations":[{"start":{"line":211,"column":10},"end":{"line":211,"column":44}},{"start":{"line":212,"column":10},"end":{"line":212,"column":32}}]},"20":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"21":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":8},"end":{"line":238,"column":8}},{"start":{"line":238,"column":8},"end":{"line":238,"column":8}}]},"22":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":12},"end":{"line":238,"column":38}},{"start":{"line":238,"column":42},"end":{"line":238,"column":51}}]},"23":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":8},"end":{"line":264,"column":8}},{"start":{"line":264,"column":8},"end":{"line":264,"column":8}}]},"24":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":8},"end":{"line":273,"column":8},"skip":true},{"start":{"line":273,"column":8},"end":{"line":273,"column":8},"skip":true}]},"25":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":58},"end":{"line":276,"column":77},"skip":true},{"start":{"line":276,"column":81},"end":{"line":276,"column":83},"skip":true}]},"26":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":8},"end":{"line":278,"column":8}},{"start":{"line":278,"column":8},"end":{"line":278,"column":8}}]},"27":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":12},"end":{"line":336,"column":12}},{"start":{"line":336,"column":12},"end":{"line":336,"column":12}}]},"28":{"line":336,"type":"binary-expr","locations":[{"start":{"line":336,"column":16},"end":{"line":336,"column":39}},{"start":{"line":336,"column":43},"end":{"line":336,"column":70}},{"start":{"line":336,"column":74},"end":{"line":336,"column":96}}]},"29":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":12},"end":{"line":356,"column":12}},{"start":{"line":356,"column":12},"end":{"line":356,"column":12}}]},"30":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":4},"end":{"line":394,"column":4},"skip":true},{"start":{"line":394,"column":4},"end":{"line":394,"column":4}}]},"31":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":24},"end":{"line":400,"column":55}},{"start":{"line":400,"column":59},"end":{"line":400,"column":70}},{"start":{"line":402,"column":8},"end":{"line":404,"column":9},"skip":true}]},"32":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":31},"end":{"line":405,"column":49}},{"start":{"line":407,"column":8},"end":{"line":409,"column":9},"skip":true}]}},"code":["\"use strict\";","var util = exports;","","// used to return a Promise where callback is omitted","util.asPromise = require(\"@protobufjs/aspromise\");","","// converts to / from base64 encoded strings","util.base64 = require(\"@protobufjs/base64\");","","// base class of rpc.Service","util.EventEmitter = require(\"@protobufjs/eventemitter\");","","// float handling accross browsers","util.float = require(\"@protobufjs/float\");","","// requires modules optionally and hides the call from bundlers","util.inquire = require(\"@protobufjs/inquire\");","","// converts to / from utf8 encoded strings","util.utf8 = require(\"@protobufjs/utf8\");","","// provides a node-like buffer pool in the browser","util.pool = require(\"@protobufjs/pool\");","","// utility to work with the low and high bits of a 64 bit value","util.LongBits = require(\"./longbits\");","","/**"," * An immuable empty array."," * @memberof util"," * @type {Array.<*>}"," * @const"," */","util.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes","","/**"," * An immutable empty object."," * @type {Object}"," * @const"," */","util.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes","","/**"," * Whether running within node or not."," * @memberof util"," * @type {boolean}"," * @const"," */","util.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);","","/**"," * Tests if the specified value is an integer."," * @function"," * @param {*} value Value to test"," * @returns {boolean} `true` if the value is an integer"," */","util.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {","    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;","};","","/**"," * Tests if the specified value is a string."," * @param {*} value Value to test"," * @returns {boolean} `true` if the value is a string"," */","util.isString = function isString(value) {","    return typeof value === \"string\" || value instanceof String;","};","","/**"," * Tests if the specified value is a non-null object."," * @param {*} value Value to test"," * @returns {boolean} `true` if the value is a non-null object"," */","util.isObject = function isObject(value) {","    return value && typeof value === \"object\";","};","","/**"," * Checks if a property on a message is considered to be present."," * This is an alias of {@link util.isSet}."," * @function"," * @param {Object} obj Plain object or message instance"," * @param {string} prop Property name"," * @returns {boolean} `true` if considered to be present, otherwise `false`"," */","util.isset =","","/**"," * Checks if a property on a message is considered to be present."," * @param {Object} obj Plain object or message instance"," * @param {string} prop Property name"," * @returns {boolean} `true` if considered to be present, otherwise `false`"," */","util.isSet = function isSet(obj, prop) {","    var value = obj[prop];","    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins","        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;","    return false;","};","","/*"," * Any compatible Buffer instance."," * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings."," * @typedef Buffer"," * @type {Uint8Array}"," */","","/**"," * Node's Buffer class if available."," * @type {?function(new: Buffer)}"," */","util.Buffer = (function() {","    try {","        var Buffer = util.inquire(\"buffer\").Buffer;","        // refuse to use non-node buffers if not explicitly assigned (perf reasons):","        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;","    } catch (e) {","        /* istanbul ignore next */","        return null;","    }","})();","","/**"," * Internal alias of or polyfull for Buffer.from."," * @type {?function}"," * @param {string|number[]} value Value"," * @param {string} [encoding] Encoding if value is a string"," * @returns {Uint8Array}"," * @private"," */","util._Buffer_from = null;","","/**"," * Internal alias of or polyfill for Buffer.allocUnsafe."," * @type {?function}"," * @param {number} size Buffer size"," * @returns {Uint8Array}"," * @private"," */","util._Buffer_allocUnsafe = null;","","/**"," * Creates a new buffer of whatever type supported by the environment."," * @param {number|number[]} [sizeOrArray=0] Buffer size or number array"," * @returns {Uint8Array|Buffer} Buffer"," */","util.newBuffer = function newBuffer(sizeOrArray) {","    /* istanbul ignore next */","    return typeof sizeOrArray === \"number\"","        ? util.Buffer","            ? util._Buffer_allocUnsafe(sizeOrArray)","            : new util.Array(sizeOrArray)","        : util.Buffer","            ? util._Buffer_from(sizeOrArray)","            : typeof Uint8Array === \"undefined\"","                ? sizeOrArray","                : new Uint8Array(sizeOrArray);","};","","/**"," * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`."," * @type {?function(new: Uint8Array, *)}"," */","util.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;","","/*"," * Any compatible Long instance."," * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js."," * @typedef Long"," * @type {Object}"," * @property {number} low Low bits"," * @property {number} high High bits"," * @property {boolean} unsigned Whether unsigned or not"," */","","/**"," * Long.js's Long class if available."," * @type {?function(new: Long)}"," */","util.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");","","/**"," * Regular expression used to verify 2 bit (`bool`) map keys."," * @type {RegExp}"," * @const"," */","util.key2Re = /^true|false|0|1$/;","","/**"," * Regular expression used to verify 32 bit (`int32` etc.) map keys."," * @type {RegExp}"," * @const"," */","util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;","","/**"," * Regular expression used to verify 64 bit (`int64` etc.) map keys."," * @type {RegExp}"," * @const"," */","util.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;","","/**"," * Converts a number or long to an 8 characters long hash string."," * @param {Long|number} value Value to convert"," * @returns {string} Hash"," */","util.longToHash = function longToHash(value) {","    return value","        ? util.LongBits.from(value).toHash()","        : util.LongBits.zeroHash;","};","","/**"," * Converts an 8 characters long hash string to a long or number."," * @param {string} hash Hash"," * @param {boolean} [unsigned=false] Whether unsigned or not"," * @returns {Long|number} Original value"," */","util.longFromHash = function longFromHash(hash, unsigned) {","    var bits = util.LongBits.fromHash(hash);","    if (util.Long)","        return util.Long.fromBits(bits.lo, bits.hi, unsigned);","    return bits.toNumber(Boolean(unsigned));","};","","/**"," * Merges the properties of the source object into the destination object."," * @memberof util"," * @param {Object.<string,*>} dst Destination object"," * @param {Object.<string,*>} src Source object"," * @param {boolean} [ifNotSet=false] Merges only if the key is not already set"," * @returns {Object.<string,*>} Destination object"," */","function merge(dst, src, ifNotSet) { // used by converters","    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)","        if (dst[keys[i]] === undefined || !ifNotSet)","            dst[keys[i]] = src[keys[i]];","    return dst;","}","","util.merge = merge;","","/**"," * Converts the first character of a string to lower case."," * @param {string} str String to convert"," * @returns {string} Converted string"," */","util.lcFirst = function lcFirst(str) {","    return str.charAt(0).toLowerCase() + str.substring(1);","};","","/**"," * Creates a custom error constructor."," * @memberof util"," * @param {string} name Error name"," * @returns {function} Custom error constructor"," */","function newError(name) {","","    function CustomError(message, properties) {","","        if (!(this instanceof CustomError))","            return new CustomError(message, properties);","","        // Error.call(this, message);","        // ^ just returns a new error instance because the ctor can be called as a function","","        Object.defineProperty(this, \"message\", { get: function() { return message; } });","","        /* istanbul ignore next */","        if (Error.captureStackTrace) // node","            Error.captureStackTrace(this, CustomError);","        else","            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });","","        if (properties)","            merge(this, properties);","    }","","    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;","","    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });","","    CustomError.prototype.toString = function toString() {","        return this.name + \": \" + this.message;","    };","","    return CustomError;","}","","util.newError = newError;","","/**"," * Constructs a new protocol error."," * @classdesc Error subclass indicating a protocol specifc error."," * @memberof util"," * @extends Error"," * @constructor"," * @param {string} message Error message"," * @param {Object.<string,*>=} properties Additional properties"," * @example"," * try {"," *     MyMessage.decode(someBuffer); // throws if required fields are missing"," * } catch (e) {"," *     if (e instanceof ProtocolError && e.instance)"," *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));"," * }"," */","util.ProtocolError = newError(\"ProtocolError\");","","/**"," * So far decoded message instance."," * @name util.ProtocolError#instance"," * @type {Message}"," */","","/**"," * Builds a getter for a oneof's present field name."," * @param {string[]} fieldNames Field names"," * @returns {function():string|undefined} Unbound getter"," */","util.oneOfGetter = function getOneOf(fieldNames) {","    var fieldMap = {};","    for (var i = 0; i < fieldNames.length; ++i)","        fieldMap[fieldNames[i]] = 1;","","    /**","     * @returns {string|undefined} Set field name, if any","     * @this Object","     * @ignore","     */","    return function() { // eslint-disable-line consistent-return","        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)","            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)","                return keys[i];","    };","};","","/**"," * Builds a setter for a oneof's present field name."," * @param {string[]} fieldNames Field names"," * @returns {function(?string):undefined} Unbound setter"," */","util.oneOfSetter = function setOneOf(fieldNames) {","","    /**","     * @param {string} name Field name","     * @returns {undefined}","     * @this Object","     * @ignore","     */","    return function(name) {","        for (var i = 0; i < fieldNames.length; ++i)","            if (fieldNames[i] !== name)","                delete this[fieldNames[i]];","    };","};","","/* istanbul ignore next */","/**"," * Lazily resolves fully qualified type names against the specified root."," * @param {Root} root Root instanceof"," * @param {Object.<number,string|ReflectionObject>} lazyTypes Type names"," * @returns {undefined}"," * @deprecated since 6.7.0 static code does not emit lazy types anymore"," */","util.lazyResolve = function lazyResolve(root, lazyTypes) {","    for (var i = 0; i < lazyTypes.length; ++i) {","        for (var keys = Object.keys(lazyTypes[i]), j = 0; j < keys.length; ++j) {","            var path = lazyTypes[i][keys[j]].split(\".\"),","                ptr  = root;","            while (path.length)","                ptr = ptr[path.shift()];","            lazyTypes[i][keys[j]] = ptr;","        }","    }","};","","/**"," * Default conversion options used for {@link Message#toJSON} implementations. Longs, enums and bytes are converted to strings by default."," * @type {ConversionOptions}"," */","util.toJSONOptions = {","    longs: String,","    enums: String,","    bytes: String","};","","util._configure = function() {","    var Buffer = util.Buffer;","    /* istanbul ignore if */","    if (!Buffer) {","        util._Buffer_from = util._Buffer_allocUnsafe = null;","        return;","    }","    // because node 4.x buffers are incompatible & immutable","    // see: https://github.com/dcodeIO/protobuf.js/pull/665","    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||","        /* istanbul ignore next */","        function Buffer_from(value, encoding) {","            return new Buffer(value, encoding);","        };","    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||","        /* istanbul ignore next */","        function Buffer_allocUnsafe(size) {","            return new Buffer(size);","        };","};",""],"l":{"2":1,"5":1,"8":1,"11":1,"14":1,"17":1,"20":1,"23":1,"26":1,"34":1,"41":1,"49":1,"57":1,"58":1,"66":1,"67":0,"75":1,"76":0,"87":1,"96":0,"97":0,"98":0,"99":0,"113":1,"114":1,"115":1,"117":1,"120":1,"132":1,"141":1,"148":1,"150":1,"165":1,"181":1,"188":1,"195":1,"202":1,"209":1,"210":0,"221":1,"222":0,"223":0,"224":0,"225":0,"236":1,"237":1,"238":5,"239":5,"240":1,"243":1,"250":1,"251":0,"260":1,"262":1,"264":0,"265":0,"270":0,"273":1,"274":1,"276":1,"278":0,"279":0,"282":1,"284":1,"286":1,"287":0,"290":1,"293":1,"311":1,"324":1,"325":0,"326":0,"327":0,"334":0,"335":0,"336":0,"337":0,"346":1,"354":0,"355":0,"356":0,"357":0,"369":1,"370":1,"371":1,"372":1,"374":1,"375":1,"376":1,"385":1,"391":1,"392":1,"394":1,"395":1,"396":1,"400":1,"403":1,"405":1,"408":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/util/longbits.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/util/longbits.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":1,"48":0,"49":0,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"LongBits","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":16},"end":{"line":39,"column":27}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":32},"end":{"line":40,"column":43}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":14},"end":{"line":41,"column":25}}},"5":{"name":"fromNumber","line":55,"loc":{"start":{"line":55,"column":22},"end":{"line":55,"column":49}}},"6":{"name":"from","line":80,"loc":{"start":{"line":80,"column":16},"end":{"line":80,"column":37}}},"7":{"name":"toNumber","line":98,"loc":{"start":{"line":98,"column":30},"end":{"line":98,"column":58}}},"8":{"name":"toLong","line":114,"loc":{"start":{"line":114,"column":28},"end":{"line":114,"column":54}}},"9":{"name":"fromHash","line":128,"loc":{"start":{"line":128,"column":20},"end":{"line":128,"column":44}}},"10":{"name":"toHash","line":148,"loc":{"start":{"line":148,"column":28},"end":{"line":148,"column":46}}},"11":{"name":"zzEncode","line":165,"loc":{"start":{"line":165,"column":30},"end":{"line":165,"column":50}}},"12":{"name":"zzDecode","line":176,"loc":{"start":{"line":176,"column":30},"end":{"line":176,"column":50}}},"13":{"name":"length","line":187,"loc":{"start":{"line":187,"column":28},"end":{"line":187,"column":46}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":14,"column":0},"end":{"line":30,"column":1}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":23}},"5":{"start":{"line":29,"column":4},"end":{"line":29,"column":23}},"6":{"start":{"line":37,"column":0},"end":{"line":37,"column":46}},"7":{"start":{"line":39,"column":0},"end":{"line":39,"column":41}},"8":{"start":{"line":39,"column":29},"end":{"line":39,"column":38}},"9":{"start":{"line":40,"column":0},"end":{"line":40,"column":60}},"10":{"start":{"line":40,"column":45},"end":{"line":40,"column":57}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":39}},"12":{"start":{"line":41,"column":27},"end":{"line":41,"column":36}},"13":{"start":{"line":48,"column":0},"end":{"line":48,"column":54}},"14":{"start":{"line":55,"column":0},"end":{"line":73,"column":2}},"15":{"start":{"line":56,"column":4},"end":{"line":57,"column":20}},"16":{"start":{"line":57,"column":8},"end":{"line":57,"column":20}},"17":{"start":{"line":58,"column":4},"end":{"line":58,"column":25}},"18":{"start":{"line":59,"column":4},"end":{"line":60,"column":23}},"19":{"start":{"line":60,"column":8},"end":{"line":60,"column":23}},"20":{"start":{"line":61,"column":4},"end":{"line":62,"column":45}},"21":{"start":{"line":63,"column":4},"end":{"line":71,"column":5}},"22":{"start":{"line":64,"column":8},"end":{"line":64,"column":23}},"23":{"start":{"line":65,"column":8},"end":{"line":65,"column":23}},"24":{"start":{"line":66,"column":8},"end":{"line":70,"column":9}},"25":{"start":{"line":67,"column":12},"end":{"line":67,"column":19}},"26":{"start":{"line":68,"column":12},"end":{"line":69,"column":23}},"27":{"start":{"line":69,"column":16},"end":{"line":69,"column":23}},"28":{"start":{"line":72,"column":4},"end":{"line":72,"column":32}},"29":{"start":{"line":80,"column":0},"end":{"line":91,"column":2}},"30":{"start":{"line":81,"column":4},"end":{"line":82,"column":42}},"31":{"start":{"line":82,"column":8},"end":{"line":82,"column":42}},"32":{"start":{"line":83,"column":4},"end":{"line":89,"column":5}},"33":{"start":{"line":85,"column":8},"end":{"line":88,"column":60}},"34":{"start":{"line":86,"column":12},"end":{"line":86,"column":48}},"35":{"start":{"line":88,"column":12},"end":{"line":88,"column":60},"skip":true},"36":{"start":{"line":90,"column":4},"end":{"line":90,"column":92}},"37":{"start":{"line":98,"column":0},"end":{"line":107,"column":2}},"38":{"start":{"line":99,"column":4},"end":{"line":105,"column":5}},"39":{"start":{"line":100,"column":8},"end":{"line":101,"column":36}},"40":{"start":{"line":102,"column":8},"end":{"line":103,"column":30}},"41":{"start":{"line":103,"column":12},"end":{"line":103,"column":30}},"42":{"start":{"line":104,"column":8},"end":{"line":104,"column":39}},"43":{"start":{"line":106,"column":4},"end":{"line":106,"column":42}},"44":{"start":{"line":114,"column":0},"end":{"line":119,"column":2}},"45":{"start":{"line":115,"column":4},"end":{"line":118,"column":79}},"46":{"start":{"line":121,"column":0},"end":{"line":121,"column":45}},"47":{"start":{"line":128,"column":0},"end":{"line":142,"column":2}},"48":{"start":{"line":129,"column":4},"end":{"line":130,"column":20}},"49":{"start":{"line":130,"column":8},"end":{"line":130,"column":20}},"50":{"start":{"line":131,"column":4},"end":{"line":141,"column":6}},"51":{"start":{"line":148,"column":0},"end":{"line":159,"column":2}},"52":{"start":{"line":149,"column":4},"end":{"line":158,"column":6}},"53":{"start":{"line":165,"column":0},"end":{"line":170,"column":2}},"54":{"start":{"line":166,"column":4},"end":{"line":166,"column":31}},"55":{"start":{"line":167,"column":4},"end":{"line":167,"column":62}},"56":{"start":{"line":168,"column":4},"end":{"line":168,"column":62}},"57":{"start":{"line":169,"column":4},"end":{"line":169,"column":16}},"58":{"start":{"line":176,"column":0},"end":{"line":181,"column":2}},"59":{"start":{"line":177,"column":4},"end":{"line":177,"column":30}},"60":{"start":{"line":178,"column":4},"end":{"line":178,"column":62}},"61":{"start":{"line":179,"column":4},"end":{"line":179,"column":62}},"62":{"start":{"line":180,"column":4},"end":{"line":180,"column":16}},"63":{"start":{"line":187,"column":0},"end":{"line":200,"column":2}},"64":{"start":{"line":188,"column":4},"end":{"line":190,"column":32}},"65":{"start":{"line":191,"column":4},"end":{"line":199,"column":32}}},"branchMap":{"1":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"2":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"4":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":12}},{"start":{"line":68,"column":12},"end":{"line":68,"column":12}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"7":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"8":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8},"skip":true}]},"9":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":37},"end":{"line":90,"column":84}},{"start":{"line":90,"column":87},"end":{"line":90,"column":91}}]},"10":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":11},"end":{"line":90,"column":20}},{"start":{"line":90,"column":24},"end":{"line":90,"column":34}}]},"11":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"12":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":17}},{"start":{"line":99,"column":21},"end":{"line":99,"column":35}}]},"13":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":8}},{"start":{"line":102,"column":8},"end":{"line":102,"column":8}}]},"14":{"line":115,"type":"cond-expr","locations":[{"start":{"line":116,"column":10},"end":{"line":116,"column":68}},{"start":{"line":118,"column":10},"end":{"line":118,"column":78},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"16":{"line":191,"type":"cond-expr","locations":[{"start":{"line":192,"column":11},"end":{"line":198,"column":38}},{"start":{"line":199,"column":11},"end":{"line":199,"column":31}}]},"17":{"line":192,"type":"cond-expr","locations":[{"start":{"line":193,"column":13},"end":{"line":195,"column":38}},{"start":{"line":196,"column":13},"end":{"line":198,"column":38}}]},"18":{"line":193,"type":"cond-expr","locations":[{"start":{"line":194,"column":15},"end":{"line":194,"column":34}},{"start":{"line":195,"column":15},"end":{"line":195,"column":38}}]},"19":{"line":194,"type":"cond-expr","locations":[{"start":{"line":194,"column":29},"end":{"line":194,"column":30}},{"start":{"line":194,"column":33},"end":{"line":194,"column":34}}]},"20":{"line":195,"type":"cond-expr","locations":[{"start":{"line":195,"column":33},"end":{"line":195,"column":34}},{"start":{"line":195,"column":37},"end":{"line":195,"column":38}}]},"21":{"line":196,"type":"cond-expr","locations":[{"start":{"line":197,"column":15},"end":{"line":197,"column":34}},{"start":{"line":198,"column":15},"end":{"line":198,"column":38}}]},"22":{"line":197,"type":"cond-expr","locations":[{"start":{"line":197,"column":29},"end":{"line":197,"column":30}},{"start":{"line":197,"column":33},"end":{"line":197,"column":34}}]},"23":{"line":198,"type":"cond-expr","locations":[{"start":{"line":198,"column":33},"end":{"line":198,"column":34}},{"start":{"line":198,"column":37},"end":{"line":198,"column":38}}]},"24":{"line":199,"type":"cond-expr","locations":[{"start":{"line":199,"column":25},"end":{"line":199,"column":26}},{"start":{"line":199,"column":29},"end":{"line":199,"column":31}}]}},"code":["\"use strict\";","module.exports = LongBits;","","var util = require(\"../util/minimal\");","","/**"," * Constructs new long bits."," * @classdesc Helper class for working with the low and high bits of a 64 bit value."," * @memberof util"," * @constructor"," * @param {number} lo Low 32 bits, unsigned"," * @param {number} hi High 32 bits, unsigned"," */","function LongBits(lo, hi) {","","    // note that the casts below are theoretically unnecessary as of today, but older statically","    // generated converter code might still call the ctor with signed 32bits. kept for compat.","","    /**","     * Low bits.","     * @type {number}","     */","    this.lo = lo >>> 0;","","    /**","     * High bits.","     * @type {number}","     */","    this.hi = hi >>> 0;","}","","/**"," * Zero bits."," * @memberof util.LongBits"," * @type {util.LongBits}"," */","var zero = LongBits.zero = new LongBits(0, 0);","","zero.toNumber = function() { return 0; };","zero.zzEncode = zero.zzDecode = function() { return this; };","zero.length = function() { return 1; };","","/**"," * Zero hash."," * @memberof util.LongBits"," * @type {string}"," */","var zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";","","/**"," * Constructs new long bits from the specified number."," * @param {number} value Value"," * @returns {util.LongBits} Instance"," */","LongBits.fromNumber = function fromNumber(value) {","    if (value === 0)","        return zero;","    var sign = value < 0;","    if (sign)","        value = -value;","    var lo = value >>> 0,","        hi = (value - lo) / 4294967296 >>> 0;","    if (sign) {","        hi = ~hi >>> 0;","        lo = ~lo >>> 0;","        if (++lo > 4294967295) {","            lo = 0;","            if (++hi > 4294967295)","                hi = 0;","        }","    }","    return new LongBits(lo, hi);","};","","/**"," * Constructs new long bits from a number, long or string."," * @param {Long|number|string} value Value"," * @returns {util.LongBits} Instance"," */","LongBits.from = function from(value) {","    if (typeof value === \"number\")","        return LongBits.fromNumber(value);","    if (util.isString(value)) {","        /* istanbul ignore else */","        if (util.Long)","            value = util.Long.fromString(value);","        else","            return LongBits.fromNumber(parseInt(value, 10));","    }","    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;","};","","/**"," * Converts this long bits to a possibly unsafe JavaScript number."," * @param {boolean} [unsigned=false] Whether unsigned or not"," * @returns {number} Possibly unsafe number"," */","LongBits.prototype.toNumber = function toNumber(unsigned) {","    if (!unsigned && this.hi >>> 31) {","        var lo = ~this.lo + 1 >>> 0,","            hi = ~this.hi     >>> 0;","        if (!lo)","            hi = hi + 1 >>> 0;","        return -(lo + hi * 4294967296);","    }","    return this.lo + this.hi * 4294967296;","};","","/**"," * Converts this long bits to a long."," * @param {boolean} [unsigned=false] Whether unsigned or not"," * @returns {Long} Long"," */","LongBits.prototype.toLong = function toLong(unsigned) {","    return util.Long","        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))","        /* istanbul ignore next */","        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };","};","","var charCodeAt = String.prototype.charCodeAt;","","/**"," * Constructs new long bits from the specified 8 characters long hash."," * @param {string} hash Hash"," * @returns {util.LongBits} Bits"," */","LongBits.fromHash = function fromHash(hash) {","    if (hash === zeroHash)","        return zero;","    return new LongBits(","        ( charCodeAt.call(hash, 0)","        | charCodeAt.call(hash, 1) << 8","        | charCodeAt.call(hash, 2) << 16","        | charCodeAt.call(hash, 3) << 24) >>> 0","    ,","        ( charCodeAt.call(hash, 4)","        | charCodeAt.call(hash, 5) << 8","        | charCodeAt.call(hash, 6) << 16","        | charCodeAt.call(hash, 7) << 24) >>> 0","    );","};","","/**"," * Converts this long bits to a 8 characters long hash."," * @returns {string} Hash"," */","LongBits.prototype.toHash = function toHash() {","    return String.fromCharCode(","        this.lo        & 255,","        this.lo >>> 8  & 255,","        this.lo >>> 16 & 255,","        this.lo >>> 24      ,","        this.hi        & 255,","        this.hi >>> 8  & 255,","        this.hi >>> 16 & 255,","        this.hi >>> 24","    );","};","","/**"," * Zig-zag encodes this long bits."," * @returns {util.LongBits} `this`"," */","LongBits.prototype.zzEncode = function zzEncode() {","    var mask =   this.hi >> 31;","    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;","    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;","    return this;","};","","/**"," * Zig-zag decodes this long bits."," * @returns {util.LongBits} `this`"," */","LongBits.prototype.zzDecode = function zzDecode() {","    var mask = -(this.lo & 1);","    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;","    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;","    return this;","};","","/**"," * Calculates the length of this longbits when encoded as a varint."," * @returns {number} Length"," */","LongBits.prototype.length = function length() {","    var part0 =  this.lo,","        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,","        part2 =  this.hi >>> 24;","    return part2 === 0","         ? part1 === 0","           ? part0 < 16384","             ? part0 < 128 ? 1 : 2","             : part0 < 2097152 ? 3 : 4","           : part1 < 16384","             ? part1 < 128 ? 5 : 6","             : part1 < 2097152 ? 7 : 8","         : part2 < 128 ? 9 : 10;","};",""],"l":{"2":1,"4":1,"14":1,"23":1,"29":1,"37":1,"39":1,"40":1,"41":1,"48":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"72":0,"80":1,"81":0,"82":0,"83":0,"85":0,"86":0,"88":1,"90":0,"98":1,"99":0,"100":0,"102":0,"103":0,"104":0,"106":0,"114":1,"115":0,"121":1,"128":1,"129":0,"130":0,"131":0,"148":1,"149":0,"165":1,"166":0,"167":0,"168":0,"169":0,"176":1,"177":0,"178":0,"179":0,"180":0,"187":1,"188":0,"191":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/writer_buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/writer_buffer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[1,0],"2":[1,1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"BufferWriter","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}}},"2":{"name":"alloc_buffer","line":27,"loc":{"start":{"line":27,"column":21},"end":{"line":27,"column":49}}},"3":{"name":"writeBytesBuffer_set","line":32,"loc":{"start":{"line":32,"column":6},"end":{"line":32,"column":51}}},"4":{"name":"writeBytesBuffer_copy","line":37,"loc":{"start":{"line":37,"column":6},"end":{"line":37,"column":52}},"skip":true},"5":{"name":"write_bytes_buffer","line":47,"loc":{"start":{"line":47,"column":31},"end":{"line":47,"column":66}}},"6":{"name":"writeStringBuffer","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":42}}},"7":{"name":"write_string_buffer","line":67,"loc":{"start":{"line":67,"column":32},"end":{"line":67,"column":68}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":86}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}},"6":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":22}},"8":{"start":{"line":27,"column":0},"end":{"line":29,"column":2}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":65}},"10":{"start":{"line":31,"column":0},"end":{"line":42,"column":6}},"11":{"start":{"line":33,"column":8},"end":{"line":33,"column":26}},"12":{"start":{"line":38,"column":8},"end":{"line":41,"column":34},"skip":true},"13":{"start":{"line":39,"column":12},"end":{"line":39,"column":46},"skip":true},"14":{"start":{"line":40,"column":13},"end":{"line":41,"column":34},"skip":true},"15":{"start":{"line":41,"column":12},"end":{"line":41,"column":34},"skip":true},"16":{"start":{"line":47,"column":0},"end":{"line":55,"column":2}},"17":{"start":{"line":48,"column":4},"end":{"line":49,"column":51}},"18":{"start":{"line":49,"column":8},"end":{"line":49,"column":51}},"19":{"start":{"line":50,"column":4},"end":{"line":50,"column":33}},"20":{"start":{"line":51,"column":4},"end":{"line":51,"column":21}},"21":{"start":{"line":52,"column":4},"end":{"line":53,"column":48}},"22":{"start":{"line":53,"column":8},"end":{"line":53,"column":48}},"23":{"start":{"line":54,"column":4},"end":{"line":54,"column":16}},"24":{"start":{"line":57,"column":0},"end":{"line":62,"column":1}},"25":{"start":{"line":58,"column":4},"end":{"line":61,"column":32}},"26":{"start":{"line":59,"column":8},"end":{"line":59,"column":39}},"27":{"start":{"line":61,"column":8},"end":{"line":61,"column":32}},"28":{"start":{"line":67,"column":0},"end":{"line":73,"column":2}},"29":{"start":{"line":68,"column":4},"end":{"line":68,"column":39}},"30":{"start":{"line":69,"column":4},"end":{"line":69,"column":21}},"31":{"start":{"line":70,"column":4},"end":{"line":71,"column":49}},"32":{"start":{"line":71,"column":8},"end":{"line":71,"column":49}},"33":{"start":{"line":72,"column":4},"end":{"line":72,"column":16}}},"branchMap":{"1":{"line":31,"type":"cond-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":35,"column":5}},{"start":{"line":37,"column":6},"end":{"line":42,"column":5},"skip":true}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":23},"end":{"line":31,"column":29}},{"start":{"line":31,"column":33},"end":{"line":31,"column":71}},{"start":{"line":31,"column":75},"end":{"line":31,"column":110}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8},"skip":true},{"start":{"line":38,"column":8},"end":{"line":38,"column":8},"skip":true}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]}},"code":["\"use strict\";","module.exports = BufferWriter;","","// extends Writer","var Writer = require(\"./writer\");","(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;","","var util = require(\"./util/minimal\");","","var Buffer = util.Buffer;","","/**"," * Constructs a new buffer writer instance."," * @classdesc Wire format writer using node buffers."," * @extends Writer"," * @constructor"," */","function BufferWriter() {","    Writer.call(this);","}","","/**"," * Allocates a buffer of the specified size."," * @param {number} size Buffer size"," * @returns {Buffer} Buffer"," */","BufferWriter.alloc = function alloc_buffer(size) {","    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);","};","","var writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"","    ? function writeBytesBuffer_set(val, buf, pos) {","        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)","                           // also works for plain array values","    }","    /* istanbul ignore next */","    : function writeBytesBuffer_copy(val, buf, pos) {","        if (val.copy) // Buffer values","            val.copy(buf, pos, 0, val.length);","        else for (var i = 0; i < val.length;) // plain array values","            buf[pos++] = val[i++];","    };","","/**"," * @override"," */","BufferWriter.prototype.bytes = function write_bytes_buffer(value) {","    if (util.isString(value))","        value = util._Buffer_from(value, \"base64\");","    var len = value.length >>> 0;","    this.uint32(len);","    if (len)","        this.push(writeBytesBuffer, len, value);","    return this;","};","","function writeStringBuffer(val, buf, pos) {","    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)","        util.utf8.write(val, buf, pos);","    else","        buf.utf8Write(val, pos);","}","","/**"," * @override"," */","BufferWriter.prototype.string = function write_string_buffer(value) {","    var len = Buffer.byteLength(value);","    this.uint32(len);","    if (len)","        this.push(writeStringBuffer, len, value);","    return this;","};","","","/**"," * Finishes the write operation."," * @name BufferWriter#finish"," * @function"," * @returns {Buffer} Finished buffer"," */",""],"l":{"2":1,"5":1,"6":1,"8":1,"10":1,"18":1,"19":0,"27":1,"28":0,"31":1,"33":0,"38":1,"39":1,"40":1,"41":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"57":1,"58":0,"59":0,"61":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/reader.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/reader.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":1,"85":0,"86":1,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":1,"147":1,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0},"b":{"1":[0,0],"2":[1,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[1,0],"7":[0,0],"8":[1,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0,0,0],"35":[0,0],"36":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0},"fnMap":{"1":{"name":"indexOutOfRange","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"skip":true},"2":{"name":"Reader","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":24}}},"3":{"name":"create_typed_array","line":44,"loc":{"start":{"line":44,"column":6},"end":{"line":44,"column":42}}},"4":{"name":"create_array","line":50,"loc":{"start":{"line":50,"column":6},"end":{"line":50,"column":36}},"skip":true},"5":{"name":"create_buffer_setup","line":64,"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":43}}},"6":{"name":"create_buffer","line":65,"loc":{"start":{"line":65,"column":32},"end":{"line":65,"column":63}}},"7":{"name":"read_uint32_setup","line":82,"loc":{"start":{"line":82,"column":27},"end":{"line":82,"column":56}}},"8":{"name":"read_uint32","line":84,"loc":{"start":{"line":84,"column":11},"end":{"line":84,"column":34}}},"9":{"name":"read_int32","line":104,"loc":{"start":{"line":104,"column":25},"end":{"line":104,"column":47}}},"10":{"name":"read_sint32","line":112,"loc":{"start":{"line":112,"column":26},"end":{"line":112,"column":49}}},"11":{"name":"readLongVarint","line":119,"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":26}}},"12":{"name":"read_bool","line":199,"loc":{"start":{"line":199,"column":24},"end":{"line":199,"column":45}}},"13":{"name":"readFixed32_end","line":203,"loc":{"start":{"line":203,"column":0},"end":{"line":203,"column":35}}},"14":{"name":"read_fixed32","line":214,"loc":{"start":{"line":214,"column":27},"end":{"line":214,"column":51}}},"15":{"name":"read_sfixed32","line":227,"loc":{"start":{"line":227,"column":28},"end":{"line":227,"column":53}}},"16":{"name":"readFixed64","line":238,"loc":{"start":{"line":238,"column":0},"end":{"line":238,"column":41}}},"17":{"name":"read_float","line":268,"loc":{"start":{"line":268,"column":25},"end":{"line":268,"column":47}}},"18":{"name":"read_double","line":284,"loc":{"start":{"line":284,"column":26},"end":{"line":284,"column":49}}},"19":{"name":"read_bytes","line":299,"loc":{"start":{"line":299,"column":25},"end":{"line":299,"column":47}}},"20":{"name":"read_string","line":318,"loc":{"start":{"line":318,"column":26},"end":{"line":318,"column":49}}},"21":{"name":"skip","line":328,"loc":{"start":{"line":328,"column":24},"end":{"line":328,"column":46}}},"22":{"name":"(anonymous_22)","line":349,"loc":{"start":{"line":349,"column":28},"end":{"line":349,"column":47}}},"23":{"name":"(anonymous_23)","line":378,"loc":{"start":{"line":378,"column":20},"end":{"line":378,"column":44}}},"24":{"name":"read_int64","line":384,"loc":{"start":{"line":384,"column":15},"end":{"line":384,"column":37}}},"25":{"name":"read_uint64","line":388,"loc":{"start":{"line":388,"column":16},"end":{"line":388,"column":39}}},"26":{"name":"read_sint64","line":392,"loc":{"start":{"line":392,"column":16},"end":{"line":392,"column":39}}},"27":{"name":"read_fixed64","line":396,"loc":{"start":{"line":396,"column":17},"end":{"line":396,"column":41}}},"28":{"name":"read_sfixed64","line":400,"loc":{"start":{"line":400,"column":18},"end":{"line":400,"column":43}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"4":{"start":{"line":8,"column":0},"end":{"line":9,"column":26}},"5":{"start":{"line":12,"column":0},"end":{"line":14,"column":1},"skip":true},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":109},"skip":true},"7":{"start":{"line":22,"column":0},"end":{"line":41,"column":1}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":22}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":17}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":29}},"11":{"start":{"line":43,"column":0},"end":{"line":54,"column":6}},"12":{"start":{"line":45,"column":8},"end":{"line":46,"column":38}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":38}},"14":{"start":{"line":47,"column":8},"end":{"line":47,"column":38}},"15":{"start":{"line":51,"column":8},"end":{"line":52,"column":38},"skip":true},"16":{"start":{"line":52,"column":12},"end":{"line":52,"column":38},"skip":true},"17":{"start":{"line":53,"column":8},"end":{"line":53,"column":38},"skip":true},"18":{"start":{"line":63,"column":0},"end":{"line":73,"column":19}},"19":{"start":{"line":65,"column":8},"end":{"line":70,"column":19}},"20":{"start":{"line":66,"column":12},"end":{"line":69,"column":39}},"21":{"start":{"line":75,"column":0},"end":{"line":75,"column":113}},"22":{"start":{"line":82,"column":0},"end":{"line":98,"column":5}},"23":{"start":{"line":83,"column":4},"end":{"line":83,"column":27}},"24":{"start":{"line":84,"column":4},"end":{"line":97,"column":6}},"25":{"start":{"line":85,"column":8},"end":{"line":85,"column":65}},"26":{"start":{"line":85,"column":66},"end":{"line":85,"column":111}},"27":{"start":{"line":85,"column":98},"end":{"line":85,"column":111}},"28":{"start":{"line":86,"column":8},"end":{"line":86,"column":65}},"29":{"start":{"line":86,"column":66},"end":{"line":86,"column":111}},"30":{"start":{"line":86,"column":98},"end":{"line":86,"column":111}},"31":{"start":{"line":87,"column":8},"end":{"line":87,"column":65}},"32":{"start":{"line":87,"column":66},"end":{"line":87,"column":111}},"33":{"start":{"line":87,"column":98},"end":{"line":87,"column":111}},"34":{"start":{"line":88,"column":8},"end":{"line":88,"column":65}},"35":{"start":{"line":88,"column":66},"end":{"line":88,"column":111}},"36":{"start":{"line":88,"column":98},"end":{"line":88,"column":111}},"37":{"start":{"line":89,"column":8},"end":{"line":89,"column":65}},"38":{"start":{"line":89,"column":66},"end":{"line":89,"column":111}},"39":{"start":{"line":89,"column":98},"end":{"line":89,"column":111}},"40":{"start":{"line":92,"column":8},"end":{"line":95,"column":9}},"41":{"start":{"line":93,"column":12},"end":{"line":93,"column":32},"skip":true},"42":{"start":{"line":94,"column":12},"end":{"line":94,"column":44},"skip":true},"43":{"start":{"line":96,"column":8},"end":{"line":96,"column":21}},"44":{"start":{"line":104,"column":0},"end":{"line":106,"column":2}},"45":{"start":{"line":105,"column":4},"end":{"line":105,"column":29}},"46":{"start":{"line":112,"column":0},"end":{"line":115,"column":2}},"47":{"start":{"line":113,"column":4},"end":{"line":113,"column":30}},"48":{"start":{"line":114,"column":4},"end":{"line":114,"column":42}},"49":{"start":{"line":119,"column":0},"end":{"line":170,"column":1}},"50":{"start":{"line":121,"column":4},"end":{"line":121,"column":34}},"51":{"start":{"line":122,"column":4},"end":{"line":122,"column":14}},"52":{"start":{"line":123,"column":4},"end":{"line":149,"column":5}},"53":{"start":{"line":124,"column":8},"end":{"line":129,"column":9}},"54":{"start":{"line":126,"column":12},"end":{"line":126,"column":76}},"55":{"start":{"line":127,"column":12},"end":{"line":128,"column":28}},"56":{"start":{"line":128,"column":16},"end":{"line":128,"column":28}},"57":{"start":{"line":131,"column":8},"end":{"line":131,"column":69}},"58":{"start":{"line":132,"column":8},"end":{"line":132,"column":69}},"59":{"start":{"line":133,"column":8},"end":{"line":134,"column":24}},"60":{"start":{"line":134,"column":12},"end":{"line":134,"column":24}},"61":{"start":{"line":135,"column":8},"end":{"line":135,"column":14}},"62":{"start":{"line":137,"column":8},"end":{"line":145,"column":9}},"63":{"start":{"line":139,"column":12},"end":{"line":140,"column":44}},"64":{"start":{"line":140,"column":16},"end":{"line":140,"column":44},"skip":true},"65":{"start":{"line":142,"column":12},"end":{"line":142,"column":76}},"66":{"start":{"line":143,"column":12},"end":{"line":144,"column":28}},"67":{"start":{"line":144,"column":16},"end":{"line":144,"column":28}},"68":{"start":{"line":147,"column":8},"end":{"line":147,"column":74}},"69":{"start":{"line":148,"column":8},"end":{"line":148,"column":20}},"70":{"start":{"line":150,"column":4},"end":{"line":167,"column":5}},"71":{"start":{"line":151,"column":8},"end":{"line":156,"column":9}},"72":{"start":{"line":153,"column":12},"end":{"line":153,"column":80}},"73":{"start":{"line":154,"column":12},"end":{"line":155,"column":28}},"74":{"start":{"line":155,"column":16},"end":{"line":155,"column":28}},"75":{"start":{"line":158,"column":8},"end":{"line":166,"column":9}},"76":{"start":{"line":160,"column":12},"end":{"line":161,"column":44}},"77":{"start":{"line":161,"column":16},"end":{"line":161,"column":44},"skip":true},"78":{"start":{"line":163,"column":12},"end":{"line":163,"column":80}},"79":{"start":{"line":164,"column":12},"end":{"line":165,"column":28}},"80":{"start":{"line":165,"column":16},"end":{"line":165,"column":28}},"81":{"start":{"line":169,"column":4},"end":{"line":169,"column":43},"skip":true},"82":{"start":{"line":199,"column":0},"end":{"line":201,"column":2}},"83":{"start":{"line":200,"column":4},"end":{"line":200,"column":31}},"84":{"start":{"line":203,"column":0},"end":{"line":208,"column":1}},"85":{"start":{"line":204,"column":4},"end":{"line":207,"column":38}},"86":{"start":{"line":214,"column":0},"end":{"line":221,"column":2}},"87":{"start":{"line":217,"column":4},"end":{"line":218,"column":39}},"88":{"start":{"line":218,"column":8},"end":{"line":218,"column":39},"skip":true},"89":{"start":{"line":220,"column":4},"end":{"line":220,"column":52}},"90":{"start":{"line":227,"column":0},"end":{"line":234,"column":2}},"91":{"start":{"line":230,"column":4},"end":{"line":231,"column":39}},"92":{"start":{"line":231,"column":8},"end":{"line":231,"column":39},"skip":true},"93":{"start":{"line":233,"column":4},"end":{"line":233,"column":56}},"94":{"start":{"line":238,"column":0},"end":{"line":245,"column":1}},"95":{"start":{"line":241,"column":4},"end":{"line":242,"column":39}},"96":{"start":{"line":242,"column":8},"end":{"line":242,"column":39},"skip":true},"97":{"start":{"line":244,"column":4},"end":{"line":244,"column":108}},"98":{"start":{"line":268,"column":0},"end":{"line":277,"column":2}},"99":{"start":{"line":271,"column":4},"end":{"line":272,"column":39}},"100":{"start":{"line":272,"column":8},"end":{"line":272,"column":39},"skip":true},"101":{"start":{"line":274,"column":4},"end":{"line":274,"column":59}},"102":{"start":{"line":275,"column":4},"end":{"line":275,"column":18}},"103":{"start":{"line":276,"column":4},"end":{"line":276,"column":17}},"104":{"start":{"line":284,"column":0},"end":{"line":293,"column":2}},"105":{"start":{"line":287,"column":4},"end":{"line":288,"column":39}},"106":{"start":{"line":288,"column":8},"end":{"line":288,"column":39},"skip":true},"107":{"start":{"line":290,"column":4},"end":{"line":290,"column":60}},"108":{"start":{"line":291,"column":4},"end":{"line":291,"column":18}},"109":{"start":{"line":292,"column":4},"end":{"line":292,"column":17}},"110":{"start":{"line":299,"column":0},"end":{"line":312,"column":2}},"111":{"start":{"line":300,"column":4},"end":{"line":302,"column":35}},"112":{"start":{"line":305,"column":4},"end":{"line":306,"column":44}},"113":{"start":{"line":306,"column":8},"end":{"line":306,"column":44},"skip":true},"114":{"start":{"line":308,"column":4},"end":{"line":308,"column":23}},"115":{"start":{"line":309,"column":4},"end":{"line":311,"column":49}},"116":{"start":{"line":318,"column":0},"end":{"line":321,"column":2}},"117":{"start":{"line":319,"column":4},"end":{"line":319,"column":29}},"118":{"start":{"line":320,"column":4},"end":{"line":320,"column":45}},"119":{"start":{"line":328,"column":0},"end":{"line":342,"column":2}},"120":{"start":{"line":329,"column":4},"end":{"line":340,"column":5}},"121":{"start":{"line":331,"column":8},"end":{"line":332,"column":48}},"122":{"start":{"line":332,"column":12},"end":{"line":332,"column":48},"skip":true},"123":{"start":{"line":333,"column":8},"end":{"line":333,"column":27}},"124":{"start":{"line":335,"column":8},"end":{"line":339,"column":45}},"125":{"start":{"line":337,"column":12},"end":{"line":338,"column":44}},"126":{"start":{"line":338,"column":16},"end":{"line":338,"column":44},"skip":true},"127":{"start":{"line":341,"column":4},"end":{"line":341,"column":16}},"128":{"start":{"line":349,"column":0},"end":{"line":376,"column":2}},"129":{"start":{"line":350,"column":4},"end":{"line":374,"column":5}},"130":{"start":{"line":352,"column":12},"end":{"line":352,"column":24}},"131":{"start":{"line":353,"column":12},"end":{"line":353,"column":18}},"132":{"start":{"line":355,"column":12},"end":{"line":355,"column":25}},"133":{"start":{"line":356,"column":12},"end":{"line":356,"column":18}},"134":{"start":{"line":358,"column":12},"end":{"line":358,"column":37}},"135":{"start":{"line":359,"column":12},"end":{"line":359,"column":18}},"136":{"start":{"line":361,"column":12},"end":{"line":365,"column":27}},"137":{"start":{"line":362,"column":16},"end":{"line":363,"column":26}},"138":{"start":{"line":363,"column":20},"end":{"line":363,"column":26}},"139":{"start":{"line":364,"column":16},"end":{"line":364,"column":40}},"140":{"start":{"line":366,"column":12},"end":{"line":366,"column":18}},"141":{"start":{"line":368,"column":12},"end":{"line":368,"column":25}},"142":{"start":{"line":369,"column":12},"end":{"line":369,"column":18}},"143":{"start":{"line":373,"column":12},"end":{"line":373,"column":84},"skip":true},"144":{"start":{"line":375,"column":4},"end":{"line":375,"column":16}},"145":{"start":{"line":378,"column":0},"end":{"line":405,"column":2}},"146":{"start":{"line":379,"column":4},"end":{"line":379,"column":33}},"147":{"start":{"line":381,"column":4},"end":{"line":381,"column":74}},"148":{"start":{"line":382,"column":4},"end":{"line":404,"column":7}},"149":{"start":{"line":385,"column":12},"end":{"line":385,"column":56}},"150":{"start":{"line":389,"column":12},"end":{"line":389,"column":55}},"151":{"start":{"line":393,"column":12},"end":{"line":393,"column":67}},"152":{"start":{"line":397,"column":12},"end":{"line":397,"column":52}},"153":{"start":{"line":401,"column":12},"end":{"line":401,"column":53}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":69},"end":{"line":13,"column":80},"skip":true},{"start":{"line":13,"column":84},"end":{"line":13,"column":85},"skip":true}]},"2":{"line":43,"type":"cond-expr","locations":[{"start":{"line":44,"column":6},"end":{"line":48,"column":5}},{"start":{"line":50,"column":6},"end":{"line":54,"column":5},"skip":true}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"4":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":40}},{"start":{"line":45,"column":44},"end":{"line":45,"column":65}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8},"skip":true},{"start":{"line":51,"column":8},"end":{"line":51,"column":8},"skip":true}]},"6":{"line":63,"type":"cond-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":71,"column":5}},{"start":{"line":73,"column":6},"end":{"line":73,"column":18},"skip":true}]},"7":{"line":66,"type":"cond-expr","locations":[{"start":{"line":67,"column":18},"end":{"line":67,"column":42}},{"start":{"line":69,"column":18},"end":{"line":69,"column":38},"skip":true}]},"8":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":26},"end":{"line":75,"column":55}},{"start":{"line":75,"column":86},"end":{"line":75,"column":112},"skip":true}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":66},"end":{"line":85,"column":66}},{"start":{"line":85,"column":66},"end":{"line":85,"column":66}}]},"10":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":66},"end":{"line":86,"column":66}},{"start":{"line":86,"column":66},"end":{"line":86,"column":66}}]},"11":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":66},"end":{"line":87,"column":66}},{"start":{"line":87,"column":66},"end":{"line":87,"column":66}}]},"12":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":66},"end":{"line":88,"column":66}},{"start":{"line":88,"column":66},"end":{"line":88,"column":66}}]},"13":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":66},"end":{"line":89,"column":66}},{"start":{"line":89,"column":66},"end":{"line":89,"column":66}}]},"14":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8},"skip":true},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]},"15":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"16":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":12}},{"start":{"line":127,"column":12},"end":{"line":127,"column":12}}]},"17":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":8}},{"start":{"line":133,"column":8},"end":{"line":133,"column":8}}]},"18":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":12},"end":{"line":139,"column":12},"skip":true},{"start":{"line":139,"column":12},"end":{"line":139,"column":12}}]},"19":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":143,"column":12}},{"start":{"line":143,"column":12},"end":{"line":143,"column":12}}]},"20":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"21":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":12},"end":{"line":154,"column":12}},{"start":{"line":154,"column":12},"end":{"line":154,"column":12}}]},"22":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":160,"column":12},"skip":true},{"start":{"line":160,"column":12},"end":{"line":160,"column":12}}]},"23":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":12},"end":{"line":164,"column":12}},{"start":{"line":164,"column":12},"end":{"line":164,"column":12}}]},"24":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4},"skip":true},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]},"25":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4},"skip":true},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"26":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4},"skip":true},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"27":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4},"skip":true},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"28":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4},"skip":true},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"29":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":305,"column":4},"skip":true},{"start":{"line":305,"column":4},"end":{"line":305,"column":4}}]},"30":{"line":309,"type":"cond-expr","locations":[{"start":{"line":310,"column":10},"end":{"line":310,"column":37}},{"start":{"line":311,"column":10},"end":{"line":311,"column":48}}]},"31":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":329,"column":4}},{"start":{"line":329,"column":4},"end":{"line":329,"column":4}}]},"32":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":8},"end":{"line":331,"column":8},"skip":true},{"start":{"line":331,"column":8},"end":{"line":331,"column":8}}]},"33":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":12},"end":{"line":337,"column":12},"skip":true},{"start":{"line":337,"column":12},"end":{"line":337,"column":12}}]},"34":{"line":350,"type":"switch","locations":[{"start":{"line":351,"column":8},"end":{"line":353,"column":18}},{"start":{"line":354,"column":8},"end":{"line":356,"column":18}},{"start":{"line":357,"column":8},"end":{"line":359,"column":18}},{"start":{"line":360,"column":8},"end":{"line":366,"column":18}},{"start":{"line":367,"column":8},"end":{"line":369,"column":18}},{"start":{"line":372,"column":8},"end":{"line":373,"column":84},"skip":true}]},"35":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":16},"end":{"line":362,"column":16}},{"start":{"line":362,"column":16},"end":{"line":362,"column":16}}]},"36":{"line":381,"type":"cond-expr","locations":[{"start":{"line":381,"column":25},"end":{"line":381,"column":33}},{"start":{"line":381,"column":63},"end":{"line":381,"column":73},"skip":true}]}},"code":["\"use strict\";","module.exports = Reader;","","var util      = require(\"./util/minimal\");","","var BufferReader; // cyclic","","var LongBits  = util.LongBits,","    utf8      = util.utf8;","","/* istanbul ignore next */","function indexOutOfRange(reader, writeLength) {","    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);","}","","/**"," * Constructs a new reader instance using the specified buffer."," * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`."," * @constructor"," * @param {Uint8Array} buffer Buffer to read from"," */","function Reader(buffer) {","","    /**","     * Read buffer.","     * @type {Uint8Array}","     */","    this.buf = buffer;","","    /**","     * Read buffer position.","     * @type {number}","     */","    this.pos = 0;","","    /**","     * Read buffer length.","     * @type {number}","     */","    this.len = buffer.length;","}","","var create_array = typeof Uint8Array !== \"undefined\"","    ? function create_typed_array(buffer) {","        if (buffer instanceof Uint8Array || Array.isArray(buffer))","            return new Reader(buffer);","        throw Error(\"illegal buffer\");","    }","    /* istanbul ignore next */","    : function create_array(buffer) {","        if (Array.isArray(buffer))","            return new Reader(buffer);","        throw Error(\"illegal buffer\");","    };","","/**"," * Creates a new reader using the specified buffer."," * @function"," * @param {Uint8Array|Buffer} buffer Buffer to read from"," * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}"," * @throws {Error} If `buffer` is not a valid buffer"," */","Reader.create = util.Buffer","    ? function create_buffer_setup(buffer) {","        return (Reader.create = function create_buffer(buffer) {","            return util.Buffer.isBuffer(buffer)","                ? new BufferReader(buffer)","                /* istanbul ignore next */","                : create_array(buffer);","        })(buffer);","    }","    /* istanbul ignore next */","    : create_array;","","Reader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;","","/**"," * Reads a varint as an unsigned 32 bit value."," * @function"," * @returns {number} Value read"," */","Reader.prototype.uint32 = (function read_uint32_setup() {","    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)","    return function read_uint32() {","        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;","        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;","        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;","        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;","        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;","","        /* istanbul ignore if */","        if ((this.pos += 5) > this.len) {","            this.pos = this.len;","            throw indexOutOfRange(this, 10);","        }","        return value;","    };","})();","","/**"," * Reads a varint as a signed 32 bit value."," * @returns {number} Value read"," */","Reader.prototype.int32 = function read_int32() {","    return this.uint32() | 0;","};","","/**"," * Reads a zig-zag encoded varint as a signed 32 bit value."," * @returns {number} Value read"," */","Reader.prototype.sint32 = function read_sint32() {","    var value = this.uint32();","    return value >>> 1 ^ -(value & 1) | 0;","};","","/* eslint-disable no-invalid-this */","","function readLongVarint() {","    // tends to deopt with local vars for octet etc.","    var bits = new LongBits(0, 0);","    var i = 0;","    if (this.len - this.pos > 4) { // fast route (lo)","        for (; i < 4; ++i) {","            // 1st..4th","            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;","            if (this.buf[this.pos++] < 128)","                return bits;","        }","        // 5th","        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;","        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;","        if (this.buf[this.pos++] < 128)","            return bits;","        i = 0;","    } else {","        for (; i < 3; ++i) {","            /* istanbul ignore if */","            if (this.pos >= this.len)","                throw indexOutOfRange(this);","            // 1st..3th","            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;","            if (this.buf[this.pos++] < 128)","                return bits;","        }","        // 4th","        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;","        return bits;","    }","    if (this.len - this.pos > 4) { // fast route (hi)","        for (; i < 5; ++i) {","            // 6th..10th","            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;","            if (this.buf[this.pos++] < 128)","                return bits;","        }","    } else {","        for (; i < 5; ++i) {","            /* istanbul ignore if */","            if (this.pos >= this.len)","                throw indexOutOfRange(this);","            // 6th..10th","            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;","            if (this.buf[this.pos++] < 128)","                return bits;","        }","    }","    /* istanbul ignore next */","    throw Error(\"invalid varint encoding\");","}","","/* eslint-enable no-invalid-this */","","/**"," * Reads a varint as a signed 64 bit value."," * @name Reader#int64"," * @function"," * @returns {Long} Value read"," */","","/**"," * Reads a varint as an unsigned 64 bit value."," * @name Reader#uint64"," * @function"," * @returns {Long} Value read"," */","","/**"," * Reads a zig-zag encoded varint as a signed 64 bit value."," * @name Reader#sint64"," * @function"," * @returns {Long} Value read"," */","","/**"," * Reads a varint as a boolean."," * @returns {boolean} Value read"," */","Reader.prototype.bool = function read_bool() {","    return this.uint32() !== 0;","};","","function readFixed32_end(buf, end) { // note that this uses `end`, not `pos`","    return (buf[end - 4]","          | buf[end - 3] << 8","          | buf[end - 2] << 16","          | buf[end - 1] << 24) >>> 0;","}","","/**"," * Reads fixed 32 bits as an unsigned 32 bit integer."," * @returns {number} Value read"," */","Reader.prototype.fixed32 = function read_fixed32() {","","    /* istanbul ignore if */","    if (this.pos + 4 > this.len)","        throw indexOutOfRange(this, 4);","","    return readFixed32_end(this.buf, this.pos += 4);","};","","/**"," * Reads fixed 32 bits as a signed 32 bit integer."," * @returns {number} Value read"," */","Reader.prototype.sfixed32 = function read_sfixed32() {","","    /* istanbul ignore if */","    if (this.pos + 4 > this.len)","        throw indexOutOfRange(this, 4);","","    return readFixed32_end(this.buf, this.pos += 4) | 0;","};","","/* eslint-disable no-invalid-this */","","function readFixed64(/* this: Reader */) {","","    /* istanbul ignore if */","    if (this.pos + 8 > this.len)","        throw indexOutOfRange(this, 8);","","    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));","}","","/* eslint-enable no-invalid-this */","","/**"," * Reads fixed 64 bits."," * @name Reader#fixed64"," * @function"," * @returns {Long} Value read"," */","","/**"," * Reads zig-zag encoded fixed 64 bits."," * @name Reader#sfixed64"," * @function"," * @returns {Long} Value read"," */","","/**"," * Reads a float (32 bit) as a number."," * @function"," * @returns {number} Value read"," */","Reader.prototype.float = function read_float() {","","    /* istanbul ignore if */","    if (this.pos + 4 > this.len)","        throw indexOutOfRange(this, 4);","","    var value = util.float.readFloatLE(this.buf, this.pos);","    this.pos += 4;","    return value;","};","","/**"," * Reads a double (64 bit float) as a number."," * @function"," * @returns {number} Value read"," */","Reader.prototype.double = function read_double() {","","    /* istanbul ignore if */","    if (this.pos + 8 > this.len)","        throw indexOutOfRange(this, 4);","","    var value = util.float.readDoubleLE(this.buf, this.pos);","    this.pos += 8;","    return value;","};","","/**"," * Reads a sequence of bytes preceeded by its length as a varint."," * @returns {Uint8Array} Value read"," */","Reader.prototype.bytes = function read_bytes() {","    var length = this.uint32(),","        start  = this.pos,","        end    = this.pos + length;","","    /* istanbul ignore if */","    if (end > this.len)","        throw indexOutOfRange(this, length);","","    this.pos += length;","    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1","        ? new this.buf.constructor(0)","        : this._slice.call(this.buf, start, end);","};","","/**"," * Reads a string preceeded by its byte length as a varint."," * @returns {string} Value read"," */","Reader.prototype.string = function read_string() {","    var bytes = this.bytes();","    return utf8.read(bytes, 0, bytes.length);","};","","/**"," * Skips the specified number of bytes if specified, otherwise skips a varint."," * @param {number} [length] Length if known, otherwise a varint is assumed"," * @returns {Reader} `this`"," */","Reader.prototype.skip = function skip(length) {","    if (typeof length === \"number\") {","        /* istanbul ignore if */","        if (this.pos + length > this.len)","            throw indexOutOfRange(this, length);","        this.pos += length;","    } else {","        do {","            /* istanbul ignore if */","            if (this.pos >= this.len)","                throw indexOutOfRange(this);","        } while (this.buf[this.pos++] & 128);","    }","    return this;","};","","/**"," * Skips the next element of the specified wire type."," * @param {number} wireType Wire type received"," * @returns {Reader} `this`"," */","Reader.prototype.skipType = function(wireType) {","    switch (wireType) {","        case 0:","            this.skip();","            break;","        case 1:","            this.skip(8);","            break;","        case 2:","            this.skip(this.uint32());","            break;","        case 3:","            do { // eslint-disable-line no-constant-condition","                if ((wireType = this.uint32() & 7) === 4)","                    break;","                this.skipType(wireType);","            } while (true);","            break;","        case 5:","            this.skip(4);","            break;","","        /* istanbul ignore next */","        default:","            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);","    }","    return this;","};","","Reader._configure = function(BufferReader_) {","    BufferReader = BufferReader_;","","    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";","    util.merge(Reader.prototype, {","","        int64: function read_int64() {","            return readLongVarint.call(this)[fn](false);","        },","","        uint64: function read_uint64() {","            return readLongVarint.call(this)[fn](true);","        },","","        sint64: function read_sint64() {","            return readLongVarint.call(this).zzDecode()[fn](false);","        },","","        fixed64: function read_fixed64() {","            return readFixed64.call(this)[fn](true);","        },","","        sfixed64: function read_sfixed64() {","            return readFixed64.call(this)[fn](false);","        }","","    });","};",""],"l":{"2":1,"4":1,"6":1,"8":1,"12":1,"13":1,"22":1,"28":0,"34":0,"40":0,"43":1,"45":0,"46":0,"47":0,"51":1,"52":1,"53":1,"63":1,"65":0,"66":0,"75":1,"82":1,"83":1,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"92":0,"93":1,"94":1,"96":0,"104":1,"105":0,"112":1,"113":0,"114":0,"119":1,"121":0,"122":0,"123":0,"124":0,"126":0,"127":0,"128":0,"131":0,"132":0,"133":0,"134":0,"135":0,"137":0,"139":0,"140":1,"142":0,"143":0,"144":0,"147":0,"148":0,"150":0,"151":0,"153":0,"154":0,"155":0,"158":0,"160":0,"161":1,"163":0,"164":0,"165":0,"169":1,"199":1,"200":0,"203":1,"204":0,"214":1,"217":0,"218":1,"220":0,"227":1,"230":0,"231":1,"233":0,"238":1,"241":0,"242":1,"244":0,"268":1,"271":0,"272":1,"274":0,"275":0,"276":0,"284":1,"287":0,"288":1,"290":0,"291":0,"292":0,"299":1,"300":0,"305":0,"306":1,"308":0,"309":0,"318":1,"319":0,"320":0,"328":1,"329":0,"331":0,"332":1,"333":0,"335":0,"337":0,"338":1,"341":0,"349":1,"350":0,"352":0,"353":0,"355":0,"356":0,"358":0,"359":0,"361":0,"362":0,"363":0,"364":0,"366":0,"368":0,"369":0,"373":1,"375":0,"378":1,"379":1,"381":1,"382":1,"385":0,"389":0,"393":0,"397":0,"401":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/reader_buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/reader_buffer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0},"b":{"1":[1,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"BufferReader","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}}},"2":{"name":"read_string_buffer","line":34,"loc":{"start":{"line":34,"column":32},"end":{"line":34,"column":62}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":86}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"5":{"start":{"line":17,"column":0},"end":{"line":25,"column":1}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":30}},"7":{"start":{"line":28,"column":0},"end":{"line":29,"column":64}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":64}},"9":{"start":{"line":34,"column":0},"end":{"line":37,"column":2}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":28}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":87}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":0},"end":{"line":28,"column":0}},{"start":{"line":28,"column":0},"end":{"line":28,"column":0},"skip":true}]}},"code":["\"use strict\";","module.exports = BufferReader;","","// extends Reader","var Reader = require(\"./reader\");","(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;","","var util = require(\"./util/minimal\");","","/**"," * Constructs a new buffer reader instance."," * @classdesc Wire format reader using node buffers."," * @extends Reader"," * @constructor"," * @param {Buffer} buffer Buffer to read from"," */","function BufferReader(buffer) {","    Reader.call(this, buffer);","","    /**","     * Read buffer.","     * @name BufferReader#buf","     * @type {Buffer}","     */","}","","/* istanbul ignore else */","if (util.Buffer)","    BufferReader.prototype._slice = util.Buffer.prototype.slice;","","/**"," * @override"," */","BufferReader.prototype.string = function read_string_buffer() {","    var len = this.uint32(); // modifies pos","    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));","};","","/**"," * Reads a sequence of bytes preceeded by its length as a varint."," * @name BufferReader#bytes"," * @function"," * @returns {Buffer} Value read"," */",""],"l":{"2":1,"5":1,"6":1,"8":1,"17":1,"18":0,"28":1,"29":1,"34":1,"35":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/rpc.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/rpc.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"2":{"start":{"line":36,"column":0},"end":{"line":36,"column":39}}},"branchMap":{},"code":["\"use strict\";","","/**"," * Streaming RPC helpers."," * @namespace"," */","var rpc = exports;","","/**"," * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets."," * @typedef RPCImpl"," * @type {function}"," * @param {Method|rpc.ServiceMethod} method Reflected or static method being called"," * @param {Uint8Array} requestData Request data"," * @param {RPCImplCallback} callback Callback function"," * @returns {undefined}"," * @example"," * function rpcImpl(method, requestData, callback) {"," *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code"," *         throw Error(\"no such method\");"," *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {"," *         callback(err, responseData);"," *     });"," * }"," */","","/**"," * Node-style callback as used by {@link RPCImpl}."," * @typedef RPCImplCallback"," * @type {function}"," * @param {?Error} error Error, if any, otherwise `null`"," * @param {?Uint8Array} [response] Response data or `null` to signal end of stream, if there hasn't been an error"," * @returns {undefined}"," */","","rpc.Service = require(\"./rpc/service\");",""],"l":{"7":1,"36":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/rpc/service.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/rpc/service.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"Service","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":63}}},"2":{"name":"rpcCall","line":86,"loc":{"start":{"line":86,"column":28},"end":{"line":86,"column":99}}},"3":{"name":"(anonymous_3)","line":96,"loc":{"start":{"line":96,"column":19},"end":{"line":96,"column":30}}},"4":{"name":"rpcCallback","line":104,"loc":{"start":{"line":104,"column":12},"end":{"line":104,"column":48}}},"5":{"name":"(anonymous_5)","line":131,"loc":{"start":{"line":131,"column":19},"end":{"line":131,"column":30}}},"6":{"name":"end","line":141,"loc":{"start":{"line":141,"column":24},"end":{"line":141,"column":49}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":87}},"4":{"start":{"line":51,"column":0},"end":{"line":75,"column":1}},"5":{"start":{"line":53,"column":4},"end":{"line":54,"column":54}},"6":{"start":{"line":54,"column":8},"end":{"line":54,"column":54}},"7":{"start":{"line":56,"column":4},"end":{"line":56,"column":33}},"8":{"start":{"line":62,"column":4},"end":{"line":62,"column":27}},"9":{"start":{"line":68,"column":4},"end":{"line":68,"column":54}},"10":{"start":{"line":74,"column":4},"end":{"line":74,"column":56}},"11":{"start":{"line":86,"column":0},"end":{"line":134,"column":2}},"12":{"start":{"line":88,"column":4},"end":{"line":89,"column":53}},"13":{"start":{"line":89,"column":8},"end":{"line":89,"column":53}},"14":{"start":{"line":91,"column":4},"end":{"line":91,"column":20}},"15":{"start":{"line":92,"column":4},"end":{"line":93,"column":89}},"16":{"start":{"line":93,"column":8},"end":{"line":93,"column":89}},"17":{"start":{"line":95,"column":4},"end":{"line":98,"column":5}},"18":{"start":{"line":96,"column":8},"end":{"line":96,"column":72}},"19":{"start":{"line":96,"column":32},"end":{"line":96,"column":65}},"20":{"start":{"line":97,"column":8},"end":{"line":97,"column":25}},"21":{"start":{"line":100,"column":4},"end":{"line":133,"column":5}},"22":{"start":{"line":101,"column":8},"end":{"line":128,"column":10}},"23":{"start":{"line":106,"column":16},"end":{"line":109,"column":17}},"24":{"start":{"line":107,"column":20},"end":{"line":107,"column":52}},"25":{"start":{"line":108,"column":20},"end":{"line":108,"column":41}},"26":{"start":{"line":111,"column":16},"end":{"line":114,"column":17}},"27":{"start":{"line":112,"column":20},"end":{"line":112,"column":52}},"28":{"start":{"line":113,"column":20},"end":{"line":113,"column":37}},"29":{"start":{"line":116,"column":16},"end":{"line":123,"column":17}},"30":{"start":{"line":117,"column":20},"end":{"line":122,"column":21}},"31":{"start":{"line":118,"column":24},"end":{"line":118,"column":113}},"32":{"start":{"line":120,"column":24},"end":{"line":120,"column":56}},"33":{"start":{"line":121,"column":24},"end":{"line":121,"column":45}},"34":{"start":{"line":125,"column":16},"end":{"line":125,"column":52}},"35":{"start":{"line":126,"column":16},"end":{"line":126,"column":48}},"36":{"start":{"line":130,"column":8},"end":{"line":130,"column":40}},"37":{"start":{"line":131,"column":8},"end":{"line":131,"column":53}},"38":{"start":{"line":131,"column":32},"end":{"line":131,"column":46}},"39":{"start":{"line":132,"column":8},"end":{"line":132,"column":25}},"40":{"start":{"line":141,"column":0},"end":{"line":149,"column":2}},"41":{"start":{"line":142,"column":4},"end":{"line":147,"column":5}},"42":{"start":{"line":143,"column":8},"end":{"line":144,"column":43}},"43":{"start":{"line":144,"column":12},"end":{"line":144,"column":43}},"44":{"start":{"line":145,"column":8},"end":{"line":145,"column":28}},"45":{"start":{"line":146,"column":8},"end":{"line":146,"column":31}},"46":{"start":{"line":148,"column":4},"end":{"line":148,"column":16}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"2":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"3":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"4":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"5":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":48},"end":{"line":103,"column":65}},{"start":{"line":103,"column":68},"end":{"line":103,"column":76}}]},"6":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":16},"end":{"line":106,"column":16}},{"start":{"line":106,"column":16},"end":{"line":106,"column":16}}]},"7":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":16}},{"start":{"line":111,"column":16},"end":{"line":111,"column":16}}]},"8":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":16},"end":{"line":116,"column":16}},{"start":{"line":116,"column":16},"end":{"line":116,"column":16}}]},"9":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":73},"end":{"line":118,"column":90}},{"start":{"line":118,"column":93},"end":{"line":118,"column":101}}]},"10":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"11":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":8}},{"start":{"line":143,"column":8},"end":{"line":143,"column":8}}]}},"code":["\"use strict\";","module.exports = Service;","","var util = require(\"../util/minimal\");","","// Extends EventEmitter","(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;","","/**"," * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}."," *"," * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`."," * @typedef rpc.ServiceMethodCallback"," * @type {function}"," * @param {?Error} error Error, if any"," * @param {?Message} [response] Response message"," * @returns {undefined}"," */","","/**"," * A service method part of a {@link rpc.ServiceMethodMixin|ServiceMethodMixin} and thus {@link rpc.Service} as created by {@link Service.create}."," * @typedef rpc.ServiceMethod"," * @type {function}"," * @param {Message|Object.<string,*>} request Request message or plain object"," * @param {rpc.ServiceMethodCallback} [callback] Node-style callback called with the error, if any, and the response message"," * @returns {Promise<Message>} Promise if `callback` has been omitted, otherwise `undefined`"," */","","/**"," * A service method mixin."," *"," * When using TypeScript, mixed in service methods are only supported directly with a type definition of a static module (used with reflection). Otherwise, explicit casting is required."," * @typedef rpc.ServiceMethodMixin"," * @type {Object.<string,rpc.ServiceMethod>}"," * @example"," * // Explicit casting with TypeScript"," * (myRpcService[\"myMethod\"] as protobuf.rpc.ServiceMethod)(...)"," */","","/**"," * Constructs a new RPC service instance."," * @classdesc An RPC service as returned by {@link Service#create}."," * @exports rpc.Service"," * @extends util.EventEmitter"," * @augments rpc.ServiceMethodMixin"," * @constructor"," * @param {RPCImpl} rpcImpl RPC implementation"," * @param {boolean} [requestDelimited=false] Whether requests are length-delimited"," * @param {boolean} [responseDelimited=false] Whether responses are length-delimited"," */","function Service(rpcImpl, requestDelimited, responseDelimited) {","","    if (typeof rpcImpl !== \"function\")","        throw TypeError(\"rpcImpl must be a function\");","","    util.EventEmitter.call(this);","","    /**","     * RPC implementation. Becomes `null` once the service is ended.","     * @type {?RPCImpl}","     */","    this.rpcImpl = rpcImpl;","","    /**","     * Whether requests are length-delimited.","     * @type {boolean}","     */","    this.requestDelimited = Boolean(requestDelimited);","","    /**","     * Whether responses are length-delimited.","     * @type {boolean}","     */","    this.responseDelimited = Boolean(responseDelimited);","}","","/**"," * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}."," * @param {Method|rpc.ServiceMethod} method Reflected or static method"," * @param {function} requestCtor Request constructor"," * @param {function} responseCtor Response constructor"," * @param {Message|Object.<string,*>} request Request message or plain object"," * @param {rpc.ServiceMethodCallback} callback Service callback"," * @returns {undefined}"," */","Service.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {","","    if (!request)","        throw TypeError(\"request must be specified\");","","    var self = this;","    if (!callback)","        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);","","    if (!self.rpcImpl) {","        setTimeout(function() { callback(Error(\"already ended\")); }, 0);","        return undefined;","    }","","    try {","        return self.rpcImpl(","            method,","            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),","            function rpcCallback(err, response) {","","                if (err) {","                    self.emit(\"error\", err, method);","                    return callback(err);","                }","","                if (response === null) {","                    self.end(/* endedByRPC */ true);","                    return undefined;","                }","","                if (!(response instanceof responseCtor)) {","                    try {","                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);","                    } catch (err) {","                        self.emit(\"error\", err, method);","                        return callback(err);","                    }","                }","","                self.emit(\"data\", response, method);","                return callback(null, response);","            }","        );","    } catch (err) {","        self.emit(\"error\", err, method);","        setTimeout(function() { callback(err); }, 0);","        return undefined;","    }","};","","/**"," * Ends this service and emits the `end` event."," * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation."," * @returns {rpc.Service} `this`"," */","Service.prototype.end = function end(endedByRPC) {","    if (this.rpcImpl) {","        if (!endedByRPC) // signal end to rpcImpl","            this.rpcImpl(null, null, null);","        this.rpcImpl = null;","        this.emit(\"end\").off();","    }","    return this;","};",""],"l":{"2":1,"4":1,"7":1,"51":1,"53":0,"54":0,"56":0,"62":0,"68":0,"74":0,"86":1,"88":0,"89":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"100":0,"101":0,"106":0,"107":0,"108":0,"111":0,"112":0,"113":0,"116":0,"117":0,"118":0,"120":0,"121":0,"125":0,"126":0,"130":0,"131":0,"132":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"148":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/encoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/encoder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"genTypePartial","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":53}}},"2":{"name":"encoder","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":24}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":6,"column":33}},"3":{"start":{"line":17,"column":0},"end":{"line":21,"column":1}},"4":{"start":{"line":18,"column":4},"end":{"line":20,"column":111}},"5":{"start":{"line":28,"column":0},"end":{"line":100,"column":1}},"6":{"start":{"line":30,"column":4},"end":{"line":32,"column":30}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":15}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":90}},"9":{"start":{"line":39,"column":4},"end":{"line":95,"column":5}},"10":{"start":{"line":40,"column":8},"end":{"line":43,"column":41}},"11":{"start":{"line":44,"column":12},"end":{"line":44,"column":55}},"12":{"start":{"line":47,"column":8},"end":{"line":94,"column":9}},"13":{"start":{"line":48,"column":12},"end":{"line":51,"column":132}},"14":{"start":{"line":52,"column":12},"end":{"line":55,"column":77}},"15":{"start":{"line":52,"column":40},"end":{"line":53,"column":94}},"16":{"start":{"line":54,"column":17},"end":{"line":55,"column":77}},"17":{"start":{"line":56,"column":12},"end":{"line":58,"column":10}},"18":{"start":{"line":61,"column":15},"end":{"line":94,"column":9}},"19":{"start":{"line":61,"column":37},"end":{"line":62,"column":43}},"20":{"start":{"line":65,"column":12},"end":{"line":81,"column":13}},"21":{"start":{"line":65,"column":68},"end":{"line":70,"column":23}},"22":{"start":{"line":73,"column":21},"end":{"line":75,"column":46}},"23":{"start":{"line":76,"column":16},"end":{"line":79,"column":84}},"24":{"start":{"line":77,"column":12},"end":{"line":77,"column":59}},"25":{"start":{"line":78,"column":21},"end":{"line":79,"column":84}},"26":{"start":{"line":81,"column":14},"end":{"line":82,"column":10}},"27":{"start":{"line":86,"column":12},"end":{"line":87,"column":60}},"28":{"start":{"line":86,"column":32},"end":{"line":87,"column":60}},"29":{"start":{"line":89,"column":12},"end":{"line":92,"column":77}},"30":{"start":{"line":90,"column":8},"end":{"line":90,"column":47}},"31":{"start":{"line":91,"column":17},"end":{"line":92,"column":77}},"32":{"start":{"line":97,"column":4},"end":{"line":98,"column":17}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":19,"column":10},"end":{"line":19,"column":132}},{"start":{"line":20,"column":10},"end":{"line":20,"column":110}}]},"2":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":60},"end":{"line":42,"column":68}},{"start":{"line":42,"column":71},"end":{"line":42,"column":81}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":12}},{"start":{"line":52,"column":12},"end":{"line":52,"column":12}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":15},"end":{"line":61,"column":15}},{"start":{"line":61,"column":15},"end":{"line":61,"column":15}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"7":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":16},"end":{"line":65,"column":28}},{"start":{"line":65,"column":32},"end":{"line":65,"column":64}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":16},"end":{"line":76,"column":16}},{"start":{"line":76,"column":16},"end":{"line":76,"column":16}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":12}},{"start":{"line":86,"column":12},"end":{"line":86,"column":12}}]},"10":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":12}},{"start":{"line":89,"column":12},"end":{"line":89,"column":12}}]}},"code":["\"use strict\";","module.exports = encoder;","","var Enum     = require(\"./enum\"),","    types    = require(\"./types\"),","    util     = require(\"./util\");","","/**"," * Generates a partial message type encoder."," * @param {Codegen} gen Codegen instance"," * @param {Field} field Reflected field"," * @param {number} fieldIndex Field index"," * @param {string} ref Variable reference"," * @returns {Codegen} Codegen instance"," * @ignore"," */","function genTypePartial(gen, field, fieldIndex, ref) {","    return field.resolvedType.group","        ? gen(\"types[%d].encode(%s,w.uint32(%d)).uint32(%d)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)","        : gen(\"types[%d].encode(%s,w.uint32(%d).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);","}","","/**"," * Generates an encoder specific to the specified message type."," * @param {Type} mtype Message type"," * @returns {Codegen} Codegen instance"," */","function encoder(mtype) {","    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */","    var gen = util.codegen(\"m\", \"w\")","    (\"if(!w)\")","        (\"w=Writer.create()\");","","    var i, ref;","","    // \"when a message is serialized its known fields should be written sequentially by field number\"","    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);","","    for (var i = 0; i < fields.length; ++i) {","        var field    = fields[i].resolve(),","            index    = mtype._fieldsArray.indexOf(field),","            type     = field.resolvedType instanceof Enum ? \"uint32\" : field.type,","            wireType = types.basic[type];","            ref      = \"m\" + util.safeProp(field.name);","","        // Map fields","        if (field.map) {","            gen","    (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null","        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)","            (\"w.uint32(%d).fork().uint32(%d).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);","            if (wireType === undefined) gen","            (\"types[%d].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups","            else gen","            (\".uint32(%d).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);","            gen","        (\"}\")","    (\"}\");","","            // Repeated fields","        } else if (field.repeated) { gen","    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null","","            // Packed repeated","            if (field.packed && types.packed[type] !== undefined) { gen","","        (\"w.uint32(%d).fork()\", (field.id << 3 | 2) >>> 0)","        (\"for(var i=0;i<%s.length;++i)\", ref)","            (\"w.%s(%s[i])\", type, ref)","        (\"w.ldelim()\");","","            // Non-packed","            } else { gen","","        (\"for(var i=0;i<%s.length;++i)\", ref);","                if (wireType === undefined)","            genTypePartial(gen, field, index, ref + \"[i]\");","                else gen","            (\"w.uint32(%d).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);","","            } gen","    (\"}\");","","        // Non-repeated","        } else {","            if (field.optional) gen","    (\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null","","            if (wireType === undefined)","        genTypePartial(gen, field, index, ref);","            else gen","        (\"w.uint32(%d).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);","","        }","    }","","    return gen","    (\"return w\");","    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */","}"],"l":{"2":1,"4":1,"17":1,"18":0,"28":1,"30":0,"34":0,"37":0,"39":0,"40":0,"44":0,"47":0,"48":0,"52":0,"54":0,"56":0,"61":0,"65":0,"73":0,"76":0,"77":0,"78":0,"81":0,"86":0,"89":0,"90":0,"91":0,"97":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/enum.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/enum.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Enum","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"fromJSON","line":67,"loc":{"start":{"line":67,"column":16},"end":{"line":67,"column":46}}},"3":{"name":"toJSON","line":75,"loc":{"start":{"line":75,"column":24},"end":{"line":75,"column":42}}},"4":{"name":"(anonymous_4)","line":91,"loc":{"start":{"line":91,"column":21},"end":{"line":91,"column":49}}},"5":{"name":"(anonymous_5)","line":121,"loc":{"start":{"line":121,"column":24},"end":{"line":121,"column":39}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":22}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":101}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"5":{"start":{"line":19,"column":0},"end":{"line":50,"column":1}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":47}},"7":{"start":{"line":22,"column":4},"end":{"line":23,"column":52}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":52}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":25}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":49}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":23}},"12":{"start":{"line":47,"column":4},"end":{"line":49,"column":80}},"13":{"start":{"line":48,"column":8},"end":{"line":49,"column":80}},"14":{"start":{"line":49,"column":12},"end":{"line":49,"column":80}},"15":{"start":{"line":67,"column":0},"end":{"line":69,"column":2}},"16":{"start":{"line":68,"column":4},"end":{"line":68,"column":53}},"17":{"start":{"line":75,"column":0},"end":{"line":80,"column":2}},"18":{"start":{"line":76,"column":4},"end":{"line":79,"column":6}},"19":{"start":{"line":91,"column":0},"end":{"line":112,"column":2}},"20":{"start":{"line":94,"column":4},"end":{"line":95,"column":49}},"21":{"start":{"line":95,"column":8},"end":{"line":95,"column":49}},"22":{"start":{"line":97,"column":4},"end":{"line":98,"column":49}},"23":{"start":{"line":98,"column":8},"end":{"line":98,"column":49}},"24":{"start":{"line":100,"column":4},"end":{"line":101,"column":38}},"25":{"start":{"line":101,"column":8},"end":{"line":101,"column":38}},"26":{"start":{"line":103,"column":4},"end":{"line":108,"column":55}},"27":{"start":{"line":104,"column":8},"end":{"line":105,"column":40}},"28":{"start":{"line":105,"column":12},"end":{"line":105,"column":40}},"29":{"start":{"line":106,"column":8},"end":{"line":106,"column":31}},"30":{"start":{"line":108,"column":8},"end":{"line":108,"column":55}},"31":{"start":{"line":110,"column":4},"end":{"line":110,"column":42}},"32":{"start":{"line":111,"column":4},"end":{"line":111,"column":16}},"33":{"start":{"line":121,"column":0},"end":{"line":135,"column":2}},"34":{"start":{"line":123,"column":4},"end":{"line":124,"column":49}},"35":{"start":{"line":124,"column":8},"end":{"line":124,"column":49}},"36":{"start":{"line":126,"column":4},"end":{"line":126,"column":32}},"37":{"start":{"line":127,"column":4},"end":{"line":128,"column":43}},"38":{"start":{"line":128,"column":8},"end":{"line":128,"column":43}},"39":{"start":{"line":130,"column":4},"end":{"line":130,"column":32}},"40":{"start":{"line":131,"column":4},"end":{"line":131,"column":29}},"41":{"start":{"line":132,"column":4},"end":{"line":132,"column":31}},"42":{"start":{"line":134,"column":4},"end":{"line":134,"column":16}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":14}},{"start":{"line":22,"column":18},"end":{"line":22,"column":44}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"4":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"5":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"6":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"7":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"8":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"9":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":14},"end":{"line":104,"column":26}},{"start":{"line":104,"column":30},"end":{"line":104,"column":54}}]},"10":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":26},"end":{"line":110,"column":33}},{"start":{"line":110,"column":37},"end":{"line":110,"column":41}}]},"11":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"12":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]}},"code":["\"use strict\";","module.exports = Enum;","","// extends ReflectionObject","var ReflectionObject = require(\"./object\");","((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";","","var util = require(\"./util\");","","/**"," * Constructs a new enum instance."," * @classdesc Reflected enum."," * @extends ReflectionObject"," * @constructor"," * @param {string} name Unique name within its namespace"," * @param {Object.<string,number>} [values] Enum values as an object, by name"," * @param {Object.<string,*>} [options] Declared options"," */","function Enum(name, values, options) {","    ReflectionObject.call(this, name, options);","","    if (values && typeof values !== \"object\")","        throw TypeError(\"values must be an object\");","","    /**","     * Enum values by id.","     * @type {Object.<number,string>}","     */","    this.valuesById = {};","","    /**","     * Enum values by name.","     * @type {Object.<string,number>}","     */","    this.values = Object.create(this.valuesById); // toJSON, marker","","    /**","     * Value comment texts, if any.","     * @type {Object.<string,string>}","     */","    this.comments = {};","","    // Note that values inherit valuesById on their prototype which makes them a TypeScript-","    // compatible enum. This is used by pbts to write actual enum definitions that work for","    // static and reflection code alike instead of emitting generic object definitions.","","    if (values)","        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)","            this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];","}","","/**"," * Enum descriptor."," * @typedef EnumDescriptor"," * @type {Object}"," * @property {Object.<string,number>} values Enum values"," * @property {Object.<string,*>} [options] Enum options"," */","","/**"," * Constructs an enum from an enum descriptor."," * @param {string} name Enum name"," * @param {EnumDescriptor} json Enum descriptor"," * @returns {Enum} Created enum"," * @throws {TypeError} If arguments are invalid"," */","Enum.fromJSON = function fromJSON(name, json) {","    return new Enum(name, json.values, json.options);","};","","/**"," * Converts this enum to an enum descriptor."," * @returns {EnumDescriptor} Enum descriptor"," */","Enum.prototype.toJSON = function toJSON() {","    return {","        options : this.options,","        values  : this.values","    };","};","","/**"," * Adds a value to this enum."," * @param {string} name Value name"," * @param {number} id Value id"," * @param {?string} comment Comment, if any"," * @returns {Enum} `this`"," * @throws {TypeError} If arguments are invalid"," * @throws {Error} If there is already a value with this name or id"," */","Enum.prototype.add = function(name, id, comment) {","    // utilized by the parser but not by .fromJSON","","    if (!util.isString(name))","        throw TypeError(\"name must be a string\");","","    if (!util.isInteger(id))","        throw TypeError(\"id must be an integer\");","","    if (this.values[name] !== undefined)","        throw Error(\"duplicate name\");","","    if (this.valuesById[id] !== undefined) {","        if (!(this.options && this.options.allow_alias))","            throw Error(\"duplicate id\");","        this.values[name] = id;","    } else","        this.valuesById[this.values[name] = id] = name;","","    this.comments[name] = comment || null;","    return this;","};","","/**"," * Removes a value from this enum"," * @param {string} name Value name"," * @returns {Enum} `this`"," * @throws {TypeError} If arguments are invalid"," * @throws {Error} If `name` is not a name of this enum"," */","Enum.prototype.remove = function(name) {","","    if (!util.isString(name))","        throw TypeError(\"name must be a string\");","","    var val = this.values[name];","    if (val === undefined)","        throw Error(\"name does not exist\");","","    delete this.valuesById[val];","    delete this.values[name];","    delete this.comments[name];","","    return this;","};",""],"l":{"2":1,"5":1,"6":1,"8":1,"19":1,"20":0,"22":0,"23":0,"29":0,"35":0,"41":0,"47":0,"48":0,"49":0,"67":1,"68":0,"75":1,"76":0,"91":1,"94":0,"95":0,"97":0,"98":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"108":0,"110":0,"111":0,"121":1,"123":0,"124":0,"126":0,"127":0,"128":0,"130":0,"131":0,"132":0,"134":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/object.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/object.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":1,"67":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"fnMap":{"1":{"name":"ReflectionObject","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}}},"2":{"name":"(anonymous_2)","line":72,"loc":{"start":{"line":72,"column":13},"end":{"line":72,"column":24}}},"3":{"name":"(anonymous_3)","line":87,"loc":{"start":{"line":87,"column":13},"end":{"line":87,"column":24}}},"4":{"name":"toJSON","line":104,"loc":{"start":{"line":104,"column":63},"end":{"line":104,"column":81}},"skip":true},"5":{"name":"onAdd","line":113,"loc":{"start":{"line":113,"column":35},"end":{"line":113,"column":58}}},"6":{"name":"onRemove","line":128,"loc":{"start":{"line":128,"column":38},"end":{"line":128,"column":64}}},"7":{"name":"resolve","line":140,"loc":{"start":{"line":140,"column":37},"end":{"line":140,"column":56}}},"8":{"name":"getOption","line":153,"loc":{"start":{"line":153,"column":39},"end":{"line":153,"column":64}}},"9":{"name":"setOption","line":166,"loc":{"start":{"line":166,"column":39},"end":{"line":166,"column":81}}},"10":{"name":"setOptions","line":178,"loc":{"start":{"line":178,"column":40},"end":{"line":178,"column":79}}},"11":{"name":"toString","line":189,"loc":{"start":{"line":189,"column":38},"end":{"line":189,"column":58}}},"12":{"name":"(anonymous_12)","line":197,"loc":{"start":{"line":197,"column":30},"end":{"line":197,"column":46}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":9}},"5":{"start":{"line":18,"column":0},"end":{"line":61,"column":1}},"6":{"start":{"line":20,"column":4},"end":{"line":21,"column":49}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":49}},"8":{"start":{"line":23,"column":4},"end":{"line":24,"column":53}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":53}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":27}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":21}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":23}},"13":{"start":{"line":48,"column":4},"end":{"line":48,"column":26}},"14":{"start":{"line":54,"column":4},"end":{"line":54,"column":24}},"15":{"start":{"line":60,"column":4},"end":{"line":60,"column":25}},"16":{"start":{"line":63,"column":0},"end":{"line":97,"column":3}},"17":{"start":{"line":73,"column":12},"end":{"line":73,"column":27}},"18":{"start":{"line":74,"column":12},"end":{"line":75,"column":33}},"19":{"start":{"line":75,"column":16},"end":{"line":75,"column":33}},"20":{"start":{"line":76,"column":12},"end":{"line":76,"column":23}},"21":{"start":{"line":88,"column":12},"end":{"line":89,"column":34}},"22":{"start":{"line":90,"column":12},"end":{"line":93,"column":13}},"23":{"start":{"line":91,"column":16},"end":{"line":91,"column":39}},"24":{"start":{"line":92,"column":16},"end":{"line":92,"column":33}},"25":{"start":{"line":94,"column":12},"end":{"line":94,"column":34}},"26":{"start":{"line":104,"column":0},"end":{"line":106,"column":2}},"27":{"start":{"line":105,"column":4},"end":{"line":105,"column":18},"skip":true},"28":{"start":{"line":113,"column":0},"end":{"line":121,"column":2}},"29":{"start":{"line":114,"column":4},"end":{"line":115,"column":33}},"30":{"start":{"line":115,"column":8},"end":{"line":115,"column":33}},"31":{"start":{"line":116,"column":4},"end":{"line":116,"column":25}},"32":{"start":{"line":117,"column":4},"end":{"line":117,"column":26}},"33":{"start":{"line":118,"column":4},"end":{"line":118,"column":27}},"34":{"start":{"line":119,"column":4},"end":{"line":120,"column":30}},"35":{"start":{"line":120,"column":8},"end":{"line":120,"column":30}},"36":{"start":{"line":128,"column":0},"end":{"line":134,"column":2}},"37":{"start":{"line":129,"column":4},"end":{"line":129,"column":27}},"38":{"start":{"line":130,"column":4},"end":{"line":131,"column":33}},"39":{"start":{"line":131,"column":8},"end":{"line":131,"column":33}},"40":{"start":{"line":132,"column":4},"end":{"line":132,"column":23}},"41":{"start":{"line":133,"column":4},"end":{"line":133,"column":26}},"42":{"start":{"line":140,"column":0},"end":{"line":146,"column":2}},"43":{"start":{"line":141,"column":4},"end":{"line":142,"column":20}},"44":{"start":{"line":142,"column":8},"end":{"line":142,"column":20}},"45":{"start":{"line":143,"column":4},"end":{"line":144,"column":29}},"46":{"start":{"line":144,"column":8},"end":{"line":144,"column":29}},"47":{"start":{"line":145,"column":4},"end":{"line":145,"column":16}},"48":{"start":{"line":153,"column":0},"end":{"line":157,"column":2}},"49":{"start":{"line":154,"column":4},"end":{"line":155,"column":34}},"50":{"start":{"line":155,"column":8},"end":{"line":155,"column":34}},"51":{"start":{"line":156,"column":4},"end":{"line":156,"column":21}},"52":{"start":{"line":166,"column":0},"end":{"line":170,"column":2}},"53":{"start":{"line":167,"column":4},"end":{"line":168,"column":60}},"54":{"start":{"line":168,"column":8},"end":{"line":168,"column":60}},"55":{"start":{"line":169,"column":4},"end":{"line":169,"column":16}},"56":{"start":{"line":178,"column":0},"end":{"line":183,"column":2}},"57":{"start":{"line":179,"column":4},"end":{"line":181,"column":64}},"58":{"start":{"line":180,"column":8},"end":{"line":181,"column":64}},"59":{"start":{"line":181,"column":12},"end":{"line":181,"column":64}},"60":{"start":{"line":182,"column":4},"end":{"line":182,"column":16}},"61":{"start":{"line":189,"column":0},"end":{"line":195,"column":2}},"62":{"start":{"line":190,"column":4},"end":{"line":191,"column":34}},"63":{"start":{"line":192,"column":4},"end":{"line":193,"column":42}},"64":{"start":{"line":193,"column":8},"end":{"line":193,"column":42}},"65":{"start":{"line":194,"column":4},"end":{"line":194,"column":21}},"66":{"start":{"line":197,"column":0},"end":{"line":199,"column":2}},"67":{"start":{"line":198,"column":4},"end":{"line":198,"column":17}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"3":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":15}},{"start":{"line":23,"column":19},"end":{"line":23,"column":42}}]},"4":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"5":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":19}},{"start":{"line":114,"column":23},"end":{"line":114,"column":45}}]},"6":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"7":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"8":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"9":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"10":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"11":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"12":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":8},"end":{"line":167,"column":17}},{"start":{"line":167,"column":21},"end":{"line":167,"column":34}},{"start":{"line":167,"column":38},"end":{"line":167,"column":70}}]},"13":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":9},"end":{"line":168,"column":21}},{"start":{"line":168,"column":26},"end":{"line":168,"column":43}}]},"14":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"15":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]}},"code":["\"use strict\";","module.exports = ReflectionObject;","","ReflectionObject.className = \"ReflectionObject\";","","var util = require(\"./util\");","","var Root; // cyclic","","/**"," * Constructs a new reflection object instance."," * @classdesc Base class of all reflection objects."," * @constructor"," * @param {string} name Object name"," * @param {Object.<string,*>} [options] Declared options"," * @abstract"," */","function ReflectionObject(name, options) {","","    if (!util.isString(name))","        throw TypeError(\"name must be a string\");","","    if (options && !util.isObject(options))","        throw TypeError(\"options must be an object\");","","    /**","     * Options.","     * @type {Object.<string,*>|undefined}","     */","    this.options = options; // toJSON","","    /**","     * Unique name within its namespace.","     * @type {string}","     */","    this.name = name;","","    /**","     * Parent namespace.","     * @type {?Namespace}","     */","    this.parent = null;","","    /**","     * Whether already resolved or not.","     * @type {boolean}","     */","    this.resolved = false;","","    /**","     * Comment text, if any.","     * @type {?string}","     */","    this.comment = null;","","    /**","     * Defining file name.","     * @type {?string}","     */","    this.filename = null;","}","","Object.defineProperties(ReflectionObject.prototype, {","","    /**","     * Reference to the root namespace.","     * @name ReflectionObject#root","     * @type {Root}","     * @readonly","     */","    root: {","        get: function() {","            var ptr = this;","            while (ptr.parent !== null)","                ptr = ptr.parent;","            return ptr;","        }","    },","","    /**","     * Full name including leading dot.","     * @name ReflectionObject#fullName","     * @type {string}","     * @readonly","     */","    fullName: {","        get: function() {","            var path = [ this.name ],","                ptr = this.parent;","            while (ptr) {","                path.unshift(ptr.name);","                ptr = ptr.parent;","            }","            return path.join(\".\");","        }","    }","});","","/**"," * Converts this reflection object to its descriptor representation."," * @returns {Object.<string,*>} Descriptor"," * @abstract"," */","ReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {","    throw Error(); // not implemented, shouldn't happen","};","","/**"," * Called when this object is added to a parent."," * @param {ReflectionObject} parent Parent added to"," * @returns {undefined}"," */","ReflectionObject.prototype.onAdd = function onAdd(parent) {","    if (this.parent && this.parent !== parent)","        this.parent.remove(this);","    this.parent = parent;","    this.resolved = false;","    var root = parent.root;","    if (root instanceof Root)","        root._handleAdd(this);","};","","/**"," * Called when this object is removed from a parent."," * @param {ReflectionObject} parent Parent removed from"," * @returns {undefined}"," */","ReflectionObject.prototype.onRemove = function onRemove(parent) {","    var root = parent.root;","    if (root instanceof Root)","        root._handleRemove(this);","    this.parent = null;","    this.resolved = false;","};","","/**"," * Resolves this objects type references."," * @returns {ReflectionObject} `this`"," */","ReflectionObject.prototype.resolve = function resolve() {","    if (this.resolved)","        return this;","    if (this.root instanceof Root)","        this.resolved = true; // only if part of a root","    return this;","};","","/**"," * Gets an option value."," * @param {string} name Option name"," * @returns {*} Option value or `undefined` if not set"," */","ReflectionObject.prototype.getOption = function getOption(name) {","    if (this.options)","        return this.options[name];","    return undefined;","};","","/**"," * Sets an option."," * @param {string} name Option name"," * @param {*} value Option value"," * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set"," * @returns {ReflectionObject} `this`"," */","ReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {","    if (!ifNotSet || !this.options || this.options[name] === undefined)","        (this.options || (this.options = {}))[name] = value;","    return this;","};","","/**"," * Sets multiple options."," * @param {Object.<string,*>} options Options to set"," * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set"," * @returns {ReflectionObject} `this`"," */","ReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {","    if (options)","        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)","            this.setOption(keys[i], options[keys[i]], ifNotSet);","    return this;","};","","/**"," * Converts this instance to its string representation."," * @returns {string} Class name[, space, full name]"," */","ReflectionObject.prototype.toString = function toString() {","    var className = this.constructor.className,","        fullName  = this.fullName;","    if (fullName.length)","        return className + \" \" + fullName;","    return className;","};","","ReflectionObject._configure = function(Root_) {","    Root = Root_;","};",""],"l":{"2":1,"4":1,"6":1,"8":1,"18":1,"20":0,"21":0,"23":0,"24":0,"30":0,"36":0,"42":0,"48":0,"54":0,"60":0,"63":1,"73":0,"74":0,"75":0,"76":0,"88":0,"90":0,"91":0,"92":0,"94":0,"104":1,"105":1,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"153":1,"154":0,"155":0,"156":0,"166":1,"167":0,"168":0,"169":0,"178":1,"179":0,"180":0,"181":0,"182":0,"189":1,"190":0,"192":0,"193":0,"194":0,"197":1,"198":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/util.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"toArray","line":24,"loc":{"start":{"line":24,"column":15},"end":{"line":24,"column":40}}},"2":{"name":"safeProp","line":40,"loc":{"start":{"line":40,"column":16},"end":{"line":40,"column":40}}},"3":{"name":"ucFirst","line":49,"loc":{"start":{"line":49,"column":15},"end":{"line":49,"column":37}}},"4":{"name":"compareFieldsById","line":59,"loc":{"start":{"line":59,"column":25},"end":{"line":59,"column":58}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":54}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":46}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}},"6":{"start":{"line":24,"column":0},"end":{"line":30,"column":2}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":19}},"8":{"start":{"line":26,"column":4},"end":{"line":28,"column":40}},"9":{"start":{"line":27,"column":8},"end":{"line":28,"column":40}},"10":{"start":{"line":28,"column":12},"end":{"line":28,"column":40}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":17}},"12":{"start":{"line":32,"column":0},"end":{"line":33,"column":31}},"13":{"start":{"line":40,"column":0},"end":{"line":42,"column":2}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":102}},"15":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":58}},"17":{"start":{"line":59,"column":0},"end":{"line":61,"column":2}},"18":{"start":{"line":60,"column":4},"end":{"line":60,"column":23}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]}},"code":["\"use strict\";","","/**"," * Various utility functions."," * @namespace"," */","var util = module.exports = require(\"./util/minimal\");","","util.codegen = require(\"@protobufjs/codegen\");","util.fetch   = require(\"@protobufjs/fetch\");","util.path    = require(\"@protobufjs/path\");","","/**"," * Node's fs module if available."," * @type {Object.<string,*>}"," */","util.fs = util.inquire(\"fs\");","","/**"," * Converts an object's values to an array."," * @param {Object.<string,*>} object Object to convert"," * @returns {Array.<*>} Converted array"," */","util.toArray = function toArray(object) {","    var array = [];","    if (object)","        for (var keys = Object.keys(object), i = 0; i < keys.length; ++i)","            array.push(object[keys[i]]);","    return array;","};","","var safePropBackslashRe = /\\\\/g,","    safePropQuoteRe     = /\"/g;","","/**"," * Returns a safe property accessor for the specified properly name."," * @param {string} prop Property name"," * @returns {string} Safe accessor"," */","util.safeProp = function safeProp(prop) {","    return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";","};","","/**"," * Converts the first character of a string to upper case."," * @param {string} str String to convert"," * @returns {string} Converted string"," */","util.ucFirst = function ucFirst(str) {","    return str.charAt(0).toUpperCase() + str.substring(1);","};","","/**"," * Compares reflected fields by id."," * @param {Field} a First field"," * @param {Field} b Second field"," * @returns {number} Comparison value"," */","util.compareFieldsById = function compareFieldsById(a, b) {","    return a.id - b.id;","};",""],"l":{"7":1,"9":1,"10":1,"11":1,"17":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"32":1,"40":1,"41":0,"49":1,"50":0,"59":1,"60":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/types.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":5,"6":5,"7":5,"8":61,"9":5,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{},"f":{"1":5},"fnMap":{"1":{"name":"bake","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":30}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":20}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"3":{"start":{"line":11,"column":0},"end":{"line":27,"column":2}},"4":{"start":{"line":29,"column":0},"end":{"line":34,"column":1}},"5":{"start":{"line":30,"column":4},"end":{"line":30,"column":22}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":16}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":61}},"8":{"start":{"line":32,"column":30},"end":{"line":32,"column":61}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":13}},"10":{"start":{"line":56,"column":0},"end":{"line":72,"column":3}},"11":{"start":{"line":95,"column":0},"end":{"line":112,"column":3}},"12":{"start":{"line":124,"column":0},"end":{"line":130,"column":6}},"13":{"start":{"line":149,"column":0},"end":{"line":162,"column":6}},"14":{"start":{"line":182,"column":0},"end":{"line":196,"column":3}}},"branchMap":{},"code":["\"use strict\";","","/**"," * Common type constants."," * @namespace"," */","var types = exports;","","var util = require(\"./util\");","","var s = [","    \"double\",   // 0","    \"float\",    // 1","    \"int32\",    // 2","    \"uint32\",   // 3","    \"sint32\",   // 4","    \"fixed32\",  // 5","    \"sfixed32\", // 6","    \"int64\",    // 7","    \"uint64\",   // 8","    \"sint64\",   // 9","    \"fixed64\",  // 10","    \"sfixed64\", // 11","    \"bool\",     // 12","    \"string\",   // 13","    \"bytes\"     // 14","];","","function bake(values, offset) {","    var i = 0, o = {};","    offset |= 0;","    while (i < values.length) o[s[i + offset]] = values[i++];","    return o;","}","","/**"," * Basic type wire types."," * @type {Object.<string,number>}"," * @const"," * @property {number} double=1 Fixed64 wire type"," * @property {number} float=5 Fixed32 wire type"," * @property {number} int32=0 Varint wire type"," * @property {number} uint32=0 Varint wire type"," * @property {number} sint32=0 Varint wire type"," * @property {number} fixed32=5 Fixed32 wire type"," * @property {number} sfixed32=5 Fixed32 wire type"," * @property {number} int64=0 Varint wire type"," * @property {number} uint64=0 Varint wire type"," * @property {number} sint64=0 Varint wire type"," * @property {number} fixed64=1 Fixed64 wire type"," * @property {number} sfixed64=1 Fixed64 wire type"," * @property {number} bool=0 Varint wire type"," * @property {number} string=2 Ldelim wire type"," * @property {number} bytes=2 Ldelim wire type"," */","types.basic = bake([","    /* double   */ 1,","    /* float    */ 5,","    /* int32    */ 0,","    /* uint32   */ 0,","    /* sint32   */ 0,","    /* fixed32  */ 5,","    /* sfixed32 */ 5,","    /* int64    */ 0,","    /* uint64   */ 0,","    /* sint64   */ 0,","    /* fixed64  */ 1,","    /* sfixed64 */ 1,","    /* bool     */ 0,","    /* string   */ 2,","    /* bytes    */ 2","]);","","/**"," * Basic type defaults."," * @type {Object.<string,*>}"," * @const"," * @property {number} double=0 Double default"," * @property {number} float=0 Float default"," * @property {number} int32=0 Int32 default"," * @property {number} uint32=0 Uint32 default"," * @property {number} sint32=0 Sint32 default"," * @property {number} fixed32=0 Fixed32 default"," * @property {number} sfixed32=0 Sfixed32 default"," * @property {number} int64=0 Int64 default"," * @property {number} uint64=0 Uint64 default"," * @property {number} sint64=0 Sint32 default"," * @property {number} fixed64=0 Fixed64 default"," * @property {number} sfixed64=0 Sfixed64 default"," * @property {boolean} bool=false Bool default"," * @property {string} string=\"\" String default"," * @property {Array.<number>} bytes=Array(0) Bytes default"," * @property {Message} message=null Message default"," */","types.defaults = bake([","    /* double   */ 0,","    /* float    */ 0,","    /* int32    */ 0,","    /* uint32   */ 0,","    /* sint32   */ 0,","    /* fixed32  */ 0,","    /* sfixed32 */ 0,","    /* int64    */ 0,","    /* uint64   */ 0,","    /* sint64   */ 0,","    /* fixed64  */ 0,","    /* sfixed64 */ 0,","    /* bool     */ false,","    /* string   */ \"\",","    /* bytes    */ util.emptyArray,","    /* message  */ null","]);","","/**"," * Basic long type wire types."," * @type {Object.<string,number>}"," * @const"," * @property {number} int64=0 Varint wire type"," * @property {number} uint64=0 Varint wire type"," * @property {number} sint64=0 Varint wire type"," * @property {number} fixed64=1 Fixed64 wire type"," * @property {number} sfixed64=1 Fixed64 wire type"," */","types.long = bake([","    /* int64    */ 0,","    /* uint64   */ 0,","    /* sint64   */ 0,","    /* fixed64  */ 1,","    /* sfixed64 */ 1","], 7);","","/**"," * Allowed types for map keys with their associated wire type."," * @type {Object.<string,number>}"," * @const"," * @property {number} int32=0 Varint wire type"," * @property {number} uint32=0 Varint wire type"," * @property {number} sint32=0 Varint wire type"," * @property {number} fixed32=5 Fixed32 wire type"," * @property {number} sfixed32=5 Fixed32 wire type"," * @property {number} int64=0 Varint wire type"," * @property {number} uint64=0 Varint wire type"," * @property {number} sint64=0 Varint wire type"," * @property {number} fixed64=1 Fixed64 wire type"," * @property {number} sfixed64=1 Fixed64 wire type"," * @property {number} bool=0 Varint wire type"," * @property {number} string=2 Ldelim wire type"," */","types.mapKey = bake([","    /* int32    */ 0,","    /* uint32   */ 0,","    /* sint32   */ 0,","    /* fixed32  */ 5,","    /* sfixed32 */ 5,","    /* int64    */ 0,","    /* uint64   */ 0,","    /* sint64   */ 0,","    /* fixed64  */ 1,","    /* sfixed64 */ 1,","    /* bool     */ 0,","    /* string   */ 2","], 2);","","/**"," * Allowed types for packed repeated fields with their associated wire type."," * @type {Object.<string,number>}"," * @const"," * @property {number} double=1 Fixed64 wire type"," * @property {number} float=5 Fixed32 wire type"," * @property {number} int32=0 Varint wire type"," * @property {number} uint32=0 Varint wire type"," * @property {number} sint32=0 Varint wire type"," * @property {number} fixed32=5 Fixed32 wire type"," * @property {number} sfixed32=5 Fixed32 wire type"," * @property {number} int64=0 Varint wire type"," * @property {number} uint64=0 Varint wire type"," * @property {number} sint64=0 Varint wire type"," * @property {number} fixed64=1 Fixed64 wire type"," * @property {number} sfixed64=1 Fixed64 wire type"," * @property {number} bool=0 Varint wire type"," */","types.packed = bake([","    /* double   */ 1,","    /* float    */ 5,","    /* int32    */ 0,","    /* uint32   */ 0,","    /* sint32   */ 0,","    /* fixed32  */ 5,","    /* sfixed32 */ 5,","    /* int64    */ 0,","    /* uint64   */ 0,","    /* sint64   */ 0,","    /* fixed64  */ 1,","    /* sfixed64 */ 1,","    /* bool     */ 0","]);",""],"l":{"7":1,"9":1,"11":1,"29":1,"30":5,"31":5,"32":61,"33":5,"56":1,"95":1,"124":1,"149":1,"182":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/decoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/decoder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"missing","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":24}}},"2":{"name":"decoder","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":24}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":85},"end":{"line":22,"column":101}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":10,"column":1}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":51}},"5":{"start":{"line":17,"column":0},"end":{"line":106,"column":1}},"6":{"start":{"line":19,"column":4},"end":{"line":24,"column":29}},"7":{"start":{"line":22,"column":103},"end":{"line":22,"column":120}},"8":{"start":{"line":25,"column":4},"end":{"line":27,"column":22}},"9":{"start":{"line":25,"column":21},"end":{"line":27,"column":22}},"10":{"start":{"line":28,"column":4},"end":{"line":29,"column":27}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":14}},"12":{"start":{"line":32,"column":4},"end":{"line":87,"column":5}},"13":{"start":{"line":33,"column":8},"end":{"line":35,"column":52}},"14":{"start":{"line":35,"column":53},"end":{"line":36,"column":35}},"15":{"start":{"line":39,"column":8},"end":{"line":83,"column":41}},"16":{"start":{"line":39,"column":25},"end":{"line":44,"column":28}},"17":{"start":{"line":45,"column":12},"end":{"line":55,"column":13}},"18":{"start":{"line":46,"column":16},"end":{"line":49,"column":85}},"19":{"start":{"line":46,"column":53},"end":{"line":47,"column":106}},"20":{"start":{"line":48,"column":21},"end":{"line":49,"column":85}},"21":{"start":{"line":51,"column":16},"end":{"line":54,"column":44}},"22":{"start":{"line":51,"column":53},"end":{"line":52,"column":65}},"23":{"start":{"line":53,"column":21},"end":{"line":54,"column":44}},"24":{"start":{"line":58,"column":15},"end":{"line":83,"column":41}},"25":{"start":{"line":58,"column":37},"end":{"line":61,"column":35}},"26":{"start":{"line":64,"column":12},"end":{"line":69,"column":26}},"27":{"start":{"line":64,"column":50},"end":{"line":69,"column":26}},"28":{"start":{"line":72,"column":12},"end":{"line":76,"column":51}},"29":{"start":{"line":72,"column":49},"end":{"line":74,"column":73}},"30":{"start":{"line":75,"column":17},"end":{"line":76,"column":51}},"31":{"start":{"line":79,"column":15},"end":{"line":83,"column":41}},"32":{"start":{"line":79,"column":52},"end":{"line":81,"column":63}},"33":{"start":{"line":82,"column":13},"end":{"line":83,"column":41}},"34":{"start":{"line":84,"column":8},"end":{"line":85,"column":26}},"35":{"start":{"line":87,"column":6},"end":{"line":93,"column":10}},"36":{"start":{"line":96,"column":4},"end":{"line":101,"column":5}},"37":{"start":{"line":97,"column":8},"end":{"line":97,"column":43}},"38":{"start":{"line":98,"column":8},"end":{"line":100,"column":71}},"39":{"start":{"line":98,"column":29},"end":{"line":100,"column":71}},"40":{"start":{"line":103,"column":4},"end":{"line":104,"column":17}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":133},"end":{"line":22,"column":137}},{"start":{"line":22,"column":140},"end":{"line":22,"column":142}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":57},"end":{"line":34,"column":65}},{"start":{"line":34,"column":68},"end":{"line":34,"column":78}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":12}},{"start":{"line":45,"column":12},"end":{"line":45,"column":12}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":16}},{"start":{"line":46,"column":16},"end":{"line":46,"column":16}}]},"7":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":16},"end":{"line":51,"column":16}},{"start":{"line":51,"column":16},"end":{"line":51,"column":16}}]},"8":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":15},"end":{"line":58,"column":15}},{"start":{"line":58,"column":15},"end":{"line":58,"column":15}}]},"9":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":12}},{"start":{"line":64,"column":12},"end":{"line":64,"column":12}}]},"10":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":12}},{"start":{"line":72,"column":12},"end":{"line":72,"column":12}}]},"11":{"line":72,"type":"cond-expr","locations":[{"start":{"line":73,"column":22},"end":{"line":73,"column":52}},{"start":{"line":74,"column":22},"end":{"line":74,"column":63}}]},"12":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":15},"end":{"line":79,"column":15}},{"start":{"line":79,"column":15},"end":{"line":79,"column":15}}]},"13":{"line":79,"type":"cond-expr","locations":[{"start":{"line":80,"column":18},"end":{"line":80,"column":42}},{"start":{"line":81,"column":18},"end":{"line":81,"column":53}}]},"14":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]}},"code":["\"use strict\";","module.exports = decoder;","","var Enum    = require(\"./enum\"),","    types   = require(\"./types\"),","    util    = require(\"./util\");","","function missing(field) {","    return \"missing required '\" + field.name + \"'\";","}","","/**"," * Generates a decoder specific to the specified message type."," * @param {Type} mtype Message type"," * @returns {Codegen} Codegen instance"," */","function decoder(mtype) {","    /* eslint-disable no-unexpected-multiline */","    var gen = util.codegen(\"r\", \"l\")","    (\"if(!(r instanceof Reader))\")","        (\"r=Reader.create(r)\")","    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))","    (\"while(r.pos<c){\")","        (\"var t=r.uint32()\");","    if (mtype.group) gen","        (\"if((t&7)===4)\")","            (\"break\");","    gen","        (\"switch(t>>>3){\");","","    var i = 0;","    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {","        var field = mtype._fieldsArray[i].resolve(),","            type  = field.resolvedType instanceof Enum ? \"uint32\" : field.type,","            ref   = \"m\" + util.safeProp(field.name); gen","            (\"case %d:\", field.id);","","        // Map fields","        if (field.map) { gen","                (\"r.skip().pos++\") // assumes id 1 + key wireType","                (\"if(%s===util.emptyObject)\", ref)","                    (\"%s={}\", ref)","                (\"k=r.%s()\", field.keyType)","                (\"r.pos++\"); // assumes id 2 + value wireType","            if (types.long[field.keyType] !== undefined) {","                if (types.basic[type] === undefined) gen","                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%d].decode(r,r.uint32())\", ref, i); // can't be groups","                else gen","                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);","            } else {","                if (types.basic[type] === undefined) gen","                (\"%s[k]=types[%d].decode(r,r.uint32())\", ref, i); // can't be groups","                else gen","                (\"%s[k]=r.%s()\", ref, type);","            }","","        // Repeated fields","        } else if (field.repeated) { gen","","                (\"if(!(%s&&%s.length))\", ref, ref)","                    (\"%s=[]\", ref);","","            // Packable (always check for forward and backward compatiblity)","            if (types.packed[type] !== undefined) gen","                (\"if((t&7)===2){\")","                    (\"var c2=r.uint32()+r.pos\")","                    (\"while(r.pos<c2)\")","                        (\"%s.push(r.%s())\", ref, type)","                (\"}else\");","","            // Non-packed","            if (types.basic[type] === undefined) gen(field.resolvedType.group","                    ? \"%s.push(types[%d].decode(r))\"","                    : \"%s.push(types[%d].decode(r,r.uint32()))\", ref, i);","            else gen","                    (\"%s.push(r.%s())\", ref, type);","","        // Non-repeated","        } else if (types.basic[type] === undefined) gen(field.resolvedType.group","                ? \"%s=types[%d].decode(r)\"","                : \"%s=types[%d].decode(r,r.uint32())\", ref, i);","        else gen","                (\"%s=r.%s()\", ref, type);","        gen","                (\"break\");","    // Unknown fields","    } gen","            (\"default:\")","                (\"r.skipType(t&7)\")","                (\"break\")","","        (\"}\")","    (\"}\");","","    // Field presence","    for (i = 0; i < mtype._fieldsArray.length; ++i) {","        var rfield = mtype._fieldsArray[i];","        if (rfield.required) gen","    (\"if(!m.hasOwnProperty(%j))\", rfield.name)","        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));","    }","","    return gen","    (\"return m\");","    /* eslint-enable no-unexpected-multiline */","}",""],"l":{"2":1,"4":1,"8":1,"9":0,"17":1,"19":0,"22":0,"25":0,"28":0,"31":0,"32":0,"33":0,"35":0,"39":0,"45":0,"46":0,"48":0,"51":0,"53":0,"58":0,"64":0,"72":0,"75":0,"79":0,"82":0,"84":0,"87":0,"96":0,"97":0,"98":0,"103":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/verifier.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/verifier.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"8":[0,0,0,0,0,0,0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"invalid","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}}},"2":{"name":"genVerifyValue","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}}},"3":{"name":"genVerifyKey","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":39}}},"4":{"name":"verifier","line":118,"loc":{"start":{"line":118,"column":0},"end":{"line":118,"column":25}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":5,"column":34}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":172}},"5":{"start":{"line":20,"column":0},"end":{"line":75,"column":1}},"6":{"start":{"line":22,"column":4},"end":{"line":72,"column":5}},"7":{"start":{"line":23,"column":8},"end":{"line":35,"column":49}},"8":{"start":{"line":23,"column":50},"end":{"line":26,"column":63}},"9":{"start":{"line":27,"column":12},"end":{"line":28,"column":65}},"10":{"start":{"line":27,"column":97},"end":{"line":28,"column":65}},"11":{"start":{"line":29,"column":12},"end":{"line":31,"column":18}},"12":{"start":{"line":32,"column":15},"end":{"line":35,"column":49}},"13":{"start":{"line":37,"column":8},"end":{"line":71,"column":9}},"14":{"start":{"line":42,"column":29},"end":{"line":44,"column":60}},"15":{"start":{"line":45,"column":16},"end":{"line":45,"column":22}},"16":{"start":{"line":50,"column":29},"end":{"line":52,"column":65}},"17":{"start":{"line":53,"column":16},"end":{"line":53,"column":22}},"18":{"start":{"line":55,"column":27},"end":{"line":57,"column":59}},"19":{"start":{"line":58,"column":16},"end":{"line":58,"column":22}},"20":{"start":{"line":59,"column":25},"end":{"line":61,"column":60}},"21":{"start":{"line":62,"column":16},"end":{"line":62,"column":22}},"22":{"start":{"line":63,"column":27},"end":{"line":65,"column":59}},"23":{"start":{"line":66,"column":16},"end":{"line":66,"column":22}},"24":{"start":{"line":67,"column":26},"end":{"line":69,"column":59}},"25":{"start":{"line":70,"column":16},"end":{"line":70,"column":22}},"26":{"start":{"line":73,"column":4},"end":{"line":73,"column":15}},"27":{"start":{"line":85,"column":0},"end":{"line":111,"column":1}},"28":{"start":{"line":87,"column":4},"end":{"line":108,"column":5}},"29":{"start":{"line":92,"column":25},"end":{"line":94,"column":60}},"30":{"start":{"line":95,"column":12},"end":{"line":95,"column":18}},"31":{"start":{"line":100,"column":25},"end":{"line":102,"column":65}},"32":{"start":{"line":103,"column":12},"end":{"line":103,"column":18}},"33":{"start":{"line":104,"column":21},"end":{"line":106,"column":60}},"34":{"start":{"line":107,"column":12},"end":{"line":107,"column":18}},"35":{"start":{"line":109,"column":4},"end":{"line":109,"column":15}},"36":{"start":{"line":118,"column":0},"end":{"line":173,"column":1}},"37":{"start":{"line":121,"column":4},"end":{"line":123,"column":40}},"38":{"start":{"line":124,"column":4},"end":{"line":125,"column":28}},"39":{"start":{"line":126,"column":4},"end":{"line":127,"column":17}},"40":{"start":{"line":126,"column":23},"end":{"line":127,"column":17}},"41":{"start":{"line":129,"column":4},"end":{"line":169,"column":5}},"42":{"start":{"line":130,"column":8},"end":{"line":131,"column":52}},"43":{"start":{"line":133,"column":8},"end":{"line":134,"column":65}},"44":{"start":{"line":133,"column":28},"end":{"line":134,"column":65}},"45":{"start":{"line":137,"column":8},"end":{"line":166,"column":9}},"46":{"start":{"line":137,"column":25},"end":{"line":141,"column":45}},"47":{"start":{"line":142,"column":16},"end":{"line":142,"column":49}},"48":{"start":{"line":143,"column":16},"end":{"line":144,"column":18}},"49":{"start":{"line":147,"column":15},"end":{"line":166,"column":9}},"50":{"start":{"line":147,"column":37},"end":{"line":150,"column":51}},"51":{"start":{"line":151,"column":16},"end":{"line":152,"column":18}},"52":{"start":{"line":156,"column":12},"end":{"line":164,"column":13}},"53":{"start":{"line":157,"column":16},"end":{"line":157,"column":65}},"54":{"start":{"line":158,"column":16},"end":{"line":160,"column":70}},"55":{"start":{"line":158,"column":61},"end":{"line":160,"column":70}},"56":{"start":{"line":161,"column":16},"end":{"line":161,"column":54}},"57":{"start":{"line":162,"column":16},"end":{"line":163,"column":33}},"58":{"start":{"line":165,"column":12},"end":{"line":165,"column":47}},"59":{"start":{"line":167,"column":8},"end":{"line":168,"column":14}},"60":{"start":{"line":167,"column":28},"end":{"line":168,"column":14}},"61":{"start":{"line":170,"column":4},"end":{"line":171,"column":20}}},"branchMap":{"1":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":84},"end":{"line":8,"column":88}},{"start":{"line":8,"column":91},"end":{"line":8,"column":156}}]},"2":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":43},"end":{"line":8,"column":57}},{"start":{"line":8,"column":61},"end":{"line":8,"column":81}}]},"3":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":128},"end":{"line":8,"column":151}},{"start":{"line":8,"column":154},"end":{"line":8,"column":156}}]},"4":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":91},"end":{"line":8,"column":100}},{"start":{"line":8,"column":104},"end":{"line":8,"column":125}}]},"5":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"6":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"7":{"line":37,"type":"switch","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":25}},{"start":{"line":39,"column":12},"end":{"line":39,"column":26}},{"start":{"line":40,"column":12},"end":{"line":40,"column":26}},{"start":{"line":41,"column":12},"end":{"line":41,"column":27}},{"start":{"line":42,"column":12},"end":{"line":45,"column":22}},{"start":{"line":46,"column":12},"end":{"line":46,"column":25}},{"start":{"line":47,"column":12},"end":{"line":47,"column":26}},{"start":{"line":48,"column":12},"end":{"line":48,"column":26}},{"start":{"line":49,"column":12},"end":{"line":49,"column":27}},{"start":{"line":50,"column":12},"end":{"line":53,"column":22}},{"start":{"line":54,"column":12},"end":{"line":54,"column":25}},{"start":{"line":55,"column":12},"end":{"line":58,"column":22}},{"start":{"line":59,"column":12},"end":{"line":62,"column":22}},{"start":{"line":63,"column":12},"end":{"line":66,"column":22}},{"start":{"line":67,"column":12},"end":{"line":70,"column":22}}]},"8":{"line":87,"type":"switch","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":21}},{"start":{"line":89,"column":8},"end":{"line":89,"column":22}},{"start":{"line":90,"column":8},"end":{"line":90,"column":22}},{"start":{"line":91,"column":8},"end":{"line":91,"column":23}},{"start":{"line":92,"column":8},"end":{"line":95,"column":18}},{"start":{"line":96,"column":8},"end":{"line":96,"column":21}},{"start":{"line":97,"column":8},"end":{"line":97,"column":22}},{"start":{"line":98,"column":8},"end":{"line":98,"column":22}},{"start":{"line":99,"column":8},"end":{"line":99,"column":23}},{"start":{"line":100,"column":8},"end":{"line":103,"column":18}},{"start":{"line":104,"column":8},"end":{"line":107,"column":18}}]},"9":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":4}},{"start":{"line":126,"column":4},"end":{"line":126,"column":4}}]},"10":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":8}},{"start":{"line":133,"column":8},"end":{"line":133,"column":8}}]},"11":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]},"12":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":15},"end":{"line":147,"column":15}},{"start":{"line":147,"column":15},"end":{"line":147,"column":15}}]},"13":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":12},"end":{"line":156,"column":12}},{"start":{"line":156,"column":12},"end":{"line":156,"column":12}}]},"14":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":16},"end":{"line":158,"column":16}},{"start":{"line":158,"column":16},"end":{"line":158,"column":16}}]},"15":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":167,"column":8}},{"start":{"line":167,"column":8},"end":{"line":167,"column":8}}]}},"code":["\"use strict\";","module.exports = verifier;","","var Enum      = require(\"./enum\"),","    util      = require(\"./util\");","","function invalid(field, expected) {","    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";","}","","/**"," * Generates a partial value verifier."," * @param {Codegen} gen Codegen instance"," * @param {Field} field Reflected field"," * @param {number} fieldIndex Field index"," * @param {string} ref Variable reference"," * @returns {Codegen} Codegen instance"," * @ignore"," */","function genVerifyValue(gen, field, fieldIndex, ref) {","    /* eslint-disable no-unexpected-multiline */","    if (field.resolvedType) {","        if (field.resolvedType instanceof Enum) { gen","            (\"switch(%s){\", ref)","                (\"default:\")","                    (\"return%j\", invalid(field, \"enum value\"));","            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen","                (\"case %d:\", field.resolvedType.values[keys[j]]);","            gen","                    (\"break\")","            (\"}\");","        } else gen","            (\"var e=types[%d].verify(%s);\", fieldIndex, ref)","            (\"if(e)\")","                (\"return%j+e\", field.name + \".\");","    } else {","        switch (field.type) {","            case \"int32\":","            case \"uint32\":","            case \"sint32\":","            case \"fixed32\":","            case \"sfixed32\": gen","                (\"if(!util.isInteger(%s))\", ref)","                    (\"return%j\", invalid(field, \"integer\"));","                break;","            case \"int64\":","            case \"uint64\":","            case \"sint64\":","            case \"fixed64\":","            case \"sfixed64\": gen","                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)","                    (\"return%j\", invalid(field, \"integer|Long\"));","                break;","            case \"float\":","            case \"double\": gen","                (\"if(typeof %s!==\\\"number\\\")\", ref)","                    (\"return%j\", invalid(field, \"number\"));","                break;","            case \"bool\": gen","                (\"if(typeof %s!==\\\"boolean\\\")\", ref)","                    (\"return%j\", invalid(field, \"boolean\"));","                break;","            case \"string\": gen","                (\"if(!util.isString(%s))\", ref)","                    (\"return%j\", invalid(field, \"string\"));","                break;","            case \"bytes\": gen","                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)","                    (\"return%j\", invalid(field, \"buffer\"));","                break;","        }","    }","    return gen;","    /* eslint-enable no-unexpected-multiline */","}","","/**"," * Generates a partial key verifier."," * @param {Codegen} gen Codegen instance"," * @param {Field} field Reflected field"," * @param {string} ref Variable reference"," * @returns {Codegen} Codegen instance"," * @ignore"," */","function genVerifyKey(gen, field, ref) {","    /* eslint-disable no-unexpected-multiline */","    switch (field.keyType) {","        case \"int32\":","        case \"uint32\":","        case \"sint32\":","        case \"fixed32\":","        case \"sfixed32\": gen","            (\"if(!util.key32Re.test(%s))\", ref)","                (\"return%j\", invalid(field, \"integer key\"));","            break;","        case \"int64\":","        case \"uint64\":","        case \"sint64\":","        case \"fixed64\":","        case \"sfixed64\": gen","            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not","                (\"return%j\", invalid(field, \"integer|Long key\"));","            break;","        case \"bool\": gen","            (\"if(!util.key2Re.test(%s))\", ref)","                (\"return%j\", invalid(field, \"boolean key\"));","            break;","    }","    return gen;","    /* eslint-enable no-unexpected-multiline */","}","","/**"," * Generates a verifier specific to the specified message type."," * @param {Type} mtype Message type"," * @returns {Codegen} Codegen instance"," */","function verifier(mtype) {","    /* eslint-disable no-unexpected-multiline */","","    var gen = util.codegen(\"m\")","    (\"if(typeof m!==\\\"object\\\"||m===null)\")","        (\"return%j\", \"object expected\");","    var oneofs = mtype.oneofsArray,","        seenFirstField = {};","    if (oneofs.length) gen","    (\"var p={}\");","","    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {","        var field = mtype._fieldsArray[i].resolve(),","            ref   = \"m\" + util.safeProp(field.name);","","        if (field.optional) gen","        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null","","        // map fields","        if (field.map) { gen","            (\"if(!util.isObject(%s))\", ref)","                (\"return%j\", invalid(field, \"object\"))","            (\"var k=Object.keys(%s)\", ref)","            (\"for(var i=0;i<k.length;++i){\");","                genVerifyKey(gen, field, \"k[i]\");","                genVerifyValue(gen, field, i, ref + \"[k[i]]\")","            (\"}\");","","        // repeated fields","        } else if (field.repeated) { gen","            (\"if(!Array.isArray(%s))\", ref)","                (\"return%j\", invalid(field, \"array\"))","            (\"for(var i=0;i<%s.length;++i){\", ref);","                genVerifyValue(gen, field, i, ref + \"[i]\")","            (\"}\");","","        // required or present fields","        } else {","            if (field.partOf) {","                var oneofProp = util.safeProp(field.partOf.name);","                if (seenFirstField[field.partOf.name] === 1) gen","            (\"if(p%s===1)\", oneofProp)","                (\"return%j\", field.partOf.name + \": multiple values\");","                seenFirstField[field.partOf.name] = 1;","                gen","            (\"p%s=1\", oneofProp);","            }","            genVerifyValue(gen, field, i, ref);","        }","        if (field.optional) gen","        (\"}\");","    }","    return gen","    (\"return null\");","    /* eslint-enable no-unexpected-multiline */","}"],"l":{"2":1,"4":1,"7":1,"8":0,"20":1,"22":0,"23":0,"27":0,"29":0,"32":0,"37":0,"42":0,"45":0,"50":0,"53":0,"55":0,"58":0,"59":0,"62":0,"63":0,"66":0,"67":0,"70":0,"73":0,"85":1,"87":0,"92":0,"95":0,"100":0,"103":0,"104":0,"107":0,"109":0,"118":1,"121":0,"124":0,"126":0,"129":0,"130":0,"133":0,"137":0,"142":0,"143":0,"147":0,"151":0,"156":0,"157":0,"158":0,"161":0,"162":0,"165":0,"167":0,"170":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/converter.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/converter.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"genValuePartial_fromObject","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":66}}},"2":{"name":"fromObject","line":97,"loc":{"start":{"line":97,"column":23},"end":{"line":97,"column":50}}},"3":{"name":"genValuePartial_toObject","line":155,"loc":{"start":{"line":155,"column":0},"end":{"line":155,"column":64}}},"4":{"name":"toObject","line":194,"loc":{"start":{"line":194,"column":21},"end":{"line":194,"column":46}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"2":{"start":{"line":8,"column":0},"end":{"line":9,"column":29}},"3":{"start":{"line":20,"column":0},"end":{"line":90,"column":1}},"4":{"start":{"line":22,"column":4},"end":{"line":87,"column":5}},"5":{"start":{"line":23,"column":8},"end":{"line":38,"column":70}},"6":{"start":{"line":23,"column":50},"end":{"line":24,"column":35}},"7":{"start":{"line":25,"column":12},"end":{"line":33,"column":13}},"8":{"start":{"line":26,"column":16},"end":{"line":27,"column":29}},"9":{"start":{"line":26,"column":77},"end":{"line":27,"column":29}},"10":{"start":{"line":28,"column":16},"end":{"line":32,"column":30}},"11":{"start":{"line":33,"column":14},"end":{"line":34,"column":18}},"12":{"start":{"line":35,"column":15},"end":{"line":38,"column":70}},"13":{"start":{"line":40,"column":8},"end":{"line":40,"column":31}},"14":{"start":{"line":41,"column":8},"end":{"line":86,"column":9}},"15":{"start":{"line":43,"column":25},"end":{"line":44,"column":48}},"16":{"start":{"line":45,"column":16},"end":{"line":45,"column":22}},"17":{"start":{"line":47,"column":28},"end":{"line":48,"column":44}},"18":{"start":{"line":49,"column":16},"end":{"line":49,"column":22}},"19":{"start":{"line":52,"column":29},"end":{"line":53,"column":42}},"20":{"start":{"line":54,"column":16},"end":{"line":54,"column":22}},"21":{"start":{"line":56,"column":16},"end":{"line":56,"column":34}},"22":{"start":{"line":61,"column":29},"end":{"line":69,"column":129}},"23":{"start":{"line":70,"column":16},"end":{"line":70,"column":22}},"24":{"start":{"line":71,"column":26},"end":{"line":75,"column":44}},"25":{"start":{"line":76,"column":16},"end":{"line":76,"column":22}},"26":{"start":{"line":77,"column":27},"end":{"line":78,"column":48}},"27":{"start":{"line":79,"column":16},"end":{"line":79,"column":22}},"28":{"start":{"line":80,"column":25},"end":{"line":81,"column":49}},"29":{"start":{"line":82,"column":16},"end":{"line":82,"column":22}},"30":{"start":{"line":88,"column":4},"end":{"line":88,"column":15}},"31":{"start":{"line":97,"column":0},"end":{"line":144,"column":2}},"32":{"start":{"line":99,"column":4},"end":{"line":99,"column":35}},"33":{"start":{"line":100,"column":4},"end":{"line":102,"column":21}},"34":{"start":{"line":103,"column":4},"end":{"line":104,"column":29}},"35":{"start":{"line":103,"column":24},"end":{"line":104,"column":29}},"36":{"start":{"line":105,"column":4},"end":{"line":106,"column":28}},"37":{"start":{"line":107,"column":4},"end":{"line":141,"column":5}},"38":{"start":{"line":108,"column":8},"end":{"line":109,"column":47}},"39":{"start":{"line":112,"column":8},"end":{"line":140,"column":9}},"40":{"start":{"line":112,"column":25},"end":{"line":117,"column":68}},"41":{"start":{"line":118,"column":12},"end":{"line":120,"column":10}},"42":{"start":{"line":123,"column":15},"end":{"line":140,"column":9}},"43":{"start":{"line":123,"column":37},"end":{"line":128,"column":49}},"44":{"start":{"line":129,"column":12},"end":{"line":131,"column":10}},"45":{"start":{"line":135,"column":12},"end":{"line":136,"column":29}},"46":{"start":{"line":135,"column":55},"end":{"line":136,"column":29}},"47":{"start":{"line":137,"column":8},"end":{"line":137,"column":73}},"48":{"start":{"line":138,"column":12},"end":{"line":139,"column":10}},"49":{"start":{"line":138,"column":55},"end":{"line":139,"column":10}},"50":{"start":{"line":141,"column":6},"end":{"line":142,"column":17}},"51":{"start":{"line":155,"column":0},"end":{"line":187,"column":1}},"52":{"start":{"line":157,"column":4},"end":{"line":184,"column":5}},"53":{"start":{"line":158,"column":8},"end":{"line":161,"column":70}},"54":{"start":{"line":158,"column":48},"end":{"line":159,"column":93}},"55":{"start":{"line":160,"column":13},"end":{"line":161,"column":70}},"56":{"start":{"line":163,"column":8},"end":{"line":163,"column":31}},"57":{"start":{"line":164,"column":8},"end":{"line":183,"column":9}},"58":{"start":{"line":166,"column":16},"end":{"line":166,"column":34}},"59":{"start":{"line":171,"column":29},"end":{"line":175,"column":213}},"60":{"start":{"line":176,"column":16},"end":{"line":176,"column":22}},"61":{"start":{"line":177,"column":26},"end":{"line":178,"column":156}},"62":{"start":{"line":179,"column":16},"end":{"line":179,"column":22}},"63":{"start":{"line":180,"column":21},"end":{"line":181,"column":36}},"64":{"start":{"line":182,"column":16},"end":{"line":182,"column":22}},"65":{"start":{"line":185,"column":4},"end":{"line":185,"column":15}},"66":{"start":{"line":194,"column":0},"end":{"line":283,"column":2}},"67":{"start":{"line":196,"column":4},"end":{"line":196,"column":72}},"68":{"start":{"line":197,"column":4},"end":{"line":198,"column":43}},"69":{"start":{"line":198,"column":8},"end":{"line":198,"column":43}},"70":{"start":{"line":199,"column":4},"end":{"line":202,"column":17}},"71":{"start":{"line":204,"column":4},"end":{"line":207,"column":14}},"72":{"start":{"line":208,"column":4},"end":{"line":212,"column":44}},"73":{"start":{"line":209,"column":8},"end":{"line":212,"column":44}},"74":{"start":{"line":210,"column":12},"end":{"line":212,"column":44}},"75":{"start":{"line":214,"column":4},"end":{"line":220,"column":5}},"76":{"start":{"line":214,"column":33},"end":{"line":215,"column":34}},"77":{"start":{"line":216,"column":8},"end":{"line":217,"column":58}},"78":{"start":{"line":216,"column":52},"end":{"line":217,"column":58}},"79":{"start":{"line":218,"column":8},"end":{"line":219,"column":10}},"80":{"start":{"line":222,"column":4},"end":{"line":228,"column":5}},"81":{"start":{"line":222,"column":28},"end":{"line":223,"column":35}},"82":{"start":{"line":224,"column":8},"end":{"line":225,"column":53}},"83":{"start":{"line":224,"column":47},"end":{"line":225,"column":53}},"84":{"start":{"line":226,"column":8},"end":{"line":227,"column":10}},"85":{"start":{"line":230,"column":4},"end":{"line":249,"column":5}},"86":{"start":{"line":230,"column":31},"end":{"line":231,"column":24}},"87":{"start":{"line":232,"column":8},"end":{"line":247,"column":9}},"88":{"start":{"line":233,"column":12},"end":{"line":234,"column":50}},"89":{"start":{"line":235,"column":12},"end":{"line":246,"column":44}},"90":{"start":{"line":235,"column":52},"end":{"line":236,"column":114}},"91":{"start":{"line":237,"column":17},"end":{"line":246,"column":44}},"92":{"start":{"line":237,"column":33},"end":{"line":242,"column":109}},"93":{"start":{"line":243,"column":17},"end":{"line":246,"column":44}},"94":{"start":{"line":243,"column":34},"end":{"line":244,"column":168}},"95":{"start":{"line":245,"column":17},"end":{"line":246,"column":44}},"96":{"start":{"line":247,"column":10},"end":{"line":248,"column":10}},"97":{"start":{"line":250,"column":4},"end":{"line":250,"column":23}},"98":{"start":{"line":251,"column":4},"end":{"line":279,"column":5}},"99":{"start":{"line":252,"column":8},"end":{"line":254,"column":46}},"100":{"start":{"line":255,"column":8},"end":{"line":276,"column":9}},"101":{"start":{"line":256,"column":12},"end":{"line":258,"column":13}},"102":{"start":{"line":256,"column":27},"end":{"line":256,"column":41}},"103":{"start":{"line":256,"column":42},"end":{"line":257,"column":16}},"104":{"start":{"line":258,"column":14},"end":{"line":261,"column":43}},"105":{"start":{"line":262,"column":12},"end":{"line":263,"column":14}},"106":{"start":{"line":264,"column":15},"end":{"line":276,"column":9}},"107":{"start":{"line":264,"column":37},"end":{"line":267,"column":49}},"108":{"start":{"line":268,"column":12},"end":{"line":269,"column":14}},"109":{"start":{"line":270,"column":17},"end":{"line":271,"column":63}},"110":{"start":{"line":272,"column":8},"end":{"line":272,"column":71}},"111":{"start":{"line":273,"column":8},"end":{"line":275,"column":69}},"112":{"start":{"line":273,"column":26},"end":{"line":275,"column":69}},"113":{"start":{"line":277,"column":8},"end":{"line":278,"column":10}},"114":{"start":{"line":280,"column":4},"end":{"line":281,"column":17}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":16},"end":{"line":26,"column":16}},{"start":{"line":26,"column":16},"end":{"line":26,"column":16}}]},"4":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":20},"end":{"line":26,"column":34}},{"start":{"line":26,"column":38},"end":{"line":26,"column":75}}]},"5":{"line":41,"type":"switch","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":26}},{"start":{"line":43,"column":12},"end":{"line":45,"column":22}},{"start":{"line":46,"column":12},"end":{"line":46,"column":26}},{"start":{"line":47,"column":12},"end":{"line":49,"column":22}},{"start":{"line":50,"column":12},"end":{"line":50,"column":25}},{"start":{"line":51,"column":12},"end":{"line":51,"column":26}},{"start":{"line":52,"column":12},"end":{"line":54,"column":22}},{"start":{"line":55,"column":12},"end":{"line":56,"column":34}},{"start":{"line":58,"column":12},"end":{"line":58,"column":25}},{"start":{"line":59,"column":12},"end":{"line":59,"column":26}},{"start":{"line":60,"column":12},"end":{"line":60,"column":27}},{"start":{"line":61,"column":12},"end":{"line":70,"column":22}},{"start":{"line":71,"column":12},"end":{"line":76,"column":22}},{"start":{"line":77,"column":12},"end":{"line":79,"column":22}},{"start":{"line":80,"column":12},"end":{"line":82,"column":22}}]},"6":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":116},"end":{"line":69,"column":122}},{"start":{"line":69,"column":125},"end":{"line":69,"column":127}}]},"7":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"8":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":8}},{"start":{"line":112,"column":8},"end":{"line":112,"column":8}}]},"9":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":15},"end":{"line":123,"column":15}},{"start":{"line":123,"column":15},"end":{"line":123,"column":15}}]},"10":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":12},"end":{"line":135,"column":12}},{"start":{"line":135,"column":12},"end":{"line":135,"column":12}}]},"11":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":138,"column":12}},{"start":{"line":138,"column":12},"end":{"line":138,"column":12}}]},"12":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"13":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":8}},{"start":{"line":158,"column":8},"end":{"line":158,"column":8}}]},"14":{"line":164,"type":"switch","locations":[{"start":{"line":165,"column":12},"end":{"line":166,"column":34}},{"start":{"line":168,"column":12},"end":{"line":168,"column":25}},{"start":{"line":169,"column":12},"end":{"line":169,"column":26}},{"start":{"line":170,"column":12},"end":{"line":170,"column":27}},{"start":{"line":171,"column":12},"end":{"line":176,"column":22}},{"start":{"line":177,"column":12},"end":{"line":179,"column":22}},{"start":{"line":180,"column":12},"end":{"line":182,"column":22}}]},"15":{"line":175,"type":"cond-expr","locations":[{"start":{"line":175,"column":195},"end":{"line":175,"column":201}},{"start":{"line":175,"column":203},"end":{"line":175,"column":205}}]},"16":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"17":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":8}},{"start":{"line":209,"column":8},"end":{"line":209,"column":8}}]},"18":{"line":210,"type":"cond-expr","locations":[{"start":{"line":210,"column":45},"end":{"line":210,"column":59}},{"start":{"line":211,"column":14},"end":{"line":212,"column":26}}]},"19":{"line":211,"type":"cond-expr","locations":[{"start":{"line":211,"column":30},"end":{"line":211,"column":39}},{"start":{"line":212,"column":14},"end":{"line":212,"column":26}}]},"20":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"21":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"22":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"23":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":12},"end":{"line":235,"column":12}},{"start":{"line":235,"column":12},"end":{"line":235,"column":12}}]},"24":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":17},"end":{"line":237,"column":17}},{"start":{"line":237,"column":17},"end":{"line":237,"column":17}}]},"25":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":17},"end":{"line":243,"column":17}},{"start":{"line":243,"column":17},"end":{"line":243,"column":17}}]},"26":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":8},"end":{"line":255,"column":8}},{"start":{"line":255,"column":8},"end":{"line":255,"column":8}}]},"27":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":12},"end":{"line":256,"column":12}},{"start":{"line":256,"column":12},"end":{"line":256,"column":12}}]},"28":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":15},"end":{"line":264,"column":15}},{"start":{"line":264,"column":15},"end":{"line":264,"column":15}}]},"29":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":8},"end":{"line":273,"column":8}},{"start":{"line":273,"column":8},"end":{"line":273,"column":8}}]}},"code":["\"use strict\";","/**"," * Runtime message from/to plain object converters."," * @namespace"," */","var converter = exports;","","var Enum = require(\"./enum\"),","    util = require(\"./util\");","","/**"," * Generates a partial value fromObject conveter."," * @param {Codegen} gen Codegen instance"," * @param {Field} field Reflected field"," * @param {number} fieldIndex Field index"," * @param {string} prop Property reference"," * @returns {Codegen} Codegen instance"," * @ignore"," */","function genValuePartial_fromObject(gen, field, fieldIndex, prop) {","    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */","    if (field.resolvedType) {","        if (field.resolvedType instanceof Enum) { gen","            (\"switch(d%s){\", prop);","            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {","                if (field.repeated && values[keys[i]] === field.typeDefault) gen","                (\"default:\");","                gen","                (\"case%j:\", keys[i])","                (\"case %j:\", values[keys[i]])","                    (\"m%s=%j\", prop, values[keys[i]])","                    (\"break\");","            } gen","            (\"}\");","        } else gen","            (\"if(typeof d%s!==\\\"object\\\")\", prop)","                (\"throw TypeError(%j)\", field.fullName + \": object expected\")","            (\"m%s=types[%d].fromObject(d%s)\", prop, fieldIndex, prop);","    } else {","        var isUnsigned = false;","        switch (field.type) {","            case \"double\":","            case \"float\":gen","                (\"m%s=Number(d%s)\", prop, prop);","                break;","            case \"uint32\":","            case \"fixed32\": gen","                (\"m%s=d%s>>>0\", prop, prop);","                break;","            case \"int32\":","            case \"sint32\":","            case \"sfixed32\": gen","                (\"m%s=d%s|0\", prop, prop);","                break;","            case \"uint64\":","                isUnsigned = true;","                // eslint-disable-line no-fallthrough","            case \"int64\":","            case \"sint64\":","            case \"fixed64\":","            case \"sfixed64\": gen","                (\"if(util.Long)\")","                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)","                (\"else if(typeof d%s===\\\"string\\\")\", prop)","                    (\"m%s=parseInt(d%s,10)\", prop, prop)","                (\"else if(typeof d%s===\\\"number\\\")\", prop)","                    (\"m%s=d%s\", prop, prop)","                (\"else if(typeof d%s===\\\"object\\\")\", prop)","                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");","                break;","            case \"bytes\": gen","                (\"if(typeof d%s===\\\"string\\\")\", prop)","                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)","                (\"else if(d%s.length)\", prop)","                    (\"m%s=d%s\", prop, prop);","                break;","            case \"string\": gen","                (\"m%s=String(d%s)\", prop, prop);","                break;","            case \"bool\": gen","                (\"m%s=Boolean(d%s)\", prop, prop);","                break;","            /* default: gen","                (\"m%s=d%s\", prop, prop);","                break; */","        }","    }","    return gen;","    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */","}","","/**"," * Generates a plain object to runtime message converter specific to the specified message type."," * @param {Type} mtype Message type"," * @returns {Codegen} Codegen instance"," */","converter.fromObject = function fromObject(mtype) {","    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */","    var fields = mtype.fieldsArray;","    var gen = util.codegen(\"d\")","    (\"if(d instanceof this.ctor)\")","        (\"return d\");","    if (!fields.length) return gen","    (\"return new this.ctor\");","    gen","    (\"var m=new this.ctor\");","    for (var i = 0; i < fields.length; ++i) {","        var field  = fields[i].resolve(),","            prop   = util.safeProp(field.name);","","        // Map fields","        if (field.map) { gen","    (\"if(d%s){\", prop)","        (\"if(typeof d%s!==\\\"object\\\")\", prop)","            (\"throw TypeError(%j)\", field.fullName + \": object expected\")","        (\"m%s={}\", prop)","        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);","            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")","        (\"}\")","    (\"}\");","","        // Repeated fields","        } else if (field.repeated) { gen","    (\"if(d%s){\", prop)","        (\"if(!Array.isArray(d%s))\", prop)","            (\"throw TypeError(%j)\", field.fullName + \": array expected\")","        (\"m%s=[]\", prop)","        (\"for(var i=0;i<d%s.length;++i){\", prop);","            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")","        (\"}\")","    (\"}\");","","        // Non-repeated fields","        } else {","            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)","    (\"if(d%s!=null){\", prop); // !== undefined && !== null","        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);","            if (!(field.resolvedType instanceof Enum)) gen","    (\"}\");","        }","    } return gen","    (\"return m\");","    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */","};","","/**"," * Generates a partial value toObject converter."," * @param {Codegen} gen Codegen instance"," * @param {Field} field Reflected field"," * @param {number} fieldIndex Field index"," * @param {string} prop Property reference"," * @returns {Codegen} Codegen instance"," * @ignore"," */","function genValuePartial_toObject(gen, field, fieldIndex, prop) {","    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */","    if (field.resolvedType) {","        if (field.resolvedType instanceof Enum) gen","            (\"d%s=o.enums===String?types[%d].values[m%s]:m%s\", prop, fieldIndex, prop, prop);","        else gen","            (\"d%s=types[%d].toObject(m%s,o)\", prop, fieldIndex, prop);","    } else {","        var isUnsigned = false;","        switch (field.type) {","            case \"uint64\":","                isUnsigned = true;","                // eslint-disable-line no-fallthrough","            case \"int64\":","            case \"sint64\":","            case \"fixed64\":","            case \"sfixed64\": gen","            (\"if(typeof m%s===\\\"number\\\")\", prop)","                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)","            (\"else\") // Long-like","                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);","                break;","            case \"bytes\": gen","            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);","                break;","            default: gen","            (\"d%s=m%s\", prop, prop);","                break;","        }","    }","    return gen;","    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */","}","","/**"," * Generates a runtime message to plain object converter specific to the specified message type."," * @param {Type} mtype Message type"," * @returns {Codegen} Codegen instance"," */","converter.toObject = function toObject(mtype) {","    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */","    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);","    if (!fields.length)","        return util.codegen()(\"return {}\");","    var gen = util.codegen(\"m\", \"o\")","    (\"if(!o)\")","        (\"o={}\")","    (\"var d={}\");","","    var repeatedFields = [],","        mapFields = [],","        normalFields = [],","        i = 0;","    for (; i < fields.length; ++i)","        if (!fields[i].partOf)","            ( fields[i].resolve().repeated ? repeatedFields","            : fields[i].map ? mapFields","            : normalFields).push(fields[i]);","","    if (repeatedFields.length) { gen","    (\"if(o.arrays||o.defaults){\");","        for (i = 0; i < repeatedFields.length; ++i) gen","        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));","        gen","    (\"}\");","    }","","    if (mapFields.length) { gen","    (\"if(o.objects||o.defaults){\");","        for (i = 0; i < mapFields.length; ++i) gen","        (\"d%s={}\", util.safeProp(mapFields[i].name));","        gen","    (\"}\");","    }","","    if (normalFields.length) { gen","    (\"if(o.defaults){\");","        for (i = 0; i < normalFields.length; ++i) {","            var field = normalFields[i],","                prop  = util.safeProp(field.name);","            if (field.resolvedType instanceof Enum) gen","        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);","            else if (field.long) gen","        (\"if(util.Long){\")","            (\"var n=new util.Long(%d,%d,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)","            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)","        (\"}else\")","            (\"d%s=o.longs===String?%j:%d\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());","            else if (field.bytes) gen","        (\"d%s=o.bytes===String?%j:%s\", prop, String.fromCharCode.apply(String, field.typeDefault), \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\");","            else gen","        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)","        } gen","    (\"}\");","    }","    var hasKs2 = false;","    for (i = 0; i < fields.length; ++i) {","        var field = fields[i],","            index = mtype._fieldsArray.indexOf(field),","            prop  = util.safeProp(field.name);","        if (field.map) {","            if (!hasKs2) { hasKs2 = true; gen","    (\"var ks2\");","            } gen","    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)","        (\"d%s={}\", prop)","        (\"for(var j=0;j<ks2.length;++j){\");","            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")","        (\"}\");","        } else if (field.repeated) { gen","    (\"if(m%s&&m%s.length){\", prop, prop)","        (\"d%s=[]\", prop)","        (\"for(var j=0;j<m%s.length;++j){\", prop);","            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")","        (\"}\");","        } else { gen","    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null","        genValuePartial_toObject(gen, field, /* sorted */ index, prop);","        if (field.partOf) gen","        (\"if(o.oneofs)\")","            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);","        }","        gen","    (\"}\");","    }","    return gen","    (\"return d\");","    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */","};",""],"l":{"6":1,"8":1,"20":1,"22":0,"23":0,"25":0,"26":0,"28":0,"33":0,"35":0,"40":0,"41":0,"43":0,"45":0,"47":0,"49":0,"52":0,"54":0,"56":0,"61":0,"70":0,"71":0,"76":0,"77":0,"79":0,"80":0,"82":0,"88":0,"97":1,"99":0,"100":0,"103":0,"105":0,"107":0,"108":0,"112":0,"118":0,"123":0,"129":0,"135":0,"137":0,"138":0,"141":0,"155":1,"157":0,"158":0,"160":0,"163":0,"164":0,"166":0,"171":0,"176":0,"177":0,"179":0,"180":0,"182":0,"185":0,"194":1,"196":0,"197":0,"198":0,"199":0,"204":0,"208":0,"209":0,"210":0,"214":0,"216":0,"218":0,"222":0,"224":0,"226":0,"230":0,"232":0,"233":0,"235":0,"237":0,"243":0,"245":0,"247":0,"250":0,"251":0,"252":0,"255":0,"256":0,"258":0,"262":0,"264":0,"268":0,"270":0,"272":0,"273":0,"277":0,"280":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/namespace.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/namespace.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":1,"139":1,"140":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"fnMap":{"1":{"name":"fromJSON","line":34,"loc":{"start":{"line":34,"column":21},"end":{"line":34,"column":51}}},"2":{"name":"arrayToJSON","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":28}}},"3":{"name":"Namespace","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":34}}},"4":{"name":"clearCache","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":31}}},"5":{"name":"(anonymous_5)","line":95,"loc":{"start":{"line":95,"column":9},"end":{"line":95,"column":20}}},"6":{"name":"toJSON","line":133,"loc":{"start":{"line":133,"column":29},"end":{"line":133,"column":47}}},"7":{"name":"addJSON","line":145,"loc":{"start":{"line":145,"column":30},"end":{"line":145,"column":59}}},"8":{"name":"get","line":172,"loc":{"start":{"line":172,"column":26},"end":{"line":172,"column":45}}},"9":{"name":"getEnum","line":184,"loc":{"start":{"line":184,"column":30},"end":{"line":184,"column":53}}},"10":{"name":"add","line":197,"loc":{"start":{"line":197,"column":26},"end":{"line":197,"column":47}}},"11":{"name":"remove","line":233,"loc":{"start":{"line":233,"column":29},"end":{"line":233,"column":53}}},"12":{"name":"define","line":254,"loc":{"start":{"line":254,"column":29},"end":{"line":254,"column":57}}},"13":{"name":"resolveAll","line":282,"loc":{"start":{"line":282,"column":33},"end":{"line":282,"column":55}}},"14":{"name":"lookup","line":299,"loc":{"start":{"line":299,"column":29},"end":{"line":299,"column":86}}},"15":{"name":"lookupType","line":351,"loc":{"start":{"line":351,"column":33},"end":{"line":351,"column":59}}},"16":{"name":"lookupEnum","line":365,"loc":{"start":{"line":365,"column":33},"end":{"line":365,"column":59}}},"17":{"name":"lookupTypeOrEnum","line":379,"loc":{"start":{"line":379,"column":39},"end":{"line":379,"column":71}}},"18":{"name":"lookupService","line":393,"loc":{"start":{"line":393,"column":36},"end":{"line":393,"column":65}}},"19":{"name":"(anonymous_19)","line":400,"loc":{"start":{"line":400,"column":23},"end":{"line":400,"column":49}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":116}},"4":{"start":{"line":8,"column":0},"end":{"line":10,"column":33}},"5":{"start":{"line":12,"column":0},"end":{"line":13,"column":12}},"6":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":66}},"8":{"start":{"line":44,"column":0},"end":{"line":51,"column":1}},"9":{"start":{"line":45,"column":4},"end":{"line":46,"column":25}},"10":{"start":{"line":46,"column":8},"end":{"line":46,"column":25}},"11":{"start":{"line":47,"column":4},"end":{"line":47,"column":17}},"12":{"start":{"line":48,"column":4},"end":{"line":49,"column":47}},"13":{"start":{"line":49,"column":8},"end":{"line":49,"column":47}},"14":{"start":{"line":50,"column":4},"end":{"line":50,"column":15}},"15":{"start":{"line":53,"column":0},"end":{"line":53,"column":36}},"16":{"start":{"line":66,"column":0},"end":{"line":81,"column":1}},"17":{"start":{"line":67,"column":4},"end":{"line":67,"column":47}},"18":{"start":{"line":73,"column":4},"end":{"line":73,"column":28}},"19":{"start":{"line":80,"column":4},"end":{"line":80,"column":29}},"20":{"start":{"line":83,"column":0},"end":{"line":86,"column":1}},"21":{"start":{"line":84,"column":4},"end":{"line":84,"column":34}},"22":{"start":{"line":85,"column":4},"end":{"line":85,"column":21}},"23":{"start":{"line":94,"column":0},"end":{"line":98,"column":3}},"24":{"start":{"line":96,"column":8},"end":{"line":96,"column":84}},"25":{"start":{"line":133,"column":0},"end":{"line":138,"column":2}},"26":{"start":{"line":134,"column":4},"end":{"line":137,"column":6}},"27":{"start":{"line":145,"column":0},"end":{"line":165,"column":2}},"28":{"start":{"line":146,"column":4},"end":{"line":146,"column":18}},"29":{"start":{"line":148,"column":4},"end":{"line":163,"column":5}},"30":{"start":{"line":149,"column":8},"end":{"line":162,"column":9}},"31":{"start":{"line":150,"column":12},"end":{"line":150,"column":42}},"32":{"start":{"line":151,"column":12},"end":{"line":161,"column":14}},"33":{"start":{"line":164,"column":4},"end":{"line":164,"column":16}},"34":{"start":{"line":172,"column":0},"end":{"line":175,"column":2}},"35":{"start":{"line":173,"column":4},"end":{"line":174,"column":16}},"36":{"start":{"line":184,"column":0},"end":{"line":188,"column":2}},"37":{"start":{"line":185,"column":4},"end":{"line":186,"column":40}},"38":{"start":{"line":186,"column":8},"end":{"line":186,"column":40}},"39":{"start":{"line":187,"column":4},"end":{"line":187,"column":32}},"40":{"start":{"line":197,"column":0},"end":{"line":224,"column":2}},"41":{"start":{"line":199,"column":4},"end":{"line":200,"column":64}},"42":{"start":{"line":200,"column":8},"end":{"line":200,"column":64}},"43":{"start":{"line":202,"column":4},"end":{"line":220,"column":5}},"44":{"start":{"line":203,"column":8},"end":{"line":203,"column":25}},"45":{"start":{"line":205,"column":8},"end":{"line":205,"column":41}},"46":{"start":{"line":206,"column":8},"end":{"line":219,"column":9}},"47":{"start":{"line":207,"column":12},"end":{"line":218,"column":79}},"48":{"start":{"line":209,"column":16},"end":{"line":209,"column":46}},"49":{"start":{"line":210,"column":16},"end":{"line":211,"column":42}},"50":{"start":{"line":211,"column":20},"end":{"line":211,"column":42}},"51":{"start":{"line":212,"column":16},"end":{"line":212,"column":34}},"52":{"start":{"line":213,"column":16},"end":{"line":214,"column":37}},"53":{"start":{"line":214,"column":20},"end":{"line":214,"column":37}},"54":{"start":{"line":215,"column":16},"end":{"line":215,"column":54}},"55":{"start":{"line":218,"column":16},"end":{"line":218,"column":79}},"56":{"start":{"line":221,"column":4},"end":{"line":221,"column":38}},"57":{"start":{"line":222,"column":4},"end":{"line":222,"column":23}},"58":{"start":{"line":223,"column":4},"end":{"line":223,"column":28}},"59":{"start":{"line":233,"column":0},"end":{"line":246,"column":2}},"60":{"start":{"line":235,"column":4},"end":{"line":236,"column":61}},"61":{"start":{"line":236,"column":8},"end":{"line":236,"column":61}},"62":{"start":{"line":237,"column":4},"end":{"line":238,"column":60}},"63":{"start":{"line":238,"column":8},"end":{"line":238,"column":60}},"64":{"start":{"line":240,"column":4},"end":{"line":240,"column":36}},"65":{"start":{"line":241,"column":4},"end":{"line":242,"column":32}},"66":{"start":{"line":242,"column":8},"end":{"line":242,"column":32}},"67":{"start":{"line":244,"column":4},"end":{"line":244,"column":26}},"68":{"start":{"line":245,"column":4},"end":{"line":245,"column":28}},"69":{"start":{"line":254,"column":0},"end":{"line":276,"column":2}},"70":{"start":{"line":256,"column":4},"end":{"line":259,"column":40}},"71":{"start":{"line":257,"column":8},"end":{"line":257,"column":31}},"72":{"start":{"line":258,"column":9},"end":{"line":259,"column":40}},"73":{"start":{"line":259,"column":8},"end":{"line":259,"column":40}},"74":{"start":{"line":260,"column":4},"end":{"line":261,"column":45}},"75":{"start":{"line":261,"column":8},"end":{"line":261,"column":45}},"76":{"start":{"line":263,"column":4},"end":{"line":263,"column":19}},"77":{"start":{"line":264,"column":4},"end":{"line":272,"column":5}},"78":{"start":{"line":265,"column":8},"end":{"line":265,"column":32}},"79":{"start":{"line":266,"column":8},"end":{"line":271,"column":47}},"80":{"start":{"line":267,"column":12},"end":{"line":267,"column":35}},"81":{"start":{"line":268,"column":12},"end":{"line":269,"column":73}},"82":{"start":{"line":269,"column":16},"end":{"line":269,"column":73}},"83":{"start":{"line":271,"column":12},"end":{"line":271,"column":47}},"84":{"start":{"line":273,"column":4},"end":{"line":274,"column":26}},"85":{"start":{"line":274,"column":8},"end":{"line":274,"column":26}},"86":{"start":{"line":275,"column":4},"end":{"line":275,"column":15}},"87":{"start":{"line":282,"column":0},"end":{"line":290,"column":2}},"88":{"start":{"line":283,"column":4},"end":{"line":283,"column":41}},"89":{"start":{"line":284,"column":4},"end":{"line":288,"column":34}},"90":{"start":{"line":285,"column":8},"end":{"line":288,"column":34}},"91":{"start":{"line":286,"column":12},"end":{"line":286,"column":37}},"92":{"start":{"line":288,"column":12},"end":{"line":288,"column":34}},"93":{"start":{"line":289,"column":4},"end":{"line":289,"column":26}},"94":{"start":{"line":299,"column":0},"end":{"line":331,"column":2}},"95":{"start":{"line":302,"column":4},"end":{"line":306,"column":38},"skip":true},"96":{"start":{"line":303,"column":8},"end":{"line":303,"column":43},"skip":true},"97":{"start":{"line":304,"column":8},"end":{"line":304,"column":32},"skip":true},"98":{"start":{"line":305,"column":11},"end":{"line":306,"column":38},"skip":true},"99":{"start":{"line":306,"column":8},"end":{"line":306,"column":38},"skip":true},"100":{"start":{"line":308,"column":4},"end":{"line":313,"column":20}},"101":{"start":{"line":309,"column":8},"end":{"line":310,"column":29}},"102":{"start":{"line":310,"column":12},"end":{"line":310,"column":29}},"103":{"start":{"line":311,"column":8},"end":{"line":311,"column":31}},"104":{"start":{"line":312,"column":11},"end":{"line":313,"column":20}},"105":{"start":{"line":313,"column":8},"end":{"line":313,"column":20}},"106":{"start":{"line":316,"column":4},"end":{"line":317,"column":60}},"107":{"start":{"line":317,"column":8},"end":{"line":317,"column":60}},"108":{"start":{"line":319,"column":4},"end":{"line":319,"column":34}},"109":{"start":{"line":320,"column":4},"end":{"line":326,"column":5}},"110":{"start":{"line":321,"column":8},"end":{"line":325,"column":25}},"111":{"start":{"line":322,"column":12},"end":{"line":323,"column":29}},"112":{"start":{"line":323,"column":16},"end":{"line":323,"column":29}},"113":{"start":{"line":324,"column":15},"end":{"line":325,"column":25}},"114":{"start":{"line":325,"column":12},"end":{"line":325,"column":25}},"115":{"start":{"line":328,"column":4},"end":{"line":329,"column":20}},"116":{"start":{"line":329,"column":8},"end":{"line":329,"column":20}},"117":{"start":{"line":330,"column":4},"end":{"line":330,"column":49}},"118":{"start":{"line":351,"column":0},"end":{"line":356,"column":2}},"119":{"start":{"line":352,"column":4},"end":{"line":352,"column":44}},"120":{"start":{"line":353,"column":4},"end":{"line":354,"column":36}},"121":{"start":{"line":354,"column":8},"end":{"line":354,"column":36}},"122":{"start":{"line":355,"column":4},"end":{"line":355,"column":17}},"123":{"start":{"line":365,"column":0},"end":{"line":370,"column":2}},"124":{"start":{"line":366,"column":4},"end":{"line":366,"column":44}},"125":{"start":{"line":367,"column":4},"end":{"line":368,"column":62}},"126":{"start":{"line":368,"column":8},"end":{"line":368,"column":62}},"127":{"start":{"line":369,"column":4},"end":{"line":369,"column":17}},"128":{"start":{"line":379,"column":0},"end":{"line":384,"column":2}},"129":{"start":{"line":380,"column":4},"end":{"line":380,"column":50}},"130":{"start":{"line":381,"column":4},"end":{"line":382,"column":70}},"131":{"start":{"line":382,"column":8},"end":{"line":382,"column":70}},"132":{"start":{"line":383,"column":4},"end":{"line":383,"column":17}},"133":{"start":{"line":393,"column":0},"end":{"line":398,"column":2}},"134":{"start":{"line":394,"column":4},"end":{"line":394,"column":47}},"135":{"start":{"line":395,"column":4},"end":{"line":396,"column":65}},"136":{"start":{"line":396,"column":8},"end":{"line":396,"column":65}},"137":{"start":{"line":397,"column":4},"end":{"line":397,"column":17}},"138":{"start":{"line":400,"column":0},"end":{"line":403,"column":2}},"139":{"start":{"line":401,"column":4},"end":{"line":401,"column":20}},"140":{"start":{"line":402,"column":4},"end":{"line":402,"column":23}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"2":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":15}},{"start":{"line":45,"column":19},"end":{"line":45,"column":31}}]},"3":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":15},"end":{"line":96,"column":32}},{"start":{"line":96,"column":37},"end":{"line":96,"column":82}}]},"4":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4},"skip":true}]},"5":{"line":152,"type":"cond-expr","locations":[{"start":{"line":153,"column":18},"end":{"line":153,"column":31}},{"start":{"line":154,"column":18},"end":{"line":160,"column":36}}]},"6":{"line":154,"type":"cond-expr","locations":[{"start":{"line":155,"column":18},"end":{"line":155,"column":31}},{"start":{"line":156,"column":18},"end":{"line":160,"column":36}}]},"7":{"line":156,"type":"cond-expr","locations":[{"start":{"line":157,"column":18},"end":{"line":157,"column":34}},{"start":{"line":158,"column":18},"end":{"line":160,"column":36}}]},"8":{"line":158,"type":"cond-expr","locations":[{"start":{"line":159,"column":18},"end":{"line":159,"column":32}},{"start":{"line":160,"column":18},"end":{"line":160,"column":36}}]},"9":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":11},"end":{"line":173,"column":22}},{"start":{"line":173,"column":26},"end":{"line":173,"column":43}},{"start":{"line":174,"column":11},"end":{"line":174,"column":15}}]},"10":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"11":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":19}},{"start":{"line":185,"column":23},"end":{"line":185,"column":56}}]},"12":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"13":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":10},"end":{"line":199,"column":33}},{"start":{"line":199,"column":37},"end":{"line":199,"column":64}},{"start":{"line":199,"column":68},"end":{"line":199,"column":90}},{"start":{"line":199,"column":94},"end":{"line":199,"column":116}},{"start":{"line":199,"column":120},"end":{"line":199,"column":145}},{"start":{"line":199,"column":149},"end":{"line":199,"column":176}}]},"14":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"15":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":206,"column":8}},{"start":{"line":206,"column":8},"end":{"line":206,"column":8}}]},"16":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":12},"end":{"line":207,"column":12}},{"start":{"line":207,"column":12},"end":{"line":207,"column":12}}]},"17":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":16},"end":{"line":207,"column":41}},{"start":{"line":207,"column":45},"end":{"line":207,"column":72}},{"start":{"line":207,"column":76},"end":{"line":207,"column":126}}]},"18":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":78},"end":{"line":207,"column":98}},{"start":{"line":207,"column":102},"end":{"line":207,"column":125}}]},"19":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":16},"end":{"line":213,"column":16}},{"start":{"line":213,"column":16},"end":{"line":213,"column":16}}]},"20":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]},"21":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"22":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"23":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":256,"column":4}},{"start":{"line":256,"column":4},"end":{"line":256,"column":4}}]},"24":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":9},"end":{"line":258,"column":9}},{"start":{"line":258,"column":9},"end":{"line":258,"column":9}}]},"25":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":4}},{"start":{"line":260,"column":4},"end":{"line":260,"column":4}}]},"26":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":8},"end":{"line":260,"column":12}},{"start":{"line":260,"column":16},"end":{"line":260,"column":27}},{"start":{"line":260,"column":31},"end":{"line":260,"column":45}}]},"27":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":8},"end":{"line":266,"column":8}},{"start":{"line":266,"column":8},"end":{"line":266,"column":8}}]},"28":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":12},"end":{"line":266,"column":22}},{"start":{"line":266,"column":26},"end":{"line":266,"column":42}}]},"29":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":12},"end":{"line":268,"column":12}},{"start":{"line":268,"column":12},"end":{"line":268,"column":12}}]},"30":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":4},"end":{"line":273,"column":4}},{"start":{"line":273,"column":4},"end":{"line":273,"column":4}}]},"31":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":8},"end":{"line":285,"column":8}},{"start":{"line":285,"column":8},"end":{"line":285,"column":8}}]},"32":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":302,"column":4},"skip":true},{"start":{"line":302,"column":4},"end":{"line":302,"column":4},"skip":true}]},"33":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":11},"end":{"line":305,"column":11},"skip":true},{"start":{"line":305,"column":11},"end":{"line":305,"column":11},"skip":true}]},"34":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":15},"end":{"line":305,"column":26},"skip":true},{"start":{"line":305,"column":30},"end":{"line":305,"column":57},"skip":true}]},"35":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"36":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":8},"end":{"line":308,"column":27}},{"start":{"line":308,"column":31},"end":{"line":308,"column":42}}]},"37":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8}},{"start":{"line":309,"column":8},"end":{"line":309,"column":8}}]},"38":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":11},"end":{"line":312,"column":11}},{"start":{"line":312,"column":11},"end":{"line":312,"column":11}}]},"39":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"40":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":4},"end":{"line":320,"column":4}},{"start":{"line":320,"column":4},"end":{"line":320,"column":4}}]},"41":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":8},"end":{"line":321,"column":8}},{"start":{"line":321,"column":8},"end":{"line":321,"column":8}}]},"42":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":12},"end":{"line":322,"column":12}},{"start":{"line":322,"column":12},"end":{"line":322,"column":12}}]},"43":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":16},"end":{"line":322,"column":28}},{"start":{"line":322,"column":32},"end":{"line":322,"column":75}}]},"44":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":15},"end":{"line":324,"column":15}},{"start":{"line":324,"column":15},"end":{"line":324,"column":15}}]},"45":{"line":324,"type":"binary-expr","locations":[{"start":{"line":324,"column":19},"end":{"line":324,"column":45}},{"start":{"line":324,"column":50},"end":{"line":324,"column":104}}]},"46":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":4},"end":{"line":328,"column":4}},{"start":{"line":328,"column":4},"end":{"line":328,"column":4}}]},"47":{"line":328,"type":"binary-expr","locations":[{"start":{"line":328,"column":8},"end":{"line":328,"column":28}},{"start":{"line":328,"column":32},"end":{"line":328,"column":52}}]},"48":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":4},"end":{"line":353,"column":4}},{"start":{"line":353,"column":4},"end":{"line":353,"column":4}}]},"49":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":4},"end":{"line":367,"column":4}},{"start":{"line":367,"column":4},"end":{"line":367,"column":4}}]},"50":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":381,"column":4}},{"start":{"line":381,"column":4},"end":{"line":381,"column":4}}]},"51":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":4},"end":{"line":395,"column":4}},{"start":{"line":395,"column":4},"end":{"line":395,"column":4}}]}},"code":["\"use strict\";","module.exports = Namespace;","","// extends ReflectionObject","var ReflectionObject = require(\"./object\");","((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";","","var Enum     = require(\"./enum\"),","    Field    = require(\"./field\"),","    util     = require(\"./util\");","","var Type,    // cyclic","    Service; // \"","","/**"," * Constructs a new namespace instance."," * @name Namespace"," * @classdesc Reflected namespace."," * @extends NamespaceBase"," * @constructor"," * @param {string} name Namespace name"," * @param {Object.<string,*>} [options] Declared options"," */","","/**"," * Constructs a namespace from JSON."," * @memberof Namespace"," * @function"," * @param {string} name Namespace name"," * @param {Object.<string,*>} json JSON object"," * @returns {Namespace} Created namespace"," * @throws {TypeError} If arguments are invalid"," */","Namespace.fromJSON = function fromJSON(name, json) {","    return new Namespace(name, json.options).addJSON(json.nested);","};","","/**"," * Converts an array of reflection objects to JSON."," * @memberof Namespace"," * @param {ReflectionObject[]} array Object array"," * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty"," */","function arrayToJSON(array) {","    if (!(array && array.length))","        return undefined;","    var obj = {};","    for (var i = 0; i < array.length; ++i)","        obj[array[i].name] = array[i].toJSON();","    return obj;","}","","Namespace.arrayToJSON = arrayToJSON;","","/**"," * Not an actual constructor. Use {@link Namespace} instead."," * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions."," * @exports NamespaceBase"," * @extends ReflectionObject"," * @abstract"," * @constructor"," * @param {string} name Namespace name"," * @param {Object.<string,*>} [options] Declared options"," * @see {@link Namespace}"," */","function Namespace(name, options) {","    ReflectionObject.call(this, name, options);","","    /**","     * Nested objects by name.","     * @type {Object.<string,ReflectionObject>|undefined}","     */","    this.nested = undefined; // toJSON","","    /**","     * Cached nested objects as an array.","     * @type {?ReflectionObject[]}","     * @private","     */","    this._nestedArray = null;","}","","function clearCache(namespace) {","    namespace._nestedArray = null;","    return namespace;","}","","/**"," * Nested objects of this namespace as an array for iteration."," * @name NamespaceBase#nestedArray"," * @type {ReflectionObject[]}"," * @readonly"," */","Object.defineProperty(Namespace.prototype, \"nestedArray\", {","    get: function() {","        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));","    }","});","","/**"," * Namespace descriptor."," * @typedef NamespaceDescriptor"," * @type {Object}"," * @property {Object.<string,*>} [options] Namespace options"," * @property {Object.<string,AnyNestedDescriptor>} nested Nested object descriptors"," */","","/**"," * Namespace base descriptor."," * @typedef NamespaceBaseDescriptor"," * @type {Object}"," * @property {Object.<string,*>} [options] Namespace options"," * @property {Object.<string,AnyNestedDescriptor>} [nested] Nested object descriptors"," */","","/**"," * Any extension field descriptor."," * @typedef AnyExtensionFieldDescriptor"," * @type {ExtensionFieldDescriptor|ExtensionMapFieldDescriptor}"," */","","/**"," * Any nested object descriptor."," * @typedef AnyNestedDescriptor"," * @type {EnumDescriptor|TypeDescriptor|ServiceDescriptor|AnyExtensionFieldDescriptor|NamespaceDescriptor}"," */","// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionFieldDescriptor exists in the first place)","","/**"," * Converts this namespace to a namespace descriptor."," * @returns {NamespaceBaseDescriptor} Namespace descriptor"," */","Namespace.prototype.toJSON = function toJSON() {","    return {","        options : this.options,","        nested  : arrayToJSON(this.nestedArray)","    };","};","","/**"," * Adds nested objects to this namespace from nested object descriptors."," * @param {Object.<string,AnyNestedDescriptor>} nestedJson Any nested object descriptors"," * @returns {Namespace} `this`"," */","Namespace.prototype.addJSON = function addJSON(nestedJson) {","    var ns = this;","    /* istanbul ignore else */","    if (nestedJson) {","        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {","            nested = nestedJson[names[i]];","            ns.add( // most to least likely","                ( nested.fields !== undefined","                ? Type.fromJSON","                : nested.values !== undefined","                ? Enum.fromJSON","                : nested.methods !== undefined","                ? Service.fromJSON","                : nested.id !== undefined","                ? Field.fromJSON","                : Namespace.fromJSON )(names[i], nested)","            );","        }","    }","    return this;","};","","/**"," * Gets the nested object of the specified name."," * @param {string} name Nested object name"," * @returns {?ReflectionObject} The reflection object or `null` if it doesn't exist"," */","Namespace.prototype.get = function get(name) {","    return this.nested && this.nested[name]","        || null;","};","","/**"," * Gets the values of the nested {@link Enum|enum} of the specified name."," * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`."," * @param {string} name Nested enum name"," * @returns {Object.<string,number>} Enum values"," * @throws {Error} If there is no such enum"," */","Namespace.prototype.getEnum = function getEnum(name) {","    if (this.nested && this.nested[name] instanceof Enum)","        return this.nested[name].values;","    throw Error(\"no such enum\");","};","","/**"," * Adds a nested object to this namespace."," * @param {ReflectionObject} object Nested object to add"," * @returns {Namespace} `this`"," * @throws {TypeError} If arguments are invalid"," * @throws {Error} If there is already a nested object with this name"," */","Namespace.prototype.add = function add(object) {","","    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))","        throw TypeError(\"object must be a valid nested object\");","","    if (!this.nested)","        this.nested = {};","    else {","        var prev = this.get(object.name);","        if (prev) {","            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {","                // replace plain namespace but keep existing nested elements and options","                var nested = prev.nestedArray;","                for (var i = 0; i < nested.length; ++i)","                    object.add(nested[i]);","                this.remove(prev);","                if (!this.nested)","                    this.nested = {};","                object.setOptions(prev.options, true);","","            } else","                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);","        }","    }","    this.nested[object.name] = object;","    object.onAdd(this);","    return clearCache(this);","};","","/**"," * Removes a nested object from this namespace."," * @param {ReflectionObject} object Nested object to remove"," * @returns {Namespace} `this`"," * @throws {TypeError} If arguments are invalid"," * @throws {Error} If `object` is not a member of this namespace"," */","Namespace.prototype.remove = function remove(object) {","","    if (!(object instanceof ReflectionObject))","        throw TypeError(\"object must be a ReflectionObject\");","    if (object.parent !== this)","        throw Error(object + \" is not a member of \" + this);","","    delete this.nested[object.name];","    if (!Object.keys(this.nested).length)","        this.nested = undefined;","","    object.onRemove(this);","    return clearCache(this);","};","","/**"," * Defines additial namespaces within this one if not yet existing."," * @param {string|string[]} path Path to create"," * @param {*} [json] Nested types to create from JSON"," * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty"," */","Namespace.prototype.define = function define(path, json) {","","    if (util.isString(path))","        path = path.split(\".\");","    else if (!Array.isArray(path))","        throw TypeError(\"illegal path\");","    if (path && path.length && path[0] === \"\")","        throw Error(\"path must be relative\");","","    var ptr = this;","    while (path.length > 0) {","        var part = path.shift();","        if (ptr.nested && ptr.nested[part]) {","            ptr = ptr.nested[part];","            if (!(ptr instanceof Namespace))","                throw Error(\"path conflicts with non-namespace objects\");","        } else","            ptr.add(ptr = new Namespace(part));","    }","    if (json)","        ptr.addJSON(json);","    return ptr;","};","","/**"," * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost."," * @returns {Namespace} `this`"," */","Namespace.prototype.resolveAll = function resolveAll() {","    var nested = this.nestedArray, i = 0;","    while (i < nested.length)","        if (nested[i] instanceof Namespace)","            nested[i++].resolveAll();","        else","            nested[i++].resolve();","    return this.resolve();","};","","/**"," * Looks up the reflection object at the specified path, relative to this namespace."," * @param {string|string[]} path Path to look up"," * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc."," * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked"," * @returns {?ReflectionObject} Looked up object or `null` if none could be found"," */","Namespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {","","    /* istanbul ignore next */","    if (typeof filterTypes === \"boolean\") {","        parentAlreadyChecked = filterTypes;","        filterTypes = undefined;","    } else if (filterTypes && !Array.isArray(filterTypes))","        filterTypes = [ filterTypes ];","","    if (util.isString(path) && path.length) {","        if (path === \".\")","            return this.root;","        path = path.split(\".\");","    } else if (!path.length)","        return this;","","    // Start at root if path is absolute","    if (path[0] === \"\")","        return this.root.lookup(path.slice(1), filterTypes);","    // Test if the first part matches any nested object, and if so, traverse if path contains more","    var found = this.get(path[0]);","    if (found) {","        if (path.length === 1) {","            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)","                return found;","        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))","            return found;","    }","    // If there hasn't been a match, try again at the parent","    if (this.parent === null || parentAlreadyChecked)","        return null;","    return this.parent.lookup(path, filterTypes);","};","","/**"," * Looks up the reflection object at the specified path, relative to this namespace."," * @name NamespaceBase#lookup"," * @function"," * @param {string|string[]} path Path to look up"," * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked"," * @returns {?ReflectionObject} Looked up object or `null` if none could be found"," * @variation 2"," */","// lookup(path: string, [parentAlreadyChecked: boolean])","","/**"," * Looks up the {@link Type|type} at the specified path, relative to this namespace."," * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`."," * @param {string|string[]} path Path to look up"," * @returns {Type} Looked up type"," * @throws {Error} If `path` does not point to a type"," */","Namespace.prototype.lookupType = function lookupType(path) {","    var found = this.lookup(path, [ Type ]);","    if (!found)","        throw Error(\"no such type\");","    return found;","};","","/**"," * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace."," * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`."," * @param {string|string[]} path Path to look up"," * @returns {Enum} Looked up enum"," * @throws {Error} If `path` does not point to an enum"," */","Namespace.prototype.lookupEnum = function lookupEnum(path) {","    var found = this.lookup(path, [ Enum ]);","    if (!found)","        throw Error(\"no such Enum '\" + path + \"' in \" + this);","    return found;","};","","/**"," * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace."," * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`."," * @param {string|string[]} path Path to look up"," * @returns {Type} Looked up type or enum"," * @throws {Error} If `path` does not point to a type or enum"," */","Namespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {","    var found = this.lookup(path, [ Type, Enum ]);","    if (!found)","        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);","    return found;","};","","/**"," * Looks up the {@link Service|service} at the specified path, relative to this namespace."," * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`."," * @param {string|string[]} path Path to look up"," * @returns {Service} Looked up service"," * @throws {Error} If `path` does not point to a service"," */","Namespace.prototype.lookupService = function lookupService(path) {","    var found = this.lookup(path, [ Service ]);","    if (!found)","        throw Error(\"no such Service '\" + path + \"' in \" + this);","    return found;","};","","Namespace._configure = function(Type_, Service_) {","    Type    = Type_;","    Service = Service_;","};",""],"l":{"2":1,"5":1,"6":1,"8":1,"12":1,"34":1,"35":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"53":1,"66":1,"67":0,"73":0,"80":0,"83":1,"84":0,"85":0,"94":1,"96":0,"133":1,"134":0,"145":1,"146":0,"148":0,"149":0,"150":0,"151":0,"164":0,"172":1,"173":0,"184":1,"185":0,"186":0,"187":0,"197":1,"199":0,"200":0,"202":0,"203":0,"205":0,"206":0,"207":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"218":0,"221":0,"222":0,"223":0,"233":1,"235":0,"236":0,"237":0,"238":0,"240":0,"241":0,"242":0,"244":0,"245":0,"254":1,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"271":0,"273":0,"274":0,"275":0,"282":1,"283":0,"284":0,"285":0,"286":0,"288":0,"289":0,"299":1,"302":1,"303":1,"304":1,"305":1,"306":1,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"316":0,"317":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"328":0,"329":0,"330":0,"351":1,"352":0,"353":0,"354":0,"355":0,"365":1,"366":0,"367":0,"368":0,"369":0,"379":1,"380":0,"381":0,"382":0,"383":0,"393":1,"394":0,"395":0,"396":0,"397":0,"400":1,"401":1,"402":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/field.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/field.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"Field","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":54}}},"2":{"name":"(anonymous_2)","line":169,"loc":{"start":{"line":169,"column":9},"end":{"line":169,"column":20}}},"3":{"name":"setOption","line":180,"loc":{"start":{"line":180,"column":28},"end":{"line":180,"column":70}}},"4":{"name":"fromJSON","line":214,"loc":{"start":{"line":214,"column":17},"end":{"line":214,"column":47}}},"5":{"name":"toJSON","line":222,"loc":{"start":{"line":222,"column":25},"end":{"line":222,"column":43}}},"6":{"name":"resolve","line":237,"loc":{"start":{"line":237,"column":26},"end":{"line":237,"column":45}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":104}},"4":{"start":{"line":8,"column":0},"end":{"line":10,"column":30}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":9}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":44}},"7":{"start":{"line":28,"column":0},"end":{"line":160,"column":1}},"8":{"start":{"line":30,"column":4},"end":{"line":36,"column":5}},"9":{"start":{"line":31,"column":8},"end":{"line":31,"column":23}},"10":{"start":{"line":32,"column":8},"end":{"line":32,"column":34}},"11":{"start":{"line":33,"column":11},"end":{"line":36,"column":5}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":25}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":27}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":47}},"15":{"start":{"line":40,"column":4},"end":{"line":41,"column":61}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":61}},"17":{"start":{"line":43,"column":4},"end":{"line":44,"column":49}},"18":{"start":{"line":44,"column":8},"end":{"line":44,"column":49}},"19":{"start":{"line":46,"column":4},"end":{"line":47,"column":54}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":54}},"21":{"start":{"line":49,"column":4},"end":{"line":50,"column":51}},"22":{"start":{"line":50,"column":8},"end":{"line":50,"column":51}},"23":{"start":{"line":56,"column":4},"end":{"line":56,"column":63}},"24":{"start":{"line":62,"column":4},"end":{"line":62,"column":21}},"25":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"26":{"start":{"line":74,"column":4},"end":{"line":74,"column":38}},"27":{"start":{"line":80,"column":4},"end":{"line":80,"column":40}},"28":{"start":{"line":86,"column":4},"end":{"line":86,"column":35}},"29":{"start":{"line":92,"column":4},"end":{"line":92,"column":40}},"30":{"start":{"line":98,"column":4},"end":{"line":98,"column":21}},"31":{"start":{"line":104,"column":4},"end":{"line":104,"column":24}},"32":{"start":{"line":110,"column":4},"end":{"line":110,"column":23}},"33":{"start":{"line":116,"column":4},"end":{"line":116,"column":28}},"34":{"start":{"line":122,"column":4},"end":{"line":122,"column":29}},"35":{"start":{"line":128,"column":4},"end":{"line":128,"column":94}},"36":{"start":{"line":134,"column":4},"end":{"line":134,"column":34}},"37":{"start":{"line":140,"column":4},"end":{"line":140,"column":29}},"38":{"start":{"line":146,"column":4},"end":{"line":146,"column":31}},"39":{"start":{"line":152,"column":4},"end":{"line":152,"column":31}},"40":{"start":{"line":159,"column":4},"end":{"line":159,"column":24}},"41":{"start":{"line":168,"column":0},"end":{"line":175,"column":3}},"42":{"start":{"line":171,"column":8},"end":{"line":172,"column":62}},"43":{"start":{"line":172,"column":12},"end":{"line":172,"column":62}},"44":{"start":{"line":173,"column":8},"end":{"line":173,"column":28}},"45":{"start":{"line":180,"column":0},"end":{"line":184,"column":2}},"46":{"start":{"line":181,"column":4},"end":{"line":182,"column":28}},"47":{"start":{"line":182,"column":8},"end":{"line":182,"column":28}},"48":{"start":{"line":183,"column":4},"end":{"line":183,"column":82}},"49":{"start":{"line":214,"column":0},"end":{"line":216,"column":2}},"50":{"start":{"line":215,"column":4},"end":{"line":215,"column":85}},"51":{"start":{"line":222,"column":0},"end":{"line":230,"column":2}},"52":{"start":{"line":223,"column":4},"end":{"line":229,"column":6}},"53":{"start":{"line":237,"column":0},"end":{"line":292,"column":2}},"54":{"start":{"line":239,"column":4},"end":{"line":240,"column":20}},"55":{"start":{"line":240,"column":8},"end":{"line":240,"column":20}},"56":{"start":{"line":242,"column":4},"end":{"line":253,"column":5}},"57":{"start":{"line":245,"column":8},"end":{"line":246,"column":37}},"58":{"start":{"line":246,"column":12},"end":{"line":246,"column":37},"skip":true},"59":{"start":{"line":248,"column":8},"end":{"line":248,"column":121}},"60":{"start":{"line":249,"column":8},"end":{"line":252,"column":98}},"61":{"start":{"line":250,"column":12},"end":{"line":250,"column":36}},"62":{"start":{"line":252,"column":12},"end":{"line":252,"column":98}},"63":{"start":{"line":256,"column":4},"end":{"line":260,"column":5}},"64":{"start":{"line":257,"column":8},"end":{"line":257,"column":51}},"65":{"start":{"line":258,"column":8},"end":{"line":259,"column":74}},"66":{"start":{"line":259,"column":12},"end":{"line":259,"column":74}},"67":{"start":{"line":263,"column":4},"end":{"line":264,"column":35}},"68":{"start":{"line":264,"column":8},"end":{"line":264,"column":35}},"69":{"start":{"line":267,"column":4},"end":{"line":281,"column":5}},"70":{"start":{"line":268,"column":8},"end":{"line":268,"column":95}},"71":{"start":{"line":271,"column":8},"end":{"line":272,"column":44}},"72":{"start":{"line":272,"column":12},"end":{"line":272,"column":44}},"73":{"start":{"line":274,"column":11},"end":{"line":281,"column":5}},"74":{"start":{"line":275,"column":8},"end":{"line":275,"column":16}},"75":{"start":{"line":276,"column":8},"end":{"line":279,"column":107}},"76":{"start":{"line":277,"column":12},"end":{"line":277,"column":112}},"77":{"start":{"line":279,"column":12},"end":{"line":279,"column":107}},"78":{"start":{"line":280,"column":8},"end":{"line":280,"column":31}},"79":{"start":{"line":284,"column":4},"end":{"line":289,"column":45}},"80":{"start":{"line":285,"column":8},"end":{"line":285,"column":45}},"81":{"start":{"line":286,"column":9},"end":{"line":289,"column":45}},"82":{"start":{"line":287,"column":8},"end":{"line":287,"column":44}},"83":{"start":{"line":289,"column":8},"end":{"line":289,"column":45}},"84":{"start":{"line":291,"column":4},"end":{"line":291,"column":57}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":11}},{"start":{"line":33,"column":11},"end":{"line":33,"column":11}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":27}},{"start":{"line":40,"column":31},"end":{"line":40,"column":37}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"7":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":26}},{"start":{"line":46,"column":30},"end":{"line":46,"column":80}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"9":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":28}},{"start":{"line":49,"column":32},"end":{"line":49,"column":54}}]},"10":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":46},"end":{"line":56,"column":50}},{"start":{"line":56,"column":53},"end":{"line":56,"column":62}}]},"11":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":20}},{"start":{"line":56,"column":24},"end":{"line":56,"column":43}}]},"12":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":18},"end":{"line":74,"column":24}},{"start":{"line":74,"column":28},"end":{"line":74,"column":37}}]},"13":{"line":128,"type":"cond-expr","locations":[{"start":{"line":128,"column":28},"end":{"line":128,"column":58}},{"start":{"line":128,"column":88},"end":{"line":128,"column":93},"skip":true}]},"14":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":171,"column":8}},{"start":{"line":171,"column":8},"end":{"line":171,"column":8}}]},"15":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"16":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":18},"end":{"line":224,"column":42}},{"start":{"line":224,"column":46},"end":{"line":224,"column":55}},{"start":{"line":224,"column":59},"end":{"line":224,"column":68}}]},"17":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":239,"column":4}},{"start":{"line":239,"column":4},"end":{"line":239,"column":4}}]},"18":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":4},"end":{"line":242,"column":4}},{"start":{"line":242,"column":4},"end":{"line":242,"column":4}}]},"19":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":8},"skip":true},{"start":{"line":245,"column":8},"end":{"line":245,"column":8}}]},"20":{"line":248,"type":"cond-expr","locations":[{"start":{"line":248,"column":51},"end":{"line":248,"column":77}},{"start":{"line":248,"column":80},"end":{"line":248,"column":91}}]},"21":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":8},"end":{"line":249,"column":8}},{"start":{"line":249,"column":8},"end":{"line":249,"column":8}}]},"22":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":256,"column":4}},{"start":{"line":256,"column":4},"end":{"line":256,"column":4}}]},"23":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":8},"end":{"line":256,"column":20}},{"start":{"line":256,"column":24},"end":{"line":256,"column":61}}]},"24":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8}},{"start":{"line":258,"column":8},"end":{"line":258,"column":8}}]},"25":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":12},"end":{"line":258,"column":45}},{"start":{"line":258,"column":49},"end":{"line":258,"column":85}}]},"26":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"27":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":8},"end":{"line":263,"column":20}},{"start":{"line":263,"column":24},"end":{"line":263,"column":57}},{"start":{"line":263,"column":61},"end":{"line":263,"column":78}},{"start":{"line":263,"column":82},"end":{"line":263,"column":118}}]},"28":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":4},"end":{"line":267,"column":4}},{"start":{"line":267,"column":4},"end":{"line":267,"column":4}}]},"29":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":8},"end":{"line":271,"column":8}},{"start":{"line":271,"column":8},"end":{"line":271,"column":8},"skip":true}]},"30":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":11},"end":{"line":274,"column":11}},{"start":{"line":274,"column":11},"end":{"line":274,"column":11}}]},"31":{"line":274,"type":"binary-expr","locations":[{"start":{"line":274,"column":15},"end":{"line":274,"column":25}},{"start":{"line":274,"column":29},"end":{"line":274,"column":65}}]},"32":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":8},"end":{"line":276,"column":8}},{"start":{"line":276,"column":8},"end":{"line":276,"column":8}}]},"33":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"34":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":9},"end":{"line":286,"column":9}},{"start":{"line":286,"column":9},"end":{"line":286,"column":9}}]}},"code":["\"use strict\";","module.exports = Field;","","// extends ReflectionObject","var ReflectionObject = require(\"./object\");","((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";","","var Enum  = require(\"./enum\"),","    types = require(\"./types\"),","    util  = require(\"./util\");","","var Type; // cyclic","","var ruleRe = /^required|optional|repeated$/;","","/**"," * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class."," * @classdesc Reflected message field."," * @extends ReflectionObject"," * @constructor"," * @param {string} name Unique name within its namespace"," * @param {number} id Unique id within its namespace"," * @param {string} type Value type"," * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule"," * @param {string|Object.<string,*>} [extend] Extended type if different from parent"," * @param {Object.<string,*>} [options] Declared options"," */","function Field(name, id, type, rule, extend, options) {","","    if (util.isObject(rule)) {","        options = rule;","        rule = extend = undefined;","    } else if (util.isObject(extend)) {","        options = extend;","        extend = undefined;","    }","","    ReflectionObject.call(this, name, options);","","    if (!util.isInteger(id) || id < 0)","        throw TypeError(\"id must be a non-negative integer\");","","    if (!util.isString(type))","        throw TypeError(\"type must be a string\");","","    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))","        throw TypeError(\"rule must be a string rule\");","","    if (extend !== undefined && !util.isString(extend))","        throw TypeError(\"extend must be a string\");","","    /**","     * Field rule, if any.","     * @type {string|undefined}","     */","    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON","","    /**","     * Field type.","     * @type {string}","     */","    this.type = type; // toJSON","","    /**","     * Unique field id.","     * @type {number}","     */","    this.id = id; // toJSON, marker","","    /**","     * Extended type if different from parent.","     * @type {string|undefined}","     */","    this.extend = extend || undefined; // toJSON","","    /**","     * Whether this field is required.","     * @type {boolean}","     */","    this.required = rule === \"required\";","","    /**","     * Whether this field is optional.","     * @type {boolean}","     */","    this.optional = !this.required;","","    /**","     * Whether this field is repeated.","     * @type {boolean}","     */","    this.repeated = rule === \"repeated\";","","    /**","     * Whether this field is a map or not.","     * @type {boolean}","     */","    this.map = false;","","    /**","     * Message this field belongs to.","     * @type {?Type}","     */","    this.message = null;","","    /**","     * OneOf this field belongs to, if any,","     * @type {?OneOf}","     */","    this.partOf = null;","","    /**","     * The field type's default value.","     * @type {*}","     */","    this.typeDefault = null;","","    /**","     * The field's default value on prototypes.","     * @type {*}","     */","    this.defaultValue = null;","","    /**","     * Whether this field's value should be treated as a long.","     * @type {boolean}","     */","    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;","","    /**","     * Whether this field's value is a buffer.","     * @type {boolean}","     */","    this.bytes = type === \"bytes\";","","    /**","     * Resolved type if not a basic type.","     * @type {?(Type|Enum)}","     */","    this.resolvedType = null;","","    /**","     * Sister-field within the extended type if a declaring extension field.","     * @type {?Field}","     */","    this.extensionField = null;","","    /**","     * Sister-field within the declaring namespace if an extended field.","     * @type {?Field}","     */","    this.declaringField = null;","","    /**","     * Internally remembers whether this field is packed.","     * @type {?boolean}","     * @private","     */","    this._packed = null;","}","","/**"," * Determines whether this field is packed. Only relevant when repeated and working with proto2."," * @name Field#packed"," * @type {boolean}"," * @readonly"," */","Object.defineProperty(Field.prototype, \"packed\", {","    get: function() {","        // defaults to packed=true if not explicity set to false","        if (this._packed === null)","            this._packed = this.getOption(\"packed\") !== false;","        return this._packed;","    }","});","","/**"," * @override"," */","Field.prototype.setOption = function setOption(name, value, ifNotSet) {","    if (name === \"packed\") // clear cached before setting","        this._packed = null;","    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);","};","","/**"," * Field descriptor."," * @typedef FieldDescriptor"," * @type {Object}"," * @property {string} [rule=\"optional\"] Field rule"," * @property {string} type Field type"," * @property {number} id Field id"," * @property {Object.<string,*>} [options] Field options"," */","","/**"," * Extension field descriptor."," * @typedef ExtensionFieldDescriptor"," * @type {Object}"," * @property {string} [rule=\"optional\"] Field rule"," * @property {string} type Field type"," * @property {number} id Field id"," * @property {string} extend Extended type"," * @property {Object.<string,*>} [options] Field options"," */","","/**"," * Constructs a field from a field descriptor."," * @param {string} name Field name"," * @param {FieldDescriptor} json Field descriptor"," * @returns {Field} Created field"," * @throws {TypeError} If arguments are invalid"," */","Field.fromJSON = function fromJSON(name, json) {","    return new Field(name, json.id, json.type, json.rule, json.extend, json.options);","};","","/**"," * Converts this field to a field descriptor."," * @returns {FieldDescriptor} Field descriptor"," */","Field.prototype.toJSON = function toJSON() {","    return {","        rule    : this.rule !== \"optional\" && this.rule || undefined,","        type    : this.type,","        id      : this.id,","        extend  : this.extend,","        options : this.options","    };","};","","/**"," * Resolves this field's type references."," * @returns {Field} `this`"," * @throws {Error} If any reference cannot be resolved"," */","Field.prototype.resolve = function resolve() {","","    if (this.resolved)","        return this;","","    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it","","        /* istanbul ignore if */","        if (!Type)","            Type = require(\"./type\");","","        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);","        if (this.resolvedType instanceof Type)","            this.typeDefault = null;","        else // instanceof Enum","            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined","    }","","    // use explicitly set default value if present","    if (this.options && this.options[\"default\"] !== undefined) {","        this.typeDefault = this.options[\"default\"];","        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")","            this.typeDefault = this.resolvedType.values[this.typeDefault];","    }","","    // remove unnecessary packed option (parser adds this) if not referencing an enum","    if (this.options && this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))","        delete this.options.packed;","","    // convert to internal data type if necesssary","    if (this.long) {","        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");","","        /* istanbul ignore else */","        if (Object.freeze)","            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)","","    } else if (this.bytes && typeof this.typeDefault === \"string\") {","        var buf;","        if (util.base64.test(this.typeDefault))","            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);","        else","            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);","        this.typeDefault = buf;","    }","","    // take special care of maps and repeated fields","    if (this.map)","        this.defaultValue = util.emptyObject;","    else if (this.repeated)","        this.defaultValue = util.emptyArray;","    else","        this.defaultValue = this.typeDefault;","","    return ReflectionObject.prototype.resolve.call(this);","};",""],"l":{"2":1,"5":1,"6":1,"8":1,"12":1,"14":1,"28":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"38":0,"40":0,"41":0,"43":0,"44":0,"46":0,"47":0,"49":0,"50":0,"56":0,"62":0,"68":0,"74":0,"80":0,"86":0,"92":0,"98":0,"104":0,"110":0,"116":0,"122":0,"128":0,"134":0,"140":0,"146":0,"152":0,"159":0,"168":1,"171":0,"172":0,"173":0,"180":1,"181":0,"182":0,"183":0,"214":1,"215":0,"222":1,"223":0,"237":1,"239":0,"240":0,"242":0,"245":0,"246":1,"248":0,"249":0,"250":0,"252":0,"256":0,"257":0,"258":0,"259":0,"263":0,"264":0,"267":0,"268":0,"271":0,"272":0,"274":0,"275":0,"276":0,"277":0,"279":0,"280":0,"284":0,"285":0,"286":0,"287":0,"289":0,"291":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/root.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/root.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":1,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":2,"156":2,"157":2},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":2},"fnMap":{"1":{"name":"Root","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":23}}},"2":{"name":"fromJSON","line":45,"loc":{"start":{"line":45,"column":16},"end":{"line":45,"column":46}}},"3":{"name":"SYNC","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":16}},"skip":true},"4":{"name":"load","line":74,"loc":{"start":{"line":74,"column":22},"end":{"line":74,"column":65}}},"5":{"name":"finish","line":86,"loc":{"start":{"line":86,"column":4},"end":{"line":86,"column":31}}},"6":{"name":"process","line":98,"loc":{"start":{"line":98,"column":4},"end":{"line":98,"column":39}}},"7":{"name":"fetch","line":126,"loc":{"start":{"line":126,"column":4},"end":{"line":126,"column":35}}},"8":{"name":"(anonymous_8)","line":147,"loc":{"start":{"line":147,"column":27},"end":{"line":147,"column":38}}},"9":{"name":"(anonymous_9)","line":168,"loc":{"start":{"line":168,"column":33},"end":{"line":168,"column":55}}},"10":{"name":"loadSync","line":232,"loc":{"start":{"line":232,"column":26},"end":{"line":232,"column":63}}},"11":{"name":"resolveAll","line":241,"loc":{"start":{"line":241,"column":28},"end":{"line":241,"column":50}}},"12":{"name":"(anonymous_12)","line":243,"loc":{"start":{"line":243,"column":68},"end":{"line":243,"column":84}}},"13":{"name":"tryHandleExtension","line":260,"loc":{"start":{"line":260,"column":0},"end":{"line":260,"column":41}}},"14":{"name":"_handleAdd","line":278,"loc":{"start":{"line":278,"column":28},"end":{"line":278,"column":56}}},"15":{"name":"_handleRemove","line":315,"loc":{"start":{"line":315,"column":31},"end":{"line":315,"column":62}}},"16":{"name":"(anonymous_16)","line":346,"loc":{"start":{"line":346,"column":18},"end":{"line":346,"column":51}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":22}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":94}},"4":{"start":{"line":8,"column":0},"end":{"line":10,"column":32}},"5":{"start":{"line":12,"column":0},"end":{"line":14,"column":11}},"6":{"start":{"line":23,"column":0},"end":{"line":37,"column":1}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":38}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":20}},"10":{"start":{"line":45,"column":0},"end":{"line":51,"column":2}},"11":{"start":{"line":46,"column":4},"end":{"line":47,"column":26}},"12":{"start":{"line":47,"column":8},"end":{"line":47,"column":26}},"13":{"start":{"line":48,"column":4},"end":{"line":49,"column":38}},"14":{"start":{"line":49,"column":8},"end":{"line":49,"column":38}},"15":{"start":{"line":50,"column":4},"end":{"line":50,"column":37}},"16":{"start":{"line":61,"column":0},"end":{"line":61,"column":47}},"17":{"start":{"line":65,"column":0},"end":{"line":65,"column":18},"skip":true},"18":{"start":{"line":74,"column":0},"end":{"line":200,"column":2}},"19":{"start":{"line":75,"column":4},"end":{"line":78,"column":5}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":27}},"21":{"start":{"line":77,"column":8},"end":{"line":77,"column":28}},"22":{"start":{"line":79,"column":4},"end":{"line":79,"column":20}},"23":{"start":{"line":80,"column":4},"end":{"line":81,"column":61}},"24":{"start":{"line":81,"column":8},"end":{"line":81,"column":61}},"25":{"start":{"line":83,"column":4},"end":{"line":83,"column":33}},"26":{"start":{"line":86,"column":4},"end":{"line":95,"column":5}},"27":{"start":{"line":88,"column":8},"end":{"line":89,"column":19}},"28":{"start":{"line":89,"column":12},"end":{"line":89,"column":19},"skip":true},"29":{"start":{"line":90,"column":8},"end":{"line":90,"column":26}},"30":{"start":{"line":91,"column":8},"end":{"line":91,"column":24}},"31":{"start":{"line":92,"column":8},"end":{"line":93,"column":22}},"32":{"start":{"line":93,"column":12},"end":{"line":93,"column":22}},"33":{"start":{"line":94,"column":8},"end":{"line":94,"column":22}},"34":{"start":{"line":98,"column":4},"end":{"line":123,"column":5}},"35":{"start":{"line":99,"column":8},"end":{"line":120,"column":9}},"36":{"start":{"line":100,"column":12},"end":{"line":101,"column":44}},"37":{"start":{"line":101,"column":16},"end":{"line":101,"column":44}},"38":{"start":{"line":102,"column":12},"end":{"line":117,"column":13}},"39":{"start":{"line":103,"column":16},"end":{"line":103,"column":71}},"40":{"start":{"line":105,"column":16},"end":{"line":105,"column":42}},"41":{"start":{"line":106,"column":16},"end":{"line":108,"column":26}},"42":{"start":{"line":109,"column":16},"end":{"line":112,"column":44}},"43":{"start":{"line":110,"column":20},"end":{"line":112,"column":44}},"44":{"start":{"line":111,"column":24},"end":{"line":112,"column":44}},"45":{"start":{"line":112,"column":28},"end":{"line":112,"column":44}},"46":{"start":{"line":113,"column":16},"end":{"line":116,"column":50}},"47":{"start":{"line":114,"column":20},"end":{"line":116,"column":50}},"48":{"start":{"line":115,"column":24},"end":{"line":116,"column":50}},"49":{"start":{"line":116,"column":28},"end":{"line":116,"column":50}},"50":{"start":{"line":119,"column":12},"end":{"line":119,"column":24}},"51":{"start":{"line":121,"column":8},"end":{"line":122,"column":31}},"52":{"start":{"line":122,"column":12},"end":{"line":122,"column":31}},"53":{"start":{"line":126,"column":4},"end":{"line":184,"column":5}},"54":{"start":{"line":129,"column":8},"end":{"line":129,"column":59}},"55":{"start":{"line":130,"column":8},"end":{"line":134,"column":9}},"56":{"start":{"line":131,"column":12},"end":{"line":131,"column":50}},"57":{"start":{"line":132,"column":12},"end":{"line":133,"column":35}},"58":{"start":{"line":133,"column":16},"end":{"line":133,"column":35}},"59":{"start":{"line":137,"column":8},"end":{"line":138,"column":19}},"60":{"start":{"line":138,"column":12},"end":{"line":138,"column":19}},"61":{"start":{"line":139,"column":8},"end":{"line":139,"column":34}},"62":{"start":{"line":142,"column":8},"end":{"line":153,"column":9}},"63":{"start":{"line":143,"column":12},"end":{"line":151,"column":13}},"64":{"start":{"line":144,"column":16},"end":{"line":144,"column":52}},"65":{"start":{"line":146,"column":16},"end":{"line":146,"column":25}},"66":{"start":{"line":147,"column":16},"end":{"line":150,"column":19}},"67":{"start":{"line":148,"column":20},"end":{"line":148,"column":29}},"68":{"start":{"line":149,"column":20},"end":{"line":149,"column":56}},"69":{"start":{"line":152,"column":12},"end":{"line":152,"column":19}},"70":{"start":{"line":156,"column":8},"end":{"line":183,"column":9}},"71":{"start":{"line":157,"column":12},"end":{"line":157,"column":23}},"72":{"start":{"line":158,"column":12},"end":{"line":164,"column":13}},"73":{"start":{"line":159,"column":16},"end":{"line":159,"column":73}},"74":{"start":{"line":161,"column":16},"end":{"line":162,"column":32}},"75":{"start":{"line":162,"column":20},"end":{"line":162,"column":32}},"76":{"start":{"line":163,"column":16},"end":{"line":163,"column":23}},"77":{"start":{"line":165,"column":12},"end":{"line":165,"column":38}},"78":{"start":{"line":167,"column":12},"end":{"line":167,"column":21}},"79":{"start":{"line":168,"column":12},"end":{"line":182,"column":15}},"80":{"start":{"line":169,"column":16},"end":{"line":169,"column":25}},"81":{"start":{"line":171,"column":16},"end":{"line":172,"column":27}},"82":{"start":{"line":172,"column":20},"end":{"line":172,"column":27},"skip":true},"83":{"start":{"line":173,"column":16},"end":{"line":180,"column":17}},"84":{"start":{"line":175,"column":20},"end":{"line":178,"column":43}},"85":{"start":{"line":176,"column":24},"end":{"line":176,"column":36}},"86":{"start":{"line":177,"column":25},"end":{"line":178,"column":43},"skip":true},"87":{"start":{"line":178,"column":24},"end":{"line":178,"column":43},"skip":true},"88":{"start":{"line":179,"column":20},"end":{"line":179,"column":27}},"89":{"start":{"line":181,"column":16},"end":{"line":181,"column":42}},"90":{"start":{"line":185,"column":4},"end":{"line":185,"column":19}},"91":{"start":{"line":189,"column":4},"end":{"line":190,"column":32}},"92":{"start":{"line":190,"column":8},"end":{"line":190,"column":32}},"93":{"start":{"line":191,"column":4},"end":{"line":193,"column":28}},"94":{"start":{"line":192,"column":8},"end":{"line":193,"column":28}},"95":{"start":{"line":193,"column":12},"end":{"line":193,"column":28}},"96":{"start":{"line":195,"column":4},"end":{"line":196,"column":20}},"97":{"start":{"line":196,"column":8},"end":{"line":196,"column":20}},"98":{"start":{"line":197,"column":4},"end":{"line":198,"column":27}},"99":{"start":{"line":198,"column":8},"end":{"line":198,"column":27}},"100":{"start":{"line":199,"column":4},"end":{"line":199,"column":21}},"101":{"start":{"line":232,"column":0},"end":{"line":236,"column":2}},"102":{"start":{"line":233,"column":4},"end":{"line":234,"column":37}},"103":{"start":{"line":234,"column":8},"end":{"line":234,"column":37}},"104":{"start":{"line":235,"column":4},"end":{"line":235,"column":46}},"105":{"start":{"line":241,"column":0},"end":{"line":247,"column":2}},"106":{"start":{"line":242,"column":4},"end":{"line":245,"column":23}},"107":{"start":{"line":243,"column":8},"end":{"line":245,"column":23}},"108":{"start":{"line":244,"column":12},"end":{"line":244,"column":79}},"109":{"start":{"line":246,"column":4},"end":{"line":246,"column":53}},"110":{"start":{"line":250,"column":0},"end":{"line":250,"column":24}},"111":{"start":{"line":260,"column":0},"end":{"line":270,"column":1}},"112":{"start":{"line":261,"column":4},"end":{"line":261,"column":57}},"113":{"start":{"line":262,"column":4},"end":{"line":268,"column":5}},"114":{"start":{"line":263,"column":8},"end":{"line":263,"column":112}},"115":{"start":{"line":264,"column":8},"end":{"line":264,"column":43}},"116":{"start":{"line":265,"column":8},"end":{"line":265,"column":43}},"117":{"start":{"line":266,"column":8},"end":{"line":266,"column":38}},"118":{"start":{"line":267,"column":8},"end":{"line":267,"column":20}},"119":{"start":{"line":269,"column":4},"end":{"line":269,"column":17}},"120":{"start":{"line":278,"column":0},"end":{"line":307,"column":2}},"121":{"start":{"line":279,"column":4},"end":{"line":302,"column":5}},"122":{"start":{"line":281,"column":8},"end":{"line":283,"column":43}},"123":{"start":{"line":282,"column":12},"end":{"line":283,"column":43}},"124":{"start":{"line":283,"column":16},"end":{"line":283,"column":43}},"125":{"start":{"line":285,"column":11},"end":{"line":302,"column":5}},"126":{"start":{"line":287,"column":8},"end":{"line":288,"column":55}},"127":{"start":{"line":288,"column":12},"end":{"line":288,"column":55}},"128":{"start":{"line":292,"column":8},"end":{"line":297,"column":24}},"129":{"start":{"line":293,"column":12},"end":{"line":297,"column":24}},"130":{"start":{"line":294,"column":16},"end":{"line":297,"column":24}},"131":{"start":{"line":295,"column":20},"end":{"line":295,"column":47}},"132":{"start":{"line":297,"column":20},"end":{"line":297,"column":24}},"133":{"start":{"line":298,"column":8},"end":{"line":299,"column":52}},"134":{"start":{"line":299,"column":12},"end":{"line":299,"column":52}},"135":{"start":{"line":300,"column":8},"end":{"line":301,"column":48}},"136":{"start":{"line":301,"column":12},"end":{"line":301,"column":48}},"137":{"start":{"line":315,"column":0},"end":{"line":344,"column":2}},"138":{"start":{"line":316,"column":4},"end":{"line":343,"column":5}},"139":{"start":{"line":318,"column":8},"end":{"line":328,"column":9}},"140":{"start":{"line":319,"column":12},"end":{"line":327,"column":13}},"141":{"start":{"line":320,"column":16},"end":{"line":320,"column":75}},"142":{"start":{"line":321,"column":16},"end":{"line":321,"column":45}},"143":{"start":{"line":323,"column":16},"end":{"line":323,"column":58}},"144":{"start":{"line":325,"column":16},"end":{"line":326,"column":51}},"145":{"start":{"line":326,"column":20},"end":{"line":326,"column":51}},"146":{"start":{"line":330,"column":11},"end":{"line":343,"column":5}},"147":{"start":{"line":332,"column":8},"end":{"line":333,"column":46}},"148":{"start":{"line":333,"column":12},"end":{"line":333,"column":46}},"149":{"start":{"line":335,"column":11},"end":{"line":343,"column":5}},"150":{"start":{"line":337,"column":8},"end":{"line":338,"column":55}},"151":{"start":{"line":338,"column":12},"end":{"line":338,"column":55}},"152":{"start":{"line":340,"column":8},"end":{"line":341,"column":46}},"153":{"start":{"line":341,"column":12},"end":{"line":341,"column":46}},"154":{"start":{"line":346,"column":0},"end":{"line":350,"column":2}},"155":{"start":{"line":347,"column":4},"end":{"line":347,"column":17}},"156":{"start":{"line":348,"column":4},"end":{"line":348,"column":19}},"157":{"start":{"line":349,"column":4},"end":{"line":349,"column":21}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"4":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8},"skip":true},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"6":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8}},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]},"7":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":12}},{"start":{"line":100,"column":12},"end":{"line":100,"column":12}}]},"8":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":16},"end":{"line":100,"column":37}},{"start":{"line":100,"column":41},"end":{"line":100,"column":65}}]},"9":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":12}},{"start":{"line":102,"column":12},"end":{"line":102,"column":12}}]},"10":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":16},"end":{"line":109,"column":16}},{"start":{"line":109,"column":16},"end":{"line":109,"column":16}}]},"11":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":24},"end":{"line":111,"column":24}},{"start":{"line":111,"column":24},"end":{"line":111,"column":24}}]},"12":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":16},"end":{"line":113,"column":16}},{"start":{"line":113,"column":16},"end":{"line":113,"column":16}}]},"13":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":24},"end":{"line":115,"column":24}},{"start":{"line":115,"column":24},"end":{"line":115,"column":24}}]},"14":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":8}},{"start":{"line":121,"column":8},"end":{"line":121,"column":8}}]},"15":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":17}},{"start":{"line":121,"column":21},"end":{"line":121,"column":28}}]},"16":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":8}},{"start":{"line":130,"column":8},"end":{"line":130,"column":8}}]},"17":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":12},"end":{"line":132,"column":12}},{"start":{"line":132,"column":12},"end":{"line":132,"column":12}}]},"18":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]},"19":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]},"20":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":143,"column":12}},{"start":{"line":143,"column":12},"end":{"line":143,"column":12}}]},"21":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":8}},{"start":{"line":156,"column":8},"end":{"line":156,"column":8}}]},"22":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":16},"end":{"line":161,"column":16}},{"start":{"line":161,"column":16},"end":{"line":161,"column":16}}]},"23":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":16},"end":{"line":171,"column":16},"skip":true},{"start":{"line":171,"column":16},"end":{"line":171,"column":16}}]},"24":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":16},"end":{"line":173,"column":16}},{"start":{"line":173,"column":16},"end":{"line":173,"column":16}}]},"25":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":20},"end":{"line":175,"column":20}},{"start":{"line":175,"column":20},"end":{"line":175,"column":20},"skip":true}]},"26":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":25},"end":{"line":177,"column":25},"skip":true},{"start":{"line":177,"column":25},"end":{"line":177,"column":25},"skip":true}]},"27":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"28":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":8},"end":{"line":192,"column":8}},{"start":{"line":192,"column":8},"end":{"line":192,"column":8}}]},"29":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"30":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"31":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"32":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":4},"end":{"line":242,"column":4}},{"start":{"line":242,"column":4},"end":{"line":242,"column":4}}]},"33":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"34":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":279,"column":4}},{"start":{"line":279,"column":4},"end":{"line":279,"column":4}}]},"35":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":8},"end":{"line":281,"column":8}},{"start":{"line":281,"column":8},"end":{"line":281,"column":8}}]},"36":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":67},"end":{"line":281,"column":94}},{"start":{"line":281,"column":124},"end":{"line":281,"column":146}}]},"37":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":12},"end":{"line":282,"column":12}},{"start":{"line":282,"column":12},"end":{"line":282,"column":12}}]},"38":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":11},"end":{"line":285,"column":11}},{"start":{"line":285,"column":11},"end":{"line":285,"column":11}}]},"39":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":8},"end":{"line":287,"column":8}},{"start":{"line":287,"column":8},"end":{"line":287,"column":8}}]},"40":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":8}},{"start":{"line":292,"column":8},"end":{"line":292,"column":8}}]},"41":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":16},"end":{"line":294,"column":16}},{"start":{"line":294,"column":16},"end":{"line":294,"column":16}}]},"42":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":8},"end":{"line":300,"column":8}},{"start":{"line":300,"column":8},"end":{"line":300,"column":8}}]},"43":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"44":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":8},"end":{"line":318,"column":8}},{"start":{"line":318,"column":8},"end":{"line":318,"column":8}}]},"45":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":12},"end":{"line":319,"column":12}},{"start":{"line":319,"column":12},"end":{"line":319,"column":12}}]},"46":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":16},"end":{"line":325,"column":16}},{"start":{"line":325,"column":16},"end":{"line":325,"column":16},"skip":true}]},"47":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":11},"end":{"line":330,"column":11}},{"start":{"line":330,"column":11},"end":{"line":330,"column":11}}]},"48":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":8},"end":{"line":332,"column":8}},{"start":{"line":332,"column":8},"end":{"line":332,"column":8}}]},"49":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":11},"end":{"line":335,"column":11}},{"start":{"line":335,"column":11},"end":{"line":335,"column":11}}]},"50":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":8},"end":{"line":340,"column":8}},{"start":{"line":340,"column":8},"end":{"line":340,"column":8}}]}},"code":["\"use strict\";","module.exports = Root;","","// extends Namespace","var Namespace = require(\"./namespace\");","((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";","","var Field   = require(\"./field\"),","    Enum    = require(\"./enum\"),","    util    = require(\"./util\");","","var Type,   // cyclic","    parse,  // might be excluded","    common; // \"","","/**"," * Constructs a new root namespace instance."," * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together."," * @extends NamespaceBase"," * @constructor"," * @param {Object.<string,*>} [options] Top level options"," */","function Root(options) {","    Namespace.call(this, \"\", options);","","    /**","     * Deferred extension fields.","     * @type {Field[]}","     */","    this.deferred = [];","","    /**","     * Resolved file names of loaded files.","     * @type {string[]}","     */","    this.files = [];","}","","/**"," * Loads a namespace descriptor into a root namespace."," * @param {NamespaceDescriptor} json Nameespace descriptor"," * @param {Root} [root] Root namespace, defaults to create a new one if omitted"," * @returns {Root} Root namespace"," */","Root.fromJSON = function fromJSON(json, root) {","    if (!root)","        root = new Root();","    if (json.options)","        root.setOptions(json.options);","    return root.addJSON(json.nested);","};","","/**"," * Resolves the path of an imported file, relative to the importing origin."," * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories."," * @function"," * @param {string} origin The file name of the importing file"," * @param {string} target The file name being imported"," * @returns {?string} Resolved path to `target` or `null` to skip the file"," */","Root.prototype.resolvePath = util.path.resolve;","","// A symbol-like function to safely signal synchronous loading","/* istanbul ignore next */","function SYNC() {} // eslint-disable-line no-empty-function","","/**"," * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback."," * @param {string|string[]} filename Names of one or multiple files to load"," * @param {ParseOptions} options Parse options"," * @param {LoadCallback} callback Callback function"," * @returns {undefined}"," */","Root.prototype.load = function load(filename, options, callback) {","    if (typeof options === \"function\") {","        callback = options;","        options = undefined;","    }","    var self = this;","    if (!callback)","        return util.asPromise(load, self, filename, options);","","    var sync = callback === SYNC; // undocumented","","    // Finishes loading by calling the callback (exactly once)","    function finish(err, root) {","        /* istanbul ignore if */","        if (!callback)","            return;","        var cb = callback;","        callback = null;","        if (sync)","            throw err;","        cb(err, root);","    }","","    // Processes a single file","    function process(filename, source) {","        try {","            if (util.isString(source) && source.charAt(0) === \"{\")","                source = JSON.parse(source);","            if (!util.isString(source))","                self.setOptions(source.options).addJSON(source.nested);","            else {","                parse.filename = filename;","                var parsed = parse(source, self, options),","                    resolved,","                    i = 0;","                if (parsed.imports)","                    for (; i < parsed.imports.length; ++i)","                        if (resolved = self.resolvePath(filename, parsed.imports[i]))","                            fetch(resolved);","                if (parsed.weakImports)","                    for (i = 0; i < parsed.weakImports.length; ++i)","                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))","                            fetch(resolved, true);","            }","        } catch (err) {","            finish(err);","        }","        if (!sync && !queued)","            finish(null, self); // only once anyway","    }","","    // Fetches a single file","    function fetch(filename, weak) {","","        // Strip path if this file references a bundled definition","        var idx = filename.lastIndexOf(\"google/protobuf/\");","        if (idx > -1) {","            var altname = filename.substring(idx);","            if (altname in common)","                filename = altname;","        }","","        // Skip if already loaded / attempted","        if (self.files.indexOf(filename) > -1)","            return;","        self.files.push(filename);","","        // Shortcut bundled definitions","        if (filename in common) {","            if (sync)","                process(filename, common[filename]);","            else {","                ++queued;","                setTimeout(function() {","                    --queued;","                    process(filename, common[filename]);","                });","            }","            return;","        }","","        // Otherwise fetch from disk or network","        if (sync) {","            var source;","            try {","                source = util.fs.readFileSync(filename).toString(\"utf8\");","            } catch (err) {","                if (!weak)","                    finish(err);","                return;","            }","            process(filename, source);","        } else {","            ++queued;","            util.fetch(filename, function(err, source) {","                --queued;","                /* istanbul ignore if */","                if (!callback)","                    return; // terminated meanwhile","                if (err) {","                    /* istanbul ignore else */","                    if (!weak)","                        finish(err);","                    else if (!queued) // can't be covered reliably","                        finish(null, self);","                    return;","                }","                process(filename, source);","            });","        }","    }","    var queued = 0;","","    // Assembling the root namespace doesn't require working type","    // references anymore, so we can load everything in parallel","    if (util.isString(filename))","        filename = [ filename ];","    for (var i = 0, resolved; i < filename.length; ++i)","        if (resolved = self.resolvePath(\"\", filename[i]))","            fetch(resolved);","","    if (sync)","        return self;","    if (!queued)","        finish(null, self);","    return undefined;","};","// function load(filename:string, options:ParseOptions, callback:LoadCallback):undefined","","/**"," * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback."," * @param {string|string[]} filename Names of one or multiple files to load"," * @param {LoadCallback} callback Callback function"," * @returns {undefined}"," * @variation 2"," */","// function load(filename:string, callback:LoadCallback):undefined","","/**"," * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise."," * @name Root#load"," * @function"," * @param {string|string[]} filename Names of one or multiple files to load"," * @param {ParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted."," * @returns {Promise<Root>} Promise"," * @variation 3"," */","// function load(filename:string, [options:ParseOptions]):Promise<Root>","","/**"," * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only)."," * @name Root#loadSync"," * @function"," * @param {string|string[]} filename Names of one or multiple files to load"," * @param {ParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted."," * @returns {Root} Root namespace"," * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid"," */","Root.prototype.loadSync = function loadSync(filename, options) {","    if (!util.isNode)","        throw Error(\"not supported\");","    return this.load(filename, options, SYNC);","};","","/**"," * @override"," */","Root.prototype.resolveAll = function resolveAll() {","    if (this.deferred.length)","        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {","            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;","        }).join(\", \"));","    return Namespace.prototype.resolveAll.call(this);","};","","// only uppercased (and thus conflict-free) children are exposed, see below","var exposeRe = /^[A-Z]/;","","/**"," * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type."," * @param {Root} root Root instance"," * @param {Field} field Declaring extension field witin the declaring type"," * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise"," * @inner"," * @ignore"," */","function tryHandleExtension(root, field) {","    var extendedType = field.parent.lookup(field.extend);","    if (extendedType) {","        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);","        sisterField.declaringField = field;","        field.extensionField = sisterField;","        extendedType.add(sisterField);","        return true;","    }","    return false;","}","","/**"," * Called when any object is added to this root or its sub-namespaces."," * @param {ReflectionObject} object Object added"," * @returns {undefined}"," * @private"," */","Root.prototype._handleAdd = function _handleAdd(object) {","    if (object instanceof Field) {","","        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)","            if (!tryHandleExtension(this, object))","                this.deferred.push(object);","","    } else if (object instanceof Enum) {","","        if (exposeRe.test(object.name))","            object.parent[object.name] = object.values; // expose enum values as property of its parent","","    } else /* everything else is a namespace */ {","","        if (object instanceof Type) // Try to handle any deferred extensions","            for (var i = 0; i < this.deferred.length;)","                if (tryHandleExtension(this, this.deferred[i]))","                    this.deferred.splice(i, 1);","                else","                    ++i;","        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace","            this._handleAdd(object._nestedArray[j]);","        if (exposeRe.test(object.name))","            object.parent[object.name] = object; // expose namespace as property of its parent","    }","","    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as","    // properties of namespaces just like static code does. This allows using a .d.ts generated for","    // a static module with reflection-based solutions where the condition is met.","};","","/**"," * Called when any object is removed from this root or its sub-namespaces."," * @param {ReflectionObject} object Object removed"," * @returns {undefined}"," * @private"," */","Root.prototype._handleRemove = function _handleRemove(object) {","    if (object instanceof Field) {","","        if (/* an extension field */ object.extend !== undefined) {","            if (/* already handled */ object.extensionField) { // remove its sister field","                object.extensionField.parent.remove(object.extensionField);","                object.extensionField = null;","            } else { // cancel the extension","                var index = this.deferred.indexOf(object);","                /* istanbul ignore else */","                if (index > -1)","                    this.deferred.splice(index, 1);","            }","        }","","    } else if (object instanceof Enum) {","","        if (exposeRe.test(object.name))","            delete object.parent[object.name]; // unexpose enum values","","    } else if (object instanceof Namespace) {","","        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace","            this._handleRemove(object._nestedArray[i]);","","        if (exposeRe.test(object.name))","            delete object.parent[object.name]; // unexpose namespaces","","    }","};","","Root._configure = function(Type_, parse_, common_) {","    Type = Type_;","    parse = parse_;","    common = common_;","};",""],"l":{"2":1,"5":1,"6":1,"8":1,"12":1,"23":1,"24":0,"30":0,"36":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"61":1,"65":1,"74":1,"75":0,"76":0,"77":0,"79":0,"80":0,"81":0,"83":0,"86":1,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"105":0,"106":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"119":0,"121":0,"122":0,"126":1,"129":0,"130":0,"131":0,"132":0,"133":0,"137":0,"138":0,"139":0,"142":0,"143":0,"144":0,"146":0,"147":0,"148":0,"149":0,"152":0,"156":0,"157":0,"158":0,"159":0,"161":0,"162":0,"163":0,"165":0,"167":0,"168":0,"169":0,"171":0,"172":1,"173":0,"175":0,"176":0,"177":1,"178":1,"179":0,"181":0,"185":0,"189":0,"190":0,"191":0,"192":0,"193":0,"195":0,"196":0,"197":0,"198":0,"199":0,"232":1,"233":0,"234":0,"235":0,"241":1,"242":0,"243":0,"244":0,"246":0,"250":1,"260":1,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"269":0,"278":1,"279":0,"281":0,"282":0,"283":0,"285":0,"287":0,"288":0,"292":0,"293":0,"294":0,"295":0,"297":0,"298":0,"299":0,"300":0,"301":0,"315":1,"316":0,"318":0,"319":0,"320":0,"321":0,"323":0,"325":0,"326":0,"330":0,"332":0,"333":0,"335":0,"337":0,"338":0,"340":0,"341":0,"346":1,"347":2,"348":2,"349":2}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/type.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/type.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":1,"140":0,"141":1,"142":0,"143":1,"144":0,"145":0,"146":0,"147":1,"148":0,"149":1,"150":0,"151":1,"152":1,"153":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0,0,0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"Type","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":29}}},"2":{"name":"(anonymous_2)","line":102,"loc":{"start":{"line":102,"column":13},"end":{"line":102,"column":24}}},"3":{"name":"(anonymous_3)","line":130,"loc":{"start":{"line":130,"column":13},"end":{"line":130,"column":24}}},"4":{"name":"(anonymous_4)","line":142,"loc":{"start":{"line":142,"column":13},"end":{"line":142,"column":24}}},"5":{"name":"(anonymous_5)","line":154,"loc":{"start":{"line":154,"column":13},"end":{"line":154,"column":24}}},"6":{"name":"(anonymous_6)","line":157,"loc":{"start":{"line":157,"column":13},"end":{"line":157,"column":28}}},"7":{"name":"clearCache","line":166,"loc":{"start":{"line":166,"column":0},"end":{"line":166,"column":26}}},"8":{"name":"fromJSON","line":193,"loc":{"start":{"line":193,"column":16},"end":{"line":193,"column":46}}},"9":{"name":"toJSON","line":236,"loc":{"start":{"line":236,"column":24},"end":{"line":236,"column":42}}},"10":{"name":"(anonymous_10)","line":241,"loc":{"start":{"line":241,"column":67},"end":{"line":241,"column":81}}},"11":{"name":"resolveAll","line":252,"loc":{"start":{"line":252,"column":28},"end":{"line":252,"column":50}}},"12":{"name":"get","line":265,"loc":{"start":{"line":265,"column":21},"end":{"line":265,"column":40}}},"13":{"name":"add","line":279,"loc":{"start":{"line":279,"column":21},"end":{"line":279,"column":42}}},"14":{"name":"remove","line":321,"loc":{"start":{"line":321,"column":24},"end":{"line":321,"column":48}}},"15":{"name":"isReservedId","line":353,"loc":{"start":{"line":353,"column":30},"end":{"line":353,"column":56}}},"16":{"name":"isReservedName","line":366,"loc":{"start":{"line":366,"column":32},"end":{"line":366,"column":62}}},"17":{"name":"create","line":379,"loc":{"start":{"line":379,"column":24},"end":{"line":379,"column":52}}},"18":{"name":"setup","line":387,"loc":{"start":{"line":387,"column":23},"end":{"line":387,"column":40}}},"19":{"name":"encode_setup","line":425,"loc":{"start":{"line":425,"column":24},"end":{"line":425,"column":63}}},"20":{"name":"encodeDelimited","line":435,"loc":{"start":{"line":435,"column":33},"end":{"line":435,"column":75}}},"21":{"name":"decode_setup","line":447,"loc":{"start":{"line":447,"column":24},"end":{"line":447,"column":62}}},"22":{"name":"decodeDelimited","line":458,"loc":{"start":{"line":458,"column":33},"end":{"line":458,"column":66}}},"23":{"name":"verify_setup","line":469,"loc":{"start":{"line":469,"column":24},"end":{"line":469,"column":55}}},"24":{"name":"fromObject","line":478,"loc":{"start":{"line":478,"column":28},"end":{"line":478,"column":56}}},"25":{"name":"toObject","line":516,"loc":{"start":{"line":516,"column":26},"end":{"line":516,"column":62}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":22}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":94}},"4":{"start":{"line":8,"column":0},"end":{"line":21,"column":39}},"5":{"start":{"line":31,"column":0},"end":{"line":91,"column":1}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":40}},"7":{"start":{"line":38,"column":4},"end":{"line":38,"column":21}},"8":{"start":{"line":44,"column":4},"end":{"line":44,"column":28}},"9":{"start":{"line":50,"column":4},"end":{"line":50,"column":32}},"10":{"start":{"line":56,"column":4},"end":{"line":56,"column":30}},"11":{"start":{"line":62,"column":4},"end":{"line":62,"column":27}},"12":{"start":{"line":69,"column":4},"end":{"line":69,"column":28}},"13":{"start":{"line":76,"column":4},"end":{"line":76,"column":29}},"14":{"start":{"line":83,"column":4},"end":{"line":83,"column":29}},"15":{"start":{"line":90,"column":4},"end":{"line":90,"column":22}},"16":{"start":{"line":93,"column":0},"end":{"line":164,"column":3}},"17":{"start":{"line":105,"column":12},"end":{"line":106,"column":40}},"18":{"start":{"line":106,"column":16},"end":{"line":106,"column":40},"skip":true},"19":{"start":{"line":108,"column":12},"end":{"line":108,"column":34}},"20":{"start":{"line":109,"column":12},"end":{"line":118,"column":13}},"21":{"start":{"line":110,"column":16},"end":{"line":111,"column":34}},"22":{"start":{"line":114,"column":16},"end":{"line":115,"column":70}},"23":{"start":{"line":115,"column":20},"end":{"line":115,"column":70},"skip":true},"24":{"start":{"line":117,"column":16},"end":{"line":117,"column":45}},"25":{"start":{"line":119,"column":12},"end":{"line":119,"column":36}},"26":{"start":{"line":131,"column":12},"end":{"line":131,"column":88}},"27":{"start":{"line":143,"column":12},"end":{"line":143,"column":88}},"28":{"start":{"line":155,"column":12},"end":{"line":155,"column":72}},"29":{"start":{"line":158,"column":12},"end":{"line":161,"column":34}},"30":{"start":{"line":159,"column":16},"end":{"line":159,"column":34}},"31":{"start":{"line":161,"column":16},"end":{"line":161,"column":34}},"32":{"start":{"line":166,"column":0},"end":{"line":172,"column":1}},"33":{"start":{"line":167,"column":4},"end":{"line":167,"column":81}},"34":{"start":{"line":168,"column":4},"end":{"line":168,"column":23}},"35":{"start":{"line":169,"column":4},"end":{"line":169,"column":23}},"36":{"start":{"line":170,"column":4},"end":{"line":170,"column":23}},"37":{"start":{"line":171,"column":4},"end":{"line":171,"column":16}},"38":{"start":{"line":193,"column":0},"end":{"line":230,"column":2}},"39":{"start":{"line":194,"column":4},"end":{"line":194,"column":44}},"40":{"start":{"line":195,"column":4},"end":{"line":195,"column":38}},"41":{"start":{"line":196,"column":4},"end":{"line":196,"column":34}},"42":{"start":{"line":197,"column":4},"end":{"line":198,"column":14}},"43":{"start":{"line":199,"column":4},"end":{"line":204,"column":10}},"44":{"start":{"line":200,"column":8},"end":{"line":204,"column":10}},"45":{"start":{"line":205,"column":4},"end":{"line":207,"column":70}},"46":{"start":{"line":206,"column":8},"end":{"line":207,"column":70}},"47":{"start":{"line":207,"column":12},"end":{"line":207,"column":70}},"48":{"start":{"line":208,"column":4},"end":{"line":222,"column":9}},"49":{"start":{"line":209,"column":8},"end":{"line":222,"column":9}},"50":{"start":{"line":210,"column":12},"end":{"line":210,"column":47}},"51":{"start":{"line":211,"column":12},"end":{"line":221,"column":14}},"52":{"start":{"line":223,"column":4},"end":{"line":224,"column":42}},"53":{"start":{"line":224,"column":8},"end":{"line":224,"column":42}},"54":{"start":{"line":225,"column":4},"end":{"line":226,"column":38}},"55":{"start":{"line":226,"column":8},"end":{"line":226,"column":38}},"56":{"start":{"line":227,"column":4},"end":{"line":228,"column":26}},"57":{"start":{"line":228,"column":8},"end":{"line":228,"column":26}},"58":{"start":{"line":229,"column":4},"end":{"line":229,"column":16}},"59":{"start":{"line":236,"column":0},"end":{"line":247,"column":2}},"60":{"start":{"line":237,"column":4},"end":{"line":237,"column":58}},"61":{"start":{"line":238,"column":4},"end":{"line":246,"column":6}},"62":{"start":{"line":241,"column":83},"end":{"line":241,"column":110}},"63":{"start":{"line":252,"column":0},"end":{"line":260,"column":2}},"64":{"start":{"line":253,"column":4},"end":{"line":253,"column":41}},"65":{"start":{"line":254,"column":4},"end":{"line":255,"column":30}},"66":{"start":{"line":255,"column":8},"end":{"line":255,"column":30}},"67":{"start":{"line":256,"column":4},"end":{"line":256,"column":34}},"68":{"start":{"line":256,"column":35},"end":{"line":256,"column":41}},"69":{"start":{"line":257,"column":4},"end":{"line":258,"column":30}},"70":{"start":{"line":258,"column":8},"end":{"line":258,"column":30}},"71":{"start":{"line":259,"column":4},"end":{"line":259,"column":50}},"72":{"start":{"line":265,"column":0},"end":{"line":270,"column":2}},"73":{"start":{"line":266,"column":4},"end":{"line":269,"column":16}},"74":{"start":{"line":279,"column":0},"end":{"line":312,"column":2}},"75":{"start":{"line":281,"column":4},"end":{"line":282,"column":71}},"76":{"start":{"line":282,"column":8},"end":{"line":282,"column":71}},"77":{"start":{"line":284,"column":4},"end":{"line":303,"column":5}},"78":{"start":{"line":290,"column":8},"end":{"line":291,"column":69}},"79":{"start":{"line":291,"column":12},"end":{"line":291,"column":69}},"80":{"start":{"line":292,"column":8},"end":{"line":293,"column":71}},"81":{"start":{"line":293,"column":12},"end":{"line":293,"column":71}},"82":{"start":{"line":294,"column":8},"end":{"line":295,"column":77}},"83":{"start":{"line":295,"column":12},"end":{"line":295,"column":77}},"84":{"start":{"line":297,"column":8},"end":{"line":298,"column":41}},"85":{"start":{"line":298,"column":12},"end":{"line":298,"column":41}},"86":{"start":{"line":299,"column":8},"end":{"line":299,"column":42}},"87":{"start":{"line":300,"column":8},"end":{"line":300,"column":30}},"88":{"start":{"line":301,"column":8},"end":{"line":301,"column":27}},"89":{"start":{"line":302,"column":8},"end":{"line":302,"column":32}},"90":{"start":{"line":304,"column":4},"end":{"line":310,"column":5}},"91":{"start":{"line":305,"column":8},"end":{"line":306,"column":29}},"92":{"start":{"line":306,"column":12},"end":{"line":306,"column":29}},"93":{"start":{"line":307,"column":8},"end":{"line":307,"column":42}},"94":{"start":{"line":308,"column":8},"end":{"line":308,"column":27}},"95":{"start":{"line":309,"column":8},"end":{"line":309,"column":32}},"96":{"start":{"line":311,"column":4},"end":{"line":311,"column":54}},"97":{"start":{"line":321,"column":0},"end":{"line":346,"column":2}},"98":{"start":{"line":322,"column":4},"end":{"line":333,"column":5}},"99":{"start":{"line":326,"column":8},"end":{"line":327,"column":64}},"100":{"start":{"line":327,"column":12},"end":{"line":327,"column":64},"skip":true},"101":{"start":{"line":329,"column":8},"end":{"line":329,"column":40}},"102":{"start":{"line":330,"column":8},"end":{"line":330,"column":29}},"103":{"start":{"line":331,"column":8},"end":{"line":331,"column":30}},"104":{"start":{"line":332,"column":8},"end":{"line":332,"column":32}},"105":{"start":{"line":334,"column":4},"end":{"line":344,"column":5}},"106":{"start":{"line":337,"column":8},"end":{"line":338,"column":64}},"107":{"start":{"line":338,"column":12},"end":{"line":338,"column":64},"skip":true},"108":{"start":{"line":340,"column":8},"end":{"line":340,"column":40}},"109":{"start":{"line":341,"column":8},"end":{"line":341,"column":29}},"110":{"start":{"line":342,"column":8},"end":{"line":342,"column":30}},"111":{"start":{"line":343,"column":8},"end":{"line":343,"column":32}},"112":{"start":{"line":345,"column":4},"end":{"line":345,"column":57}},"113":{"start":{"line":353,"column":0},"end":{"line":359,"column":2}},"114":{"start":{"line":354,"column":4},"end":{"line":357,"column":28}},"115":{"start":{"line":355,"column":8},"end":{"line":357,"column":28}},"116":{"start":{"line":356,"column":12},"end":{"line":357,"column":28}},"117":{"start":{"line":357,"column":16},"end":{"line":357,"column":28}},"118":{"start":{"line":358,"column":4},"end":{"line":358,"column":17}},"119":{"start":{"line":366,"column":0},"end":{"line":372,"column":2}},"120":{"start":{"line":367,"column":4},"end":{"line":370,"column":28}},"121":{"start":{"line":368,"column":8},"end":{"line":370,"column":28}},"122":{"start":{"line":369,"column":12},"end":{"line":370,"column":28}},"123":{"start":{"line":370,"column":16},"end":{"line":370,"column":28}},"124":{"start":{"line":371,"column":4},"end":{"line":371,"column":17}},"125":{"start":{"line":379,"column":0},"end":{"line":381,"column":2}},"126":{"start":{"line":380,"column":4},"end":{"line":380,"column":37}},"127":{"start":{"line":387,"column":0},"end":{"line":417,"column":2}},"128":{"start":{"line":390,"column":4},"end":{"line":391,"column":22}},"129":{"start":{"line":392,"column":4},"end":{"line":393,"column":64}},"130":{"start":{"line":393,"column":8},"end":{"line":393,"column":64}},"131":{"start":{"line":394,"column":4},"end":{"line":398,"column":7}},"132":{"start":{"line":399,"column":4},"end":{"line":403,"column":7}},"133":{"start":{"line":404,"column":4},"end":{"line":407,"column":7}},"134":{"start":{"line":408,"column":4},"end":{"line":411,"column":7}},"135":{"start":{"line":412,"column":4},"end":{"line":415,"column":7}},"136":{"start":{"line":416,"column":4},"end":{"line":416,"column":16}},"137":{"start":{"line":425,"column":0},"end":{"line":427,"column":2}},"138":{"start":{"line":426,"column":4},"end":{"line":426,"column":48}},"139":{"start":{"line":435,"column":0},"end":{"line":437,"column":2}},"140":{"start":{"line":436,"column":4},"end":{"line":436,"column":88}},"141":{"start":{"line":447,"column":0},"end":{"line":449,"column":2}},"142":{"start":{"line":448,"column":4},"end":{"line":448,"column":47}},"143":{"start":{"line":458,"column":0},"end":{"line":462,"column":2}},"144":{"start":{"line":459,"column":4},"end":{"line":460,"column":39}},"145":{"start":{"line":460,"column":8},"end":{"line":460,"column":39}},"146":{"start":{"line":461,"column":4},"end":{"line":461,"column":48}},"147":{"start":{"line":469,"column":0},"end":{"line":471,"column":2}},"148":{"start":{"line":470,"column":4},"end":{"line":470,"column":40}},"149":{"start":{"line":478,"column":0},"end":{"line":480,"column":2}},"150":{"start":{"line":479,"column":4},"end":{"line":479,"column":43}},"151":{"start":{"line":489,"column":0},"end":{"line":489,"column":48}},"152":{"start":{"line":516,"column":0},"end":{"line":518,"column":2}},"153":{"start":{"line":517,"column":4},"end":{"line":517,"column":51}}},"branchMap":{"1":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12},"skip":true},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"2":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":16},"end":{"line":114,"column":16},"skip":true},{"start":{"line":114,"column":16},"end":{"line":114,"column":16}}]},"3":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":19},"end":{"line":131,"column":36}},{"start":{"line":131,"column":41},"end":{"line":131,"column":86}}]},"4":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":19},"end":{"line":143,"column":36}},{"start":{"line":143,"column":41},"end":{"line":143,"column":86}}]},"5":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":19},"end":{"line":155,"column":29}},{"start":{"line":155,"column":34},"end":{"line":155,"column":70}}]},"6":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":12}},{"start":{"line":158,"column":12},"end":{"line":158,"column":12}}]},"7":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":16},"end":{"line":158,"column":20}},{"start":{"line":158,"column":24},"end":{"line":158,"column":60}}]},"8":{"line":201,"type":"cond-expr","locations":[{"start":{"line":202,"column":14},"end":{"line":202,"column":31}},{"start":{"line":203,"column":14},"end":{"line":203,"column":28}}]},"9":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":205,"column":4}},{"start":{"line":205,"column":4},"end":{"line":205,"column":4}}]},"10":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"11":{"line":212,"type":"cond-expr","locations":[{"start":{"line":213,"column":18},"end":{"line":213,"column":32}},{"start":{"line":214,"column":18},"end":{"line":220,"column":36}}]},"12":{"line":214,"type":"cond-expr","locations":[{"start":{"line":215,"column":18},"end":{"line":215,"column":31}},{"start":{"line":216,"column":18},"end":{"line":220,"column":36}}]},"13":{"line":216,"type":"cond-expr","locations":[{"start":{"line":217,"column":18},"end":{"line":217,"column":31}},{"start":{"line":218,"column":18},"end":{"line":220,"column":36}}]},"14":{"line":218,"type":"cond-expr","locations":[{"start":{"line":219,"column":18},"end":{"line":219,"column":34}},{"start":{"line":220,"column":18},"end":{"line":220,"column":36}}]},"15":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"16":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":8},"end":{"line":223,"column":23}},{"start":{"line":223,"column":27},"end":{"line":223,"column":49}}]},"17":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"18":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":8},"end":{"line":225,"column":21}},{"start":{"line":225,"column":25},"end":{"line":225,"column":45}}]},"19":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":4}},{"start":{"line":227,"column":4},"end":{"line":227,"column":4}}]},"20":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":21},"end":{"line":239,"column":30}},{"start":{"line":239,"column":34},"end":{"line":239,"column":51}},{"start":{"line":239,"column":55},"end":{"line":239,"column":64}}]},"21":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":21},"end":{"line":241,"column":114}},{"start":{"line":241,"column":118},"end":{"line":241,"column":120}}]},"22":{"line":242,"type":"cond-expr","locations":[{"start":{"line":242,"column":65},"end":{"line":242,"column":80}},{"start":{"line":242,"column":83},"end":{"line":242,"column":92}}]},"23":{"line":242,"type":"binary-expr","locations":[{"start":{"line":242,"column":21},"end":{"line":242,"column":36}},{"start":{"line":242,"column":40},"end":{"line":242,"column":62}}]},"24":{"line":243,"type":"cond-expr","locations":[{"start":{"line":243,"column":61},"end":{"line":243,"column":74}},{"start":{"line":243,"column":77},"end":{"line":243,"column":86}}]},"25":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":21},"end":{"line":243,"column":34}},{"start":{"line":243,"column":38},"end":{"line":243,"column":58}}]},"26":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":21},"end":{"line":244,"column":31}},{"start":{"line":244,"column":35},"end":{"line":244,"column":44}}]},"27":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":21},"end":{"line":245,"column":30}},{"start":{"line":245,"column":34},"end":{"line":245,"column":50}},{"start":{"line":245,"column":54},"end":{"line":245,"column":63}}]},"28":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":11},"end":{"line":266,"column":28}},{"start":{"line":267,"column":11},"end":{"line":267,"column":22}},{"start":{"line":267,"column":26},"end":{"line":267,"column":43}},{"start":{"line":268,"column":11},"end":{"line":268,"column":22}},{"start":{"line":268,"column":26},"end":{"line":268,"column":43}},{"start":{"line":269,"column":11},"end":{"line":269,"column":15}}]},"29":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":4},"end":{"line":281,"column":4}},{"start":{"line":281,"column":4},"end":{"line":281,"column":4}}]},"30":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"31":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":8},"end":{"line":284,"column":31}},{"start":{"line":284,"column":35},"end":{"line":284,"column":62}}]},"32":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":8},"end":{"line":290,"column":8}},{"start":{"line":290,"column":8},"end":{"line":290,"column":8}}]},"33":{"line":290,"type":"cond-expr","locations":[{"start":{"line":290,"column":58},"end":{"line":290,"column":85},"skip":true},{"start":{"line":290,"column":88},"end":{"line":290,"column":114}}]},"34":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":8}},{"start":{"line":292,"column":8},"end":{"line":292,"column":8}}]},"35":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":8},"end":{"line":294,"column":8}},{"start":{"line":294,"column":8},"end":{"line":294,"column":8}}]},"36":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":8},"end":{"line":297,"column":8}},{"start":{"line":297,"column":8},"end":{"line":297,"column":8}}]},"37":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":304,"column":4}},{"start":{"line":304,"column":4},"end":{"line":304,"column":4}}]},"38":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8}},{"start":{"line":305,"column":8},"end":{"line":305,"column":8}}]},"39":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":4},"end":{"line":322,"column":4}},{"start":{"line":322,"column":4},"end":{"line":322,"column":4}}]},"40":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":31}},{"start":{"line":322,"column":35},"end":{"line":322,"column":62}}]},"41":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":8},"end":{"line":326,"column":8},"skip":true},{"start":{"line":326,"column":8},"end":{"line":326,"column":8}}]},"42":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":12},"end":{"line":326,"column":24}},{"start":{"line":326,"column":28},"end":{"line":326,"column":63}}]},"43":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":334,"column":4}},{"start":{"line":334,"column":4},"end":{"line":334,"column":4}}]},"44":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":8},"end":{"line":337,"column":8},"skip":true},{"start":{"line":337,"column":8},"end":{"line":337,"column":8}}]},"45":{"line":337,"type":"binary-expr","locations":[{"start":{"line":337,"column":12},"end":{"line":337,"column":24}},{"start":{"line":337,"column":28},"end":{"line":337,"column":63}}]},"46":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"47":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":12},"end":{"line":356,"column":12}},{"start":{"line":356,"column":12},"end":{"line":356,"column":12}}]},"48":{"line":356,"type":"binary-expr","locations":[{"start":{"line":356,"column":16},"end":{"line":356,"column":52}},{"start":{"line":356,"column":56},"end":{"line":356,"column":81}},{"start":{"line":356,"column":85},"end":{"line":356,"column":110}}]},"49":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":4},"end":{"line":367,"column":4}},{"start":{"line":367,"column":4},"end":{"line":367,"column":4}}]},"50":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":12},"end":{"line":369,"column":12}},{"start":{"line":369,"column":12},"end":{"line":369,"column":12}}]},"51":{"line":436,"type":"cond-expr","locations":[{"start":{"line":436,"column":55},"end":{"line":436,"column":68}},{"start":{"line":436,"column":71},"end":{"line":436,"column":77}}]},"52":{"line":436,"type":"binary-expr","locations":[{"start":{"line":436,"column":32},"end":{"line":436,"column":38}},{"start":{"line":436,"column":42},"end":{"line":436,"column":52}}]},"53":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":4},"end":{"line":459,"column":4}},{"start":{"line":459,"column":4},"end":{"line":459,"column":4}}]}},"code":["\"use strict\";","module.exports = Type;","","// extends Namespace","var Namespace = require(\"./namespace\");","((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";","","var Enum      = require(\"./enum\"),","    OneOf     = require(\"./oneof\"),","    Field     = require(\"./field\"),","    MapField  = require(\"./mapfield\"),","    Service   = require(\"./service\"),","    Class     = require(\"./class\"),","    Message   = require(\"./message\"),","    Reader    = require(\"./reader\"),","    Writer    = require(\"./writer\"),","    util      = require(\"./util\"),","    encoder   = require(\"./encoder\"),","    decoder   = require(\"./decoder\"),","    verifier  = require(\"./verifier\"),","    converter = require(\"./converter\");","","/**"," * Constructs a new reflected message type instance."," * @classdesc Reflected message type."," * @extends NamespaceBase"," * @constructor"," * @param {string} name Message name"," * @param {Object.<string,*>} [options] Declared options"," */","function Type(name, options) {","    Namespace.call(this, name, options);","","    /**","     * Message fields.","     * @type {Object.<string,Field>}","     */","    this.fields = {};  // toJSON, marker","","    /**","     * Oneofs declared within this namespace, if any.","     * @type {Object.<string,OneOf>}","     */","    this.oneofs = undefined; // toJSON","","    /**","     * Extension ranges, if any.","     * @type {number[][]}","     */","    this.extensions = undefined; // toJSON","","    /**","     * Reserved ranges, if any.","     * @type {Array.<number[]|string>}","     */","    this.reserved = undefined; // toJSON","","    /*?","     * Whether this type is a legacy group.","     * @type {boolean|undefined}","     */","    this.group = undefined; // toJSON","","    /**","     * Cached fields by id.","     * @type {?Object.<number,Field>}","     * @private","     */","    this._fieldsById = null;","","    /**","     * Cached fields as an array.","     * @type {?Field[]}","     * @private","     */","    this._fieldsArray = null;","","    /**","     * Cached oneofs as an array.","     * @type {?OneOf[]}","     * @private","     */","    this._oneofsArray = null;","","    /**","     * Cached constructor.","     * @type {*}","     * @private","     */","    this._ctor = null;","}","","Object.defineProperties(Type.prototype, {","","    /**","     * Message fields by id.","     * @name Type#fieldsById","     * @type {Object.<number,Field>}","     * @readonly","     */","    fieldsById: {","        get: function() {","","            /* istanbul ignore if */","            if (this._fieldsById)","                return this._fieldsById;","","            this._fieldsById = {};","            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {","                var field = this.fields[names[i]],","                    id = field.id;","","                /* istanbul ignore if */","                if (this._fieldsById[id])","                    throw Error(\"duplicate id \" + id + \" in \" + this);","","                this._fieldsById[id] = field;","            }","            return this._fieldsById;","        }","    },","","    /**","     * Fields of this message as an array for iteration.","     * @name Type#fieldsArray","     * @type {Field[]}","     * @readonly","     */","    fieldsArray: {","        get: function() {","            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));","        }","    },","","    /**","     * Oneofs of this message as an array for iteration.","     * @name Type#oneofsArray","     * @type {OneOf[]}","     * @readonly","     */","    oneofsArray: {","        get: function() {","            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));","        }","    },","","    /**","     * The registered constructor, if any registered, otherwise a generic constructor.","     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.","     * @name Type#ctor","     * @type {Class}","     */","    ctor: {","        get: function() {","            return this._ctor || (this._ctor = Class(this).constructor);","        },","        set: function(ctor) {","            if (ctor && !(ctor.prototype instanceof Message))","                Class(this, ctor);","            else","                this._ctor = ctor;","        }","    }","});","","function clearCache(type) {","    type._fieldsById = type._fieldsArray = type._oneofsArray = type._ctor = null;","    delete type.encode;","    delete type.decode;","    delete type.verify;","    return type;","}","","/**"," * Message type descriptor."," * @typedef TypeDescriptor"," * @type {Object}"," * @property {Object.<string,*>} [options] Message type options"," * @property {Object.<string,OneOfDescriptor>} [oneofs] Oneof descriptors"," * @property {Object.<string,FieldDescriptor>} fields Field descriptors"," * @property {number[][]} [extensions] Extension ranges"," * @property {number[][]} [reserved] Reserved ranges"," * @property {boolean} [group=false] Whether a legacy group or not"," * @property {Object.<string,AnyNestedDescriptor>} [nested] Nested object descriptors"," */","","/**"," * Creates a message type from a message type descriptor."," * @param {string} name Message name"," * @param {TypeDescriptor} json Message type descriptor"," * @returns {Type} Created message type"," */","Type.fromJSON = function fromJSON(name, json) {","    var type = new Type(name, json.options);","    type.extensions = json.extensions;","    type.reserved = json.reserved;","    var names = Object.keys(json.fields),","        i = 0;","    for (; i < names.length; ++i)","        type.add(","            ( typeof json.fields[names[i]].keyType !== \"undefined\"","            ? MapField.fromJSON","            : Field.fromJSON )(names[i], json.fields[names[i]])","        );","    if (json.oneofs)","        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)","            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));","    if (json.nested)","        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {","            var nested = json.nested[names[i]];","            type.add( // most to least likely","                ( nested.id !== undefined","                ? Field.fromJSON","                : nested.fields !== undefined","                ? Type.fromJSON","                : nested.values !== undefined","                ? Enum.fromJSON","                : nested.methods !== undefined","                ? Service.fromJSON","                : Namespace.fromJSON )(names[i], nested)","            );","        }","    if (json.extensions && json.extensions.length)","        type.extensions = json.extensions;","    if (json.reserved && json.reserved.length)","        type.reserved = json.reserved;","    if (json.group)","        type.group = true;","    return type;","};","","/**"," * Converts this message type to a message type descriptor."," * @returns {TypeDescriptor} Message type descriptor"," */","Type.prototype.toJSON = function toJSON() {","    var inherited = Namespace.prototype.toJSON.call(this);","    return {","        options    : inherited && inherited.options || undefined,","        oneofs     : Namespace.arrayToJSON(this.oneofsArray),","        fields     : Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; })) || {},","        extensions : this.extensions && this.extensions.length ? this.extensions : undefined,","        reserved   : this.reserved && this.reserved.length ? this.reserved : undefined,","        group      : this.group || undefined,","        nested     : inherited && inherited.nested || undefined","    };","};","","/**"," * @override"," */","Type.prototype.resolveAll = function resolveAll() {","    var fields = this.fieldsArray, i = 0;","    while (i < fields.length)","        fields[i++].resolve();","    var oneofs = this.oneofsArray; i = 0;","    while (i < oneofs.length)","        oneofs[i++].resolve();","    return Namespace.prototype.resolve.call(this);","};","","/**"," * @override"," */","Type.prototype.get = function get(name) {","    return this.fields[name]","        || this.oneofs && this.oneofs[name]","        || this.nested && this.nested[name]","        || null;","};","","/**"," * Adds a nested object to this type."," * @param {ReflectionObject} object Nested object to add"," * @returns {Type} `this`"," * @throws {TypeError} If arguments are invalid"," * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id"," */","Type.prototype.add = function add(object) {","","    if (this.get(object.name))","        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);","","    if (object instanceof Field && object.extend === undefined) {","        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.","        // The root object takes care of adding distinct sister-fields to the respective extended","        // type instead.","","        // avoids calling the getter if not absolutely necessary because it's called quite frequently","        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])","            throw Error(\"duplicate id \" + object.id + \" in \" + this);","        if (this.isReservedId(object.id))","            throw Error(\"id \" + object.id + \" is reserved in \" + this);","        if (this.isReservedName(object.name))","            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);","","        if (object.parent)","            object.parent.remove(object);","        this.fields[object.name] = object;","        object.message = this;","        object.onAdd(this);","        return clearCache(this);","    }","    if (object instanceof OneOf) {","        if (!this.oneofs)","            this.oneofs = {};","        this.oneofs[object.name] = object;","        object.onAdd(this);","        return clearCache(this);","    }","    return Namespace.prototype.add.call(this, object);","};","","/**"," * Removes a nested object from this type."," * @param {ReflectionObject} object Nested object to remove"," * @returns {Type} `this`"," * @throws {TypeError} If arguments are invalid"," * @throws {Error} If `object` is not a member of this type"," */","Type.prototype.remove = function remove(object) {","    if (object instanceof Field && object.extend === undefined) {","        // See Type#add for the reason why extension fields are excluded here.","","        /* istanbul ignore if */","        if (!this.fields || this.fields[object.name] !== object)","            throw Error(object + \" is not a member of \" + this);","","        delete this.fields[object.name];","        object.parent = null;","        object.onRemove(this);","        return clearCache(this);","    }","    if (object instanceof OneOf) {","","        /* istanbul ignore if */","        if (!this.oneofs || this.oneofs[object.name] !== object)","            throw Error(object + \" is not a member of \" + this);","","        delete this.oneofs[object.name];","        object.parent = null;","        object.onRemove(this);","        return clearCache(this);","    }","    return Namespace.prototype.remove.call(this, object);","};","","/**"," * Tests if the specified id is reserved."," * @param {number} id Id to test"," * @returns {boolean} `true` if reserved, otherwise `false`"," */","Type.prototype.isReservedId = function isReservedId(id) {","    if (this.reserved)","        for (var i = 0; i < this.reserved.length; ++i)","            if (typeof this.reserved[i] !== \"string\" && this.reserved[i][0] <= id && this.reserved[i][1] >= id)","                return true;","    return false;","};","","/**"," * Tests if the specified name is reserved."," * @param {string} name Name to test"," * @returns {boolean} `true` if reserved, otherwise `false`"," */","Type.prototype.isReservedName = function isReservedName(name) {","    if (this.reserved)","        for (var i = 0; i < this.reserved.length; ++i)","            if (this.reserved[i] === name)","                return true;","    return false;","};","","/**"," * Creates a new message of this type using the specified properties."," * @param {Object.<string,*>} [properties] Properties to set"," * @returns {Message} Runtime message"," */","Type.prototype.create = function create(properties) {","    return new this.ctor(properties);","};","","/**"," * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}."," * @returns {Type} `this`"," */","Type.prototype.setup = function setup() {","    // Sets up everything at once so that the prototype chain does not have to be re-evaluated","    // multiple times (V8, soft-deopt prototype-check).","    var fullName = this.fullName,","        types    = [];","    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)","        types.push(this._fieldsArray[i].resolve().resolvedType);","    this.encode = encoder(this).eof(fullName + \"$encode\", {","        Writer : Writer,","        types  : types,","        util   : util","    });","    this.decode = decoder(this).eof(fullName + \"$decode\", {","        Reader : Reader,","        types  : types,","        util   : util","    });","    this.verify = verifier(this).eof(fullName + \"$verify\", {","        types : types,","        util  : util","    });","    this.fromObject = this.from = converter.fromObject(this).eof(fullName + \"$fromObject\", {","        types : types,","        util  : util","    });","    this.toObject = converter.toObject(this).eof(fullName + \"$toObject\", {","        types : types,","        util  : util","    });","    return this;","};","","/**"," * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages."," * @param {Message|Object.<string,*>} message Message instance or plain object"," * @param {Writer} [writer] Writer to encode to"," * @returns {Writer} writer"," */","Type.prototype.encode = function encode_setup(message, writer) {","    return this.setup().encode(message, writer); // overrides this method","};","","/**"," * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages."," * @param {Message|Object.<string,*>} message Message instance or plain object"," * @param {Writer} [writer] Writer to encode to"," * @returns {Writer} writer"," */","Type.prototype.encodeDelimited = function encodeDelimited(message, writer) {","    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();","};","","/**"," * Decodes a message of this type."," * @param {Reader|Uint8Array} reader Reader or buffer to decode from"," * @param {number} [length] Length of the message, if known beforehand"," * @returns {Message} Decoded message"," * @throws {Error} If the payload is not a reader or valid buffer"," * @throws {util.ProtocolError} If required fields are missing"," */","Type.prototype.decode = function decode_setup(reader, length) {","    return this.setup().decode(reader, length); // overrides this method","};","","/**"," * Decodes a message of this type preceeded by its byte length as a varint."," * @param {Reader|Uint8Array} reader Reader or buffer to decode from"," * @returns {Message} Decoded message"," * @throws {Error} If the payload is not a reader or valid buffer"," * @throws {util.ProtocolError} If required fields are missing"," */","Type.prototype.decodeDelimited = function decodeDelimited(reader) {","    if (!(reader instanceof Reader))","        reader = Reader.create(reader);","    return this.decode(reader, reader.uint32());","};","","/**"," * Verifies that field values are valid and that required fields are present."," * @param {Object.<string,*>} message Plain object to verify"," * @returns {?string} `null` if valid, otherwise the reason why it is not"," */","Type.prototype.verify = function verify_setup(message) {","    return this.setup().verify(message); // overrides this method","};","","/**"," * Creates a new message of this type from a plain object. Also converts values to their respective internal types."," * @param {Object.<string,*>} object Plain object to convert"," * @returns {Message} Message instance"," */","Type.prototype.fromObject = function fromObject(object) {","    return this.setup().fromObject(object);","};","","/**"," * Creates a new message of this type from a plain object. Also converts values to their respective internal types."," * This is an alias of {@link Type#fromObject}."," * @function"," * @param {Object.<string,*>} object Plain object"," * @returns {Message} Message instance"," */","Type.prototype.from = Type.prototype.fromObject;","","/**"," * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}."," * @typedef ConversionOptions"," * @type {Object}"," * @property {*} [longs] Long conversion type."," * Valid values are `String` and `Number` (the global types)."," * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library."," * @property {*} [enums] Enum value conversion type."," * Only valid value is `String` (the global type)."," * Defaults to copy the present value, which is the numeric id."," * @property {*} [bytes] Bytes value conversion type."," * Valid values are `Array` and (a base64 encoded) `String` (the global types)."," * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser."," * @property {boolean} [defaults=false] Also sets default values on the resulting object"," * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`"," * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`"," * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any"," */","","/**"," * Creates a plain object from a message of this type. Also converts values to other types if specified."," * @param {Message} message Message instance"," * @param {ConversionOptions} [options] Conversion options"," * @returns {Object.<string,*>} Plain object"," */","Type.prototype.toObject = function toObject(message, options) {","    return this.setup().toObject(message, options);","};",""],"l":{"2":1,"5":1,"6":1,"8":1,"31":1,"32":0,"38":0,"44":0,"50":0,"56":0,"62":0,"69":0,"76":0,"83":0,"90":0,"93":1,"105":0,"106":1,"108":0,"109":0,"110":0,"114":0,"115":1,"117":0,"119":0,"131":0,"143":0,"155":0,"158":0,"159":0,"161":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"193":1,"194":0,"195":0,"196":0,"197":0,"199":0,"200":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"236":1,"237":0,"238":0,"241":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"265":1,"266":0,"279":1,"281":0,"282":0,"284":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"311":0,"321":1,"322":0,"326":0,"327":1,"329":0,"330":0,"331":0,"332":0,"334":0,"337":0,"338":1,"340":0,"341":0,"342":0,"343":0,"345":0,"353":1,"354":0,"355":0,"356":0,"357":0,"358":0,"366":1,"367":0,"368":0,"369":0,"370":0,"371":0,"379":1,"380":0,"387":1,"390":0,"392":0,"393":0,"394":0,"399":0,"404":0,"408":0,"412":0,"416":0,"425":1,"426":0,"435":1,"436":0,"447":1,"448":0,"458":1,"459":0,"460":0,"461":0,"469":1,"470":0,"478":1,"479":0,"489":1,"516":1,"517":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/oneof.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/oneof.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"OneOf","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":42}}},"2":{"name":"fromJSON","line":59,"loc":{"start":{"line":59,"column":17},"end":{"line":59,"column":47}}},"3":{"name":"toJSON","line":67,"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":43}}},"4":{"name":"addFieldsToParent","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":34}}},"5":{"name":"add","line":93,"loc":{"start":{"line":93,"column":22},"end":{"line":93,"column":42}}},"6":{"name":"remove","line":113,"loc":{"start":{"line":113,"column":25},"end":{"line":113,"column":48}}},"7":{"name":"onAdd","line":139,"loc":{"start":{"line":139,"column":24},"end":{"line":139,"column":47}}},"8":{"name":"onRemove","line":157,"loc":{"start":{"line":157,"column":27},"end":{"line":157,"column":53}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":104}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":19,"column":0},"end":{"line":42,"column":1}},"6":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":29}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":31}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":47}},"10":{"start":{"line":27,"column":4},"end":{"line":28,"column":55}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":55},"skip":true},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":34}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":26}},"14":{"start":{"line":59,"column":0},"end":{"line":61,"column":2}},"15":{"start":{"line":60,"column":4},"end":{"line":60,"column":53}},"16":{"start":{"line":67,"column":0},"end":{"line":72,"column":2}},"17":{"start":{"line":68,"column":4},"end":{"line":71,"column":6}},"18":{"start":{"line":81,"column":0},"end":{"line":86,"column":1}},"19":{"start":{"line":82,"column":4},"end":{"line":85,"column":55}},"20":{"start":{"line":83,"column":8},"end":{"line":85,"column":55}},"21":{"start":{"line":84,"column":12},"end":{"line":85,"column":55}},"22":{"start":{"line":85,"column":16},"end":{"line":85,"column":55}},"23":{"start":{"line":93,"column":0},"end":{"line":106,"column":2}},"24":{"start":{"line":96,"column":4},"end":{"line":97,"column":49}},"25":{"start":{"line":97,"column":8},"end":{"line":97,"column":49},"skip":true},"26":{"start":{"line":99,"column":4},"end":{"line":100,"column":35}},"27":{"start":{"line":100,"column":8},"end":{"line":100,"column":35}},"28":{"start":{"line":101,"column":4},"end":{"line":101,"column":32}},"29":{"start":{"line":102,"column":4},"end":{"line":102,"column":33}},"30":{"start":{"line":103,"column":4},"end":{"line":103,"column":24}},"31":{"start":{"line":104,"column":4},"end":{"line":104,"column":28}},"32":{"start":{"line":105,"column":4},"end":{"line":105,"column":16}},"33":{"start":{"line":113,"column":0},"end":{"line":134,"column":2}},"34":{"start":{"line":116,"column":4},"end":{"line":117,"column":49}},"35":{"start":{"line":117,"column":8},"end":{"line":117,"column":49},"skip":true},"36":{"start":{"line":119,"column":4},"end":{"line":119,"column":48}},"37":{"start":{"line":122,"column":4},"end":{"line":123,"column":59}},"38":{"start":{"line":123,"column":8},"end":{"line":123,"column":59},"skip":true},"39":{"start":{"line":125,"column":4},"end":{"line":125,"column":38}},"40":{"start":{"line":126,"column":4},"end":{"line":126,"column":43}},"41":{"start":{"line":129,"column":4},"end":{"line":130,"column":36}},"42":{"start":{"line":130,"column":8},"end":{"line":130,"column":36}},"43":{"start":{"line":132,"column":4},"end":{"line":132,"column":24}},"44":{"start":{"line":133,"column":4},"end":{"line":133,"column":16}},"45":{"start":{"line":139,"column":0},"end":{"line":152,"column":2}},"46":{"start":{"line":140,"column":4},"end":{"line":140,"column":56}},"47":{"start":{"line":141,"column":4},"end":{"line":141,"column":20}},"48":{"start":{"line":143,"column":4},"end":{"line":149,"column":5}},"49":{"start":{"line":144,"column":8},"end":{"line":144,"column":46}},"50":{"start":{"line":145,"column":8},"end":{"line":148,"column":9}},"51":{"start":{"line":146,"column":12},"end":{"line":146,"column":32}},"52":{"start":{"line":147,"column":12},"end":{"line":147,"column":41}},"53":{"start":{"line":151,"column":4},"end":{"line":151,"column":28}},"54":{"start":{"line":157,"column":0},"end":{"line":162,"column":2}},"55":{"start":{"line":158,"column":4},"end":{"line":160,"column":39}},"56":{"start":{"line":159,"column":8},"end":{"line":160,"column":39}},"57":{"start":{"line":160,"column":12},"end":{"line":160,"column":39}},"58":{"start":{"line":161,"column":4},"end":{"line":161,"column":59}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4},"skip":true},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":10},"end":{"line":27,"column":34}},{"start":{"line":27,"column":38},"end":{"line":27,"column":63}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":17},"end":{"line":34,"column":27}},{"start":{"line":34,"column":31},"end":{"line":34,"column":33}}]},"5":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"6":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":12},"end":{"line":84,"column":12}},{"start":{"line":84,"column":12},"end":{"line":84,"column":12}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4},"skip":true},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"8":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"9":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":20}},{"start":{"line":99,"column":24},"end":{"line":99,"column":52}}]},"10":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4},"skip":true},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"11":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4},"skip":true},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"12":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4},"skip":true}]},"13":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8}}]},"14":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":12},"end":{"line":145,"column":17}},{"start":{"line":145,"column":21},"end":{"line":145,"column":34}}]},"15":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":8}},{"start":{"line":159,"column":8},"end":{"line":159,"column":8}}]}},"code":["\"use strict\";","module.exports = OneOf;","","// extends ReflectionObject","var ReflectionObject = require(\"./object\");","((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";","","var Field = require(\"./field\");","","/**"," * Constructs a new oneof instance."," * @classdesc Reflected oneof."," * @extends ReflectionObject"," * @constructor"," * @param {string} name Oneof name"," * @param {string[]|Object.<string,*>} [fieldNames] Field names"," * @param {Object.<string,*>} [options] Declared options"," */","function OneOf(name, fieldNames, options) {","    if (!Array.isArray(fieldNames)) {","        options = fieldNames;","        fieldNames = undefined;","    }","    ReflectionObject.call(this, name, options);","","    /* istanbul ignore if */","    if (!(fieldNames === undefined || Array.isArray(fieldNames)))","        throw TypeError(\"fieldNames must be an Array\");","","    /**","     * Field names that belong to this oneof.","     * @type {string[]}","     */","    this.oneof = fieldNames || []; // toJSON, marker","","    /**","     * Fields that belong to this oneof as an array for iteration.","     * @type {Field[]}","     * @readonly","     */","    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent","}","","/**"," * Oneof descriptor."," * @typedef OneOfDescriptor"," * @type {Object}"," * @property {Array.<string>} oneof Oneof field names"," * @property {Object.<string,*>} [options] Oneof options"," */","","/**"," * Constructs a oneof from a oneof descriptor."," * @param {string} name Oneof name"," * @param {OneOfDescriptor} json Oneof descriptor"," * @returns {OneOf} Created oneof"," * @throws {TypeError} If arguments are invalid"," */","OneOf.fromJSON = function fromJSON(name, json) {","    return new OneOf(name, json.oneof, json.options);","};","","/**"," * Converts this oneof to a oneof descriptor."," * @returns {OneOfDescriptor} Oneof descriptor"," */","OneOf.prototype.toJSON = function toJSON() {","    return {","        oneof   : this.oneof,","        options : this.options","    };","};","","/**"," * Adds the fields of the specified oneof to the parent if not already done so."," * @param {OneOf} oneof The oneof"," * @returns {undefined}"," * @inner"," * @ignore"," */","function addFieldsToParent(oneof) {","    if (oneof.parent)","        for (var i = 0; i < oneof.fieldsArray.length; ++i)","            if (!oneof.fieldsArray[i].parent)","                oneof.parent.add(oneof.fieldsArray[i]);","}","","/**"," * Adds a field to this oneof and removes it from its current parent, if any."," * @param {Field} field Field to add"," * @returns {OneOf} `this`"," */","OneOf.prototype.add = function add(field) {","","    /* istanbul ignore if */","    if (!(field instanceof Field))","        throw TypeError(\"field must be a Field\");","","    if (field.parent && field.parent !== this.parent)","        field.parent.remove(field);","    this.oneof.push(field.name);","    this.fieldsArray.push(field);","    field.partOf = this; // field.parent remains null","    addFieldsToParent(this);","    return this;","};","","/**"," * Removes a field from this oneof and puts it back to the oneof's parent."," * @param {Field} field Field to remove"," * @returns {OneOf} `this`"," */","OneOf.prototype.remove = function remove(field) {","","    /* istanbul ignore if */","    if (!(field instanceof Field))","        throw TypeError(\"field must be a Field\");","","    var index = this.fieldsArray.indexOf(field);","","    /* istanbul ignore if */","    if (index < 0)","        throw Error(field + \" is not a member of \" + this);","","    this.fieldsArray.splice(index, 1);","    index = this.oneof.indexOf(field.name);","","    /* istanbul ignore else */","    if (index > -1) // theoretical","        this.oneof.splice(index, 1);","","    field.partOf = null;","    return this;","};","","/**"," * @override"," */","OneOf.prototype.onAdd = function onAdd(parent) {","    ReflectionObject.prototype.onAdd.call(this, parent);","    var self = this;","    // Collect present fields","    for (var i = 0; i < this.oneof.length; ++i) {","        var field = parent.get(this.oneof[i]);","        if (field && !field.partOf) {","            field.partOf = self;","            self.fieldsArray.push(field);","        }","    }","    // Add not yet present fields","    addFieldsToParent(this);","};","","/**"," * @override"," */","OneOf.prototype.onRemove = function onRemove(parent) {","    for (var i = 0, field; i < this.fieldsArray.length; ++i)","        if ((field = this.fieldsArray[i]).parent)","            field.parent.remove(field);","    ReflectionObject.prototype.onRemove.call(this, parent);","};",""],"l":{"2":1,"5":1,"6":1,"8":1,"19":1,"20":0,"21":0,"22":0,"24":0,"27":0,"28":1,"34":0,"41":0,"59":1,"60":0,"67":1,"68":0,"81":1,"82":0,"83":0,"84":0,"85":0,"93":1,"96":0,"97":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"113":1,"116":0,"117":1,"119":0,"122":0,"123":1,"125":0,"126":0,"129":0,"130":0,"132":0,"133":0,"139":1,"140":0,"141":0,"143":0,"144":0,"145":0,"146":0,"147":0,"151":0,"157":1,"158":0,"159":0,"160":0,"161":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/mapfield.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/mapfield.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"MapField","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":52}}},"2":{"name":"fromJSON","line":73,"loc":{"start":{"line":73,"column":20},"end":{"line":73,"column":50}}},"3":{"name":"toJSON","line":81,"loc":{"start":{"line":81,"column":28},"end":{"line":81,"column":46}}},"4":{"name":"resolve","line":94,"loc":{"start":{"line":94,"column":29},"end":{"line":94,"column":48}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":102}},"4":{"start":{"line":8,"column":0},"end":{"line":9,"column":32}},"5":{"start":{"line":22,"column":0},"end":{"line":43,"column":1}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":46}},"7":{"start":{"line":26,"column":4},"end":{"line":27,"column":52}},"8":{"start":{"line":27,"column":8},"end":{"line":27,"column":52},"skip":true},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":27}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":32}},"11":{"start":{"line":42,"column":4},"end":{"line":42,"column":20}},"12":{"start":{"line":73,"column":0},"end":{"line":75,"column":2}},"13":{"start":{"line":74,"column":4},"end":{"line":74,"column":78}},"14":{"start":{"line":81,"column":0},"end":{"line":89,"column":2}},"15":{"start":{"line":82,"column":4},"end":{"line":88,"column":6}},"16":{"start":{"line":94,"column":0},"end":{"line":103,"column":2}},"17":{"start":{"line":95,"column":4},"end":{"line":96,"column":20}},"18":{"start":{"line":96,"column":8},"end":{"line":96,"column":20}},"19":{"start":{"line":99,"column":4},"end":{"line":100,"column":57}},"20":{"start":{"line":100,"column":8},"end":{"line":100,"column":57}},"21":{"start":{"line":102,"column":4},"end":{"line":102,"column":46}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4},"skip":true},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"3":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]}},"code":["\"use strict\";","module.exports = MapField;","","// extends Field","var Field = require(\"./field\");","((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";","","var types   = require(\"./types\"),","    util    = require(\"./util\");","","/**"," * Constructs a new map field instance."," * @classdesc Reflected map field."," * @extends Field"," * @constructor"," * @param {string} name Unique name within its namespace"," * @param {number} id Unique id within its namespace"," * @param {string} keyType Key type"," * @param {string} type Value type"," * @param {Object.<string,*>} [options] Declared options"," */","function MapField(name, id, keyType, type, options) {","    Field.call(this, name, id, type, options);","","    /* istanbul ignore if */","    if (!util.isString(keyType))","        throw TypeError(\"keyType must be a string\");","","    /**","     * Key type.","     * @type {string}","     */","    this.keyType = keyType; // toJSON, marker","","    /**","     * Resolved key type if not a basic type.","     * @type {?ReflectionObject}","     */","    this.resolvedKeyType = null;","","    // Overrides Field#map","    this.map = true;","}","","/**"," * Map field descriptor."," * @typedef MapFieldDescriptor"," * @type {Object}"," * @property {string} keyType Key type"," * @property {string} type Value type"," * @property {number} id Field id"," * @property {Object.<string,*>} [options] Field options"," */","","/**"," * Extension map field descriptor."," * @typedef ExtensionMapFieldDescriptor"," * @type {Object}"," * @property {string} keyType Key type"," * @property {string} type Value type"," * @property {number} id Field id"," * @property {string} extend Extended type"," * @property {Object.<string,*>} [options] Field options"," */","","/**"," * Constructs a map field from a map field descriptor."," * @param {string} name Field name"," * @param {MapFieldDescriptor} json Map field descriptor"," * @returns {MapField} Created map field"," * @throws {TypeError} If arguments are invalid"," */","MapField.fromJSON = function fromJSON(name, json) {","    return new MapField(name, json.id, json.keyType, json.type, json.options);","};","","/**"," * Converts this map field to a map field descriptor."," * @returns {MapFieldDescriptor} Map field descriptor"," */","MapField.prototype.toJSON = function toJSON() {","    return {","        keyType : this.keyType,","        type    : this.type,","        id      : this.id,","        extend  : this.extend,","        options : this.options","    };","};","","/**"," * @override"," */","MapField.prototype.resolve = function resolve() {","    if (this.resolved)","        return this;","","    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"","    if (types.mapKey[this.keyType] === undefined)","        throw Error(\"invalid key type: \" + this.keyType);","","    return Field.prototype.resolve.call(this);","};",""],"l":{"2":1,"5":1,"6":1,"8":1,"22":1,"23":0,"26":0,"27":1,"33":0,"39":0,"42":0,"73":1,"74":0,"81":1,"82":0,"94":1,"95":0,"96":0,"99":0,"100":0,"102":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/service.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/service.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Service","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":32}}},"2":{"name":"fromJSON","line":54,"loc":{"start":{"line":54,"column":19},"end":{"line":54,"column":49}}},"3":{"name":"toJSON","line":69,"loc":{"start":{"line":69,"column":27},"end":{"line":69,"column":45}}},"4":{"name":"(anonymous_4)","line":85,"loc":{"start":{"line":85,"column":9},"end":{"line":85,"column":20}}},"5":{"name":"clearCache","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":29}}},"6":{"name":"get","line":98,"loc":{"start":{"line":98,"column":24},"end":{"line":98,"column":43}}},"7":{"name":"resolveAll","line":106,"loc":{"start":{"line":106,"column":31},"end":{"line":106,"column":53}}},"8":{"name":"add","line":116,"loc":{"start":{"line":116,"column":24},"end":{"line":116,"column":45}}},"9":{"name":"remove","line":133,"loc":{"start":{"line":133,"column":27},"end":{"line":133,"column":51}}},"10":{"name":"create","line":154,"loc":{"start":{"line":154,"column":27},"end":{"line":154,"column":89}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":103}},"4":{"start":{"line":8,"column":0},"end":{"line":10,"column":30}},"5":{"start":{"line":21,"column":0},"end":{"line":36,"column":1}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":40}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":22}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":30}},"9":{"start":{"line":54,"column":0},"end":{"line":63,"column":2}},"10":{"start":{"line":55,"column":4},"end":{"line":55,"column":50}},"11":{"start":{"line":57,"column":4},"end":{"line":59,"column":75}},"12":{"start":{"line":58,"column":8},"end":{"line":59,"column":75}},"13":{"start":{"line":59,"column":12},"end":{"line":59,"column":75}},"14":{"start":{"line":60,"column":4},"end":{"line":61,"column":37}},"15":{"start":{"line":61,"column":8},"end":{"line":61,"column":37}},"16":{"start":{"line":62,"column":4},"end":{"line":62,"column":19}},"17":{"start":{"line":69,"column":0},"end":{"line":76,"column":2}},"18":{"start":{"line":70,"column":4},"end":{"line":70,"column":58}},"19":{"start":{"line":71,"column":4},"end":{"line":75,"column":6}},"20":{"start":{"line":84,"column":0},"end":{"line":88,"column":3}},"21":{"start":{"line":86,"column":8},"end":{"line":86,"column":87}},"22":{"start":{"line":90,"column":0},"end":{"line":93,"column":1}},"23":{"start":{"line":91,"column":4},"end":{"line":91,"column":33}},"24":{"start":{"line":92,"column":4},"end":{"line":92,"column":19}},"25":{"start":{"line":98,"column":0},"end":{"line":101,"column":2}},"26":{"start":{"line":99,"column":4},"end":{"line":100,"column":52}},"27":{"start":{"line":106,"column":0},"end":{"line":111,"column":2}},"28":{"start":{"line":107,"column":4},"end":{"line":107,"column":36}},"29":{"start":{"line":108,"column":4},"end":{"line":109,"column":29}},"30":{"start":{"line":109,"column":8},"end":{"line":109,"column":29}},"31":{"start":{"line":110,"column":4},"end":{"line":110,"column":50}},"32":{"start":{"line":116,"column":0},"end":{"line":128,"column":2}},"33":{"start":{"line":119,"column":4},"end":{"line":120,"column":71}},"34":{"start":{"line":120,"column":8},"end":{"line":120,"column":71},"skip":true},"35":{"start":{"line":122,"column":4},"end":{"line":126,"column":5}},"36":{"start":{"line":123,"column":8},"end":{"line":123,"column":43}},"37":{"start":{"line":124,"column":8},"end":{"line":124,"column":29}},"38":{"start":{"line":125,"column":8},"end":{"line":125,"column":32}},"39":{"start":{"line":127,"column":4},"end":{"line":127,"column":54}},"40":{"start":{"line":133,"column":0},"end":{"line":145,"column":2}},"41":{"start":{"line":134,"column":4},"end":{"line":143,"column":5}},"42":{"start":{"line":137,"column":8},"end":{"line":138,"column":64}},"43":{"start":{"line":138,"column":12},"end":{"line":138,"column":64},"skip":true},"44":{"start":{"line":140,"column":8},"end":{"line":140,"column":41}},"45":{"start":{"line":141,"column":8},"end":{"line":141,"column":29}},"46":{"start":{"line":142,"column":8},"end":{"line":142,"column":32}},"47":{"start":{"line":144,"column":4},"end":{"line":144,"column":57}},"48":{"start":{"line":154,"column":0},"end":{"line":164,"column":2}},"49":{"start":{"line":155,"column":4},"end":{"line":155,"column":83}},"50":{"start":{"line":156,"column":4},"end":{"line":162,"column":5}},"51":{"start":{"line":157,"column":8},"end":{"line":161,"column":11}},"52":{"start":{"line":163,"column":4},"end":{"line":163,"column":22}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4},"skip":true}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"3":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":18},"end":{"line":72,"column":27}},{"start":{"line":72,"column":31},"end":{"line":72,"column":48}},{"start":{"line":72,"column":52},"end":{"line":72,"column":61}}]},"4":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":18},"end":{"line":73,"column":58}},{"start":{"line":73,"column":89},"end":{"line":73,"column":91},"skip":true}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":18},"end":{"line":74,"column":27}},{"start":{"line":74,"column":31},"end":{"line":74,"column":47}},{"start":{"line":74,"column":51},"end":{"line":74,"column":60}}]},"6":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":15},"end":{"line":86,"column":33}},{"start":{"line":86,"column":38},"end":{"line":86,"column":85}}]},"7":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":11},"end":{"line":99,"column":29}},{"start":{"line":100,"column":11},"end":{"line":100,"column":51}}]},"8":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4},"skip":true},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"9":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"10":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"11":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8},"skip":true},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]}},"code":["\"use strict\";","module.exports = Service;","","// extends Namespace","var Namespace = require(\"./namespace\");","((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";","","var Method = require(\"./method\"),","    util   = require(\"./util\"),","    rpc    = require(\"./rpc\");","","/**"," * Constructs a new service instance."," * @classdesc Reflected service."," * @extends NamespaceBase"," * @constructor"," * @param {string} name Service name"," * @param {Object.<string,*>} [options] Service options"," * @throws {TypeError} If arguments are invalid"," */","function Service(name, options) {","    Namespace.call(this, name, options);","","    /**","     * Service methods.","     * @type {Object.<string,Method>}","     */","    this.methods = {}; // toJSON, marker","","    /**","     * Cached methods as an array.","     * @type {?Method[]}","     * @private","     */","    this._methodsArray = null;","}","","/**"," * Service descriptor."," * @typedef ServiceDescriptor"," * @type {Object}"," * @property {Object.<string,*>} [options] Service options"," * @property {Object.<string,MethodDescriptor>} methods Method descriptors"," * @property {Object.<string,AnyNestedDescriptor>} [nested] Nested object descriptors"," */","","/**"," * Constructs a service from a service descriptor."," * @param {string} name Service name"," * @param {ServiceDescriptor} json Service descriptor"," * @returns {Service} Created service"," * @throws {TypeError} If arguments are invalid"," */","Service.fromJSON = function fromJSON(name, json) {","    var service = new Service(name, json.options);","    /* istanbul ignore else */","    if (json.methods)","        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)","            service.add(Method.fromJSON(names[i], json.methods[names[i]]));","    if (json.nested)","        service.addJSON(json.nested);","    return service;","};","","/**"," * Converts this service to a service descriptor."," * @returns {ServiceDescriptor} Service descriptor"," */","Service.prototype.toJSON = function toJSON() {","    var inherited = Namespace.prototype.toJSON.call(this);","    return {","        options : inherited && inherited.options || undefined,","        methods : Namespace.arrayToJSON(this.methodsArray) || /* istanbul ignore next */ {},","        nested  : inherited && inherited.nested || undefined","    };","};","","/**"," * Methods of this service as an array for iteration."," * @name Service#methodsArray"," * @type {Method[]}"," * @readonly"," */","Object.defineProperty(Service.prototype, \"methodsArray\", {","    get: function() {","        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));","    }","});","","function clearCache(service) {","    service._methodsArray = null;","    return service;","}","","/**"," * @override"," */","Service.prototype.get = function get(name) {","    return this.methods[name]","        || Namespace.prototype.get.call(this, name);","};","","/**"," * @override"," */","Service.prototype.resolveAll = function resolveAll() {","    var methods = this.methodsArray;","    for (var i = 0; i < methods.length; ++i)","        methods[i].resolve();","    return Namespace.prototype.resolve.call(this);","};","","/**"," * @override"," */","Service.prototype.add = function add(object) {","","    /* istanbul ignore if */","    if (this.get(object.name))","        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);","","    if (object instanceof Method) {","        this.methods[object.name] = object;","        object.parent = this;","        return clearCache(this);","    }","    return Namespace.prototype.add.call(this, object);","};","","/**"," * @override"," */","Service.prototype.remove = function remove(object) {","    if (object instanceof Method) {","","        /* istanbul ignore if */","        if (this.methods[object.name] !== object)","            throw Error(object + \" is not a member of \" + this);","","        delete this.methods[object.name];","        object.parent = null;","        return clearCache(this);","    }","    return Namespace.prototype.remove.call(this, object);","};","","/**"," * Creates a runtime service using the specified rpc implementation."," * @param {RPCImpl} rpcImpl RPC implementation"," * @param {boolean} [requestDelimited=false] Whether requests are length-delimited"," * @param {boolean} [responseDelimited=false] Whether responses are length-delimited"," * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed."," */","Service.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {","    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);","    for (var i = 0; i < /* initializes */ this.methodsArray.length; ++i) {","        rpcService[util.lcFirst(this._methodsArray[i].resolve().name)] = util.codegen(\"r\",\"c\")(\"return this.rpcCall(m,q,s,r,c)\").eof(util.lcFirst(this._methodsArray[i].name), {","            m: this._methodsArray[i],","            q: this._methodsArray[i].resolvedRequestType.ctor,","            s: this._methodsArray[i].resolvedResponseType.ctor","        });","    }","    return rpcService;","};",""],"l":{"2":1,"5":1,"6":1,"8":1,"21":1,"22":0,"28":0,"35":0,"54":1,"55":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"69":1,"70":0,"71":0,"84":1,"86":0,"90":1,"91":0,"92":0,"98":1,"99":0,"106":1,"107":0,"108":0,"109":0,"110":0,"116":1,"119":0,"120":1,"122":0,"123":0,"124":0,"125":0,"127":0,"133":1,"134":0,"137":0,"138":1,"140":0,"141":0,"142":0,"144":0,"154":1,"155":0,"156":0,"157":0,"163":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/method.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/method.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Method","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}}},"2":{"name":"fromJSON","line":109,"loc":{"start":{"line":109,"column":18},"end":{"line":109,"column":48}}},"3":{"name":"toJSON","line":117,"loc":{"start":{"line":117,"column":26},"end":{"line":117,"column":44}}},"4":{"name":"resolve","line":131,"loc":{"start":{"line":131,"column":27},"end":{"line":131,"column":46}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":24}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":107}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"5":{"start":{"line":23,"column":0},"end":{"line":89,"column":1}},"6":{"start":{"line":26,"column":4},"end":{"line":32,"column":5},"skip":true},"7":{"start":{"line":27,"column":8},"end":{"line":27,"column":32},"skip":true},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":51},"skip":true},"9":{"start":{"line":29,"column":11},"end":{"line":32,"column":5},"skip":true},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":33},"skip":true},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":35},"skip":true},"12":{"start":{"line":35,"column":4},"end":{"line":36,"column":49}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":49},"skip":true},"14":{"start":{"line":39,"column":4},"end":{"line":40,"column":56}},"15":{"start":{"line":40,"column":8},"end":{"line":40,"column":56},"skip":true},"16":{"start":{"line":43,"column":4},"end":{"line":44,"column":57}},"17":{"start":{"line":44,"column":8},"end":{"line":44,"column":57},"skip":true},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":47}},"19":{"start":{"line":52,"column":4},"end":{"line":52,"column":30}},"20":{"start":{"line":58,"column":4},"end":{"line":58,"column":35}},"21":{"start":{"line":64,"column":4},"end":{"line":64,"column":58}},"22":{"start":{"line":70,"column":4},"end":{"line":70,"column":37}},"23":{"start":{"line":76,"column":4},"end":{"line":76,"column":60}},"24":{"start":{"line":82,"column":4},"end":{"line":82,"column":36}},"25":{"start":{"line":88,"column":4},"end":{"line":88,"column":37}},"26":{"start":{"line":109,"column":0},"end":{"line":111,"column":2}},"27":{"start":{"line":110,"column":4},"end":{"line":110,"column":131}},"28":{"start":{"line":117,"column":0},"end":{"line":126,"column":2}},"29":{"start":{"line":118,"column":4},"end":{"line":125,"column":6}},"30":{"start":{"line":131,"column":0},"end":{"line":141,"column":2}},"31":{"start":{"line":134,"column":4},"end":{"line":135,"column":20}},"32":{"start":{"line":135,"column":8},"end":{"line":135,"column":20},"skip":true},"33":{"start":{"line":137,"column":4},"end":{"line":137,"column":72}},"34":{"start":{"line":138,"column":4},"end":{"line":138,"column":74}},"35":{"start":{"line":140,"column":4},"end":{"line":140,"column":57}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4},"skip":true},{"start":{"line":26,"column":4},"end":{"line":26,"column":4},"skip":true}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":11},"skip":true},{"start":{"line":29,"column":11},"end":{"line":29,"column":11},"skip":true}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4},"skip":true},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":28}},{"start":{"line":35,"column":32},"end":{"line":35,"column":51}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4},"skip":true},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4},"skip":true},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"7":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":20}},{"start":{"line":52,"column":24},"end":{"line":52,"column":29}}]},"8":{"line":64,"type":"cond-expr","locations":[{"start":{"line":64,"column":41},"end":{"line":64,"column":45}},{"start":{"line":64,"column":48},"end":{"line":64,"column":57}}]},"9":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":43},"end":{"line":76,"column":47}},{"start":{"line":76,"column":50},"end":{"line":76,"column":59}}]},"10":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":25},"end":{"line":119,"column":44}},{"start":{"line":119,"column":75},"end":{"line":119,"column":84},"skip":true},{"start":{"line":119,"column":88},"end":{"line":119,"column":97}}]},"11":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4},"skip":true},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]}},"code":["\"use strict\";","module.exports = Method;","","// extends ReflectionObject","var ReflectionObject = require(\"./object\");","((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";","","var util = require(\"./util\");","","/**"," * Constructs a new service method instance."," * @classdesc Reflected service method."," * @extends ReflectionObject"," * @constructor"," * @param {string} name Method name"," * @param {string|undefined} type Method type, usually `\"rpc\"`"," * @param {string} requestType Request message type"," * @param {string} responseType Response message type"," * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed"," * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed"," * @param {Object.<string,*>} [options] Declared options"," */","function Method(name, type, requestType, responseType, requestStream, responseStream, options) {","","    /* istanbul ignore next */","    if (util.isObject(requestStream)) {","        options = requestStream;","        requestStream = responseStream = undefined;","    } else if (util.isObject(responseStream)) {","        options = responseStream;","        responseStream = undefined;","    }","","    /* istanbul ignore if */","    if (!(type === undefined || util.isString(type)))","        throw TypeError(\"type must be a string\");","","    /* istanbul ignore if */","    if (!util.isString(requestType))","        throw TypeError(\"requestType must be a string\");","","    /* istanbul ignore if */","    if (!util.isString(responseType))","        throw TypeError(\"responseType must be a string\");","","    ReflectionObject.call(this, name, options);","","    /**","     * Method type.","     * @type {string}","     */","    this.type = type || \"rpc\"; // toJSON","","    /**","     * Request type.","     * @type {string}","     */","    this.requestType = requestType; // toJSON, marker","","    /**","     * Whether requests are streamed or not.","     * @type {boolean|undefined}","     */","    this.requestStream = requestStream ? true : undefined; // toJSON","","    /**","     * Response type.","     * @type {string}","     */","    this.responseType = responseType; // toJSON","","    /**","     * Whether responses are streamed or not.","     * @type {boolean|undefined}","     */","    this.responseStream = responseStream ? true : undefined; // toJSON","","    /**","     * Resolved request type.","     * @type {?Type}","     */","    this.resolvedRequestType = null;","","    /**","     * Resolved response type.","     * @type {?Type}","     */","    this.resolvedResponseType = null;","}","","/**"," * @typedef MethodDescriptor"," * @type {Object}"," * @property {string} [type=\"rpc\"] Method type"," * @property {string} requestType Request type"," * @property {string} responseType Response type"," * @property {boolean} [requestStream=false] Whether requests are streamed"," * @property {boolean} [responseStream=false] Whether responses are streamed"," * @property {Object.<string,*>} [options] Method options"," */","","/**"," * Constructs a method from a method descriptor."," * @param {string} name Method name"," * @param {MethodDescriptor} json Method descriptor"," * @returns {Method} Created method"," * @throws {TypeError} If arguments are invalid"," */","Method.fromJSON = function fromJSON(name, json) {","    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options);","};","","/**"," * Converts this method to a method descriptor."," * @returns {MethodDescriptor} Method descriptor"," */","Method.prototype.toJSON = function toJSON() {","    return {","        type           : this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,","        requestType    : this.requestType,","        requestStream  : this.requestStream,","        responseType   : this.responseType,","        responseStream : this.responseStream,","        options        : this.options","    };","};","","/**"," * @override"," */","Method.prototype.resolve = function resolve() {","","    /* istanbul ignore if */","    if (this.resolved)","        return this;","","    this.resolvedRequestType = this.parent.lookupType(this.requestType);","    this.resolvedResponseType = this.parent.lookupType(this.responseType);","","    return ReflectionObject.prototype.resolve.call(this);","};",""],"l":{"2":1,"5":1,"6":1,"8":1,"23":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"35":0,"36":1,"39":0,"40":1,"43":0,"44":1,"46":0,"52":0,"58":0,"64":0,"70":0,"76":0,"82":0,"88":0,"109":1,"110":0,"117":1,"118":0,"131":1,"134":0,"135":1,"137":0,"138":0,"140":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/class.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/class.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"Class","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}}},"2":{"name":"generate","line":77,"loc":{"start":{"line":77,"column":17},"end":{"line":77,"column":41}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"2":{"start":{"line":4,"column":0},"end":{"line":5,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":9}},"4":{"start":{"line":17,"column":0},"end":{"line":70,"column":1}},"5":{"start":{"line":18,"column":4},"end":{"line":19,"column":33}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":33}},"7":{"start":{"line":21,"column":4},"end":{"line":22,"column":47}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":47}},"9":{"start":{"line":24,"column":4},"end":{"line":28,"column":51}},"10":{"start":{"line":25,"column":8},"end":{"line":26,"column":55}},"11":{"start":{"line":26,"column":12},"end":{"line":26,"column":55}},"12":{"start":{"line":28,"column":8},"end":{"line":28,"column":51}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":29}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":56}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":36}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":22}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":32}},"18":{"start":{"line":44,"column":4},"end":{"line":44,"column":14}},"19":{"start":{"line":45,"column":4},"end":{"line":54,"column":5}},"20":{"start":{"line":49,"column":8},"end":{"line":53,"column":50}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":28}},"22":{"start":{"line":58,"column":4},"end":{"line":62,"column":10}},"23":{"start":{"line":59,"column":8},"end":{"line":62,"column":10}},"24":{"start":{"line":63,"column":4},"end":{"line":64,"column":64}},"25":{"start":{"line":64,"column":8},"end":{"line":64,"column":64}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":21}},"27":{"start":{"line":69,"column":4},"end":{"line":69,"column":26}},"28":{"start":{"line":77,"column":0},"end":{"line":90,"column":2}},"29":{"start":{"line":79,"column":4},"end":{"line":79,"column":32}},"30":{"start":{"line":81,"column":4},"end":{"line":85,"column":53}},"31":{"start":{"line":82,"column":8},"end":{"line":85,"column":53}},"32":{"start":{"line":82,"column":48},"end":{"line":83,"column":53}},"33":{"start":{"line":84,"column":13},"end":{"line":85,"column":53}},"34":{"start":{"line":84,"column":33},"end":{"line":85,"column":53}},"35":{"start":{"line":86,"column":4},"end":{"line":88,"column":33}},"36":{"start":{"line":100,"column":0},"end":{"line":100,"column":21}},"37":{"start":{"line":103,"column":0},"end":{"line":103,"column":26}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"5":{"line":49,"type":"cond-expr","locations":[{"start":{"line":50,"column":14},"end":{"line":50,"column":29}},{"start":{"line":51,"column":14},"end":{"line":53,"column":49}}]},"6":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":32}},{"start":{"line":53,"column":16},"end":{"line":53,"column":49}}]},"7":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":14},"end":{"line":51,"column":62}},{"start":{"line":51,"column":66},"end":{"line":51,"column":92}}]},"8":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"9":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":8}},{"start":{"line":82,"column":8},"end":{"line":82,"column":8}}]},"10":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":13},"end":{"line":84,"column":13}},{"start":{"line":84,"column":13},"end":{"line":84,"column":13}}]}},"code":["\"use strict\";","module.exports = Class;","","var Message = require(\"./message\"),","    util    = require(\"./util\");","","var Type; // cyclic","","/**"," * Constructs a new message prototype for the specified reflected type and sets up its constructor."," * @classdesc Runtime class providing the tools to create your own custom classes."," * @constructor"," * @param {Type} type Reflected message type"," * @param {*} [ctor] Custom constructor to set up, defaults to create a generic one if omitted"," * @returns {Message} Message prototype"," */","function Class(type, ctor) {","    if (!Type)","        Type = require(\"./type\");","","    if (!(type instanceof Type))","        throw TypeError(\"type must be a Type\");","","    if (ctor) {","        if (typeof ctor !== \"function\")","            throw TypeError(\"ctor must be a function\");","    } else","        ctor = Class.generate(type).eof(type.name); // named constructor function (codegen is required anyway)","","    // Let's pretend...","    ctor.constructor = Class;","","    // new Class() -> Message.prototype","    (ctor.prototype = new Message()).constructor = ctor;","","    // Static methods on Message are instance methods on Class and vice versa","    util.merge(ctor, Message, true);","","    // Classes and messages reference their reflected type","    ctor.$type = type;","    ctor.prototype.$type = type;","","    // Messages have non-enumerable default values on their prototype","    var i = 0;","    for (; i < /* initializes */ type.fieldsArray.length; ++i) {","        // objects on the prototype must be immmutable. users must assign a new object instance and","        // cannot use Array#push on empty arrays on the prototype for example, as this would modify","        // the value on the prototype for ALL messages of this type. Hence, these objects are frozen.","        ctor.prototype[type._fieldsArray[i].name] = Array.isArray(type._fieldsArray[i].resolve().defaultValue)","            ? util.emptyArray","            : util.isObject(type._fieldsArray[i].defaultValue) && !type._fieldsArray[i].long","              ? util.emptyObject","              : type._fieldsArray[i].defaultValue; // if a long, it is frozen when initialized","    }","","    // Messages have non-enumerable getters and setters for each virtual oneof field","    var ctorProperties = {};","    for (i = 0; i < /* initializes */ type.oneofsArray.length; ++i)","        ctorProperties[type._oneofsArray[i].resolve().name] = {","            get: util.oneOfGetter(type._oneofsArray[i].oneof),","            set: util.oneOfSetter(type._oneofsArray[i].oneof)","        };","    if (i)","        Object.defineProperties(ctor.prototype, ctorProperties);","","    // Register","    type.ctor = ctor;","","    return ctor.prototype;","}","","/**"," * Generates a constructor function for the specified type."," * @param {Type} type Type to use"," * @returns {Codegen} Codegen instance"," */","Class.generate = function generate(type) { // eslint-disable-line no-unused-vars","    /* eslint-disable no-unexpected-multiline */","    var gen = util.codegen(\"p\");","    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype","    for (var i = 0, field; i < type.fieldsArray.length; ++i)","        if ((field = type._fieldsArray[i]).map) gen","            (\"this%s={}\", util.safeProp(field.name));","        else if (field.repeated) gen","            (\"this%s=[]\", util.safeProp(field.name));","    return gen","    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null","        (\"this[ks[i]]=p[ks[i]]\");","    /* eslint-enable no-unexpected-multiline */","};","","/**"," * Constructs a new message prototype for the specified reflected type and sets up its constructor."," * @function"," * @param {Type} type Reflected message type"," * @param {*} [ctor] Custom constructor to set up, defaults to create a generic one if omitted"," * @returns {Message} Message prototype"," * @deprecated since 6.7.0 it's possible to just assign a new constructor to {@link Type#ctor}"," */","Class.create = Class;","","// Static methods on Message are instance methods on Class and vice versa","Class.prototype = Message;","","/**"," * Creates a new message of this type from a plain object. Also converts values to their respective internal types."," * @name Class#fromObject"," * @function"," * @param {Object.<string,*>} object Plain object"," * @returns {Message} Message instance"," */","","/**"," * Creates a new message of this type from a plain object. Also converts values to their respective internal types."," * This is an alias of {@link Class#fromObject}."," * @name Class#from"," * @function"," * @param {Object.<string,*>} object Plain object"," * @returns {Message} Message instance"," */","","/**"," * Creates a plain object from a message of this type. Also converts values to other types if specified."," * @name Class#toObject"," * @function"," * @param {Message} message Message instance"," * @param {ConversionOptions} [options] Conversion options"," * @returns {Object.<string,*>} Plain object"," */","","/**"," * Encodes a message of this type."," * @name Class#encode"," * @function"," * @param {Message|Object.<string,*>} message Message to encode"," * @param {Writer} [writer] Writer to use"," * @returns {Writer} Writer"," */","","/**"," * Encodes a message of this type preceeded by its length as a varint."," * @name Class#encodeDelimited"," * @function"," * @param {Message|Object.<string,*>} message Message to encode"," * @param {Writer} [writer] Writer to use"," * @returns {Writer} Writer"," */","","/**"," * Decodes a message of this type."," * @name Class#decode"," * @function"," * @param {Reader|Uint8Array} reader Reader or buffer to decode"," * @returns {Message} Decoded message"," */","","/**"," * Decodes a message of this type preceeded by its length as a varint."," * @name Class#decodeDelimited"," * @function"," * @param {Reader|Uint8Array} reader Reader or buffer to decode"," * @returns {Message} Decoded message"," */","","/**"," * Verifies a message of this type."," * @name Class#verify"," * @function"," * @param {Message|Object.<string,*>} message Message or plain object to verify"," * @returns {?string} `null` if valid, otherwise the reason why it is not"," */",""],"l":{"2":1,"4":1,"7":1,"17":1,"18":0,"19":0,"21":0,"22":0,"24":0,"25":0,"26":0,"28":0,"31":0,"34":0,"37":0,"40":0,"41":0,"44":0,"45":0,"49":0,"57":0,"58":0,"59":0,"63":0,"64":0,"67":0,"69":0,"77":1,"79":0,"81":0,"82":0,"84":0,"86":0,"100":1,"103":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/message.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/message.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Message","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}}},"2":{"name":"encode","line":39,"loc":{"start":{"line":39,"column":17},"end":{"line":39,"column":50}}},"3":{"name":"encodeDelimited","line":49,"loc":{"start":{"line":49,"column":26},"end":{"line":49,"column":68}}},"4":{"name":"decode","line":60,"loc":{"start":{"line":60,"column":17},"end":{"line":60,"column":41}}},"5":{"name":"decodeDelimited","line":71,"loc":{"start":{"line":71,"column":26},"end":{"line":71,"column":59}}},"6":{"name":"verify","line":82,"loc":{"start":{"line":82,"column":17},"end":{"line":82,"column":42}}},"7":{"name":"fromObject","line":91,"loc":{"start":{"line":91,"column":21},"end":{"line":91,"column":49}}},"8":{"name":"toObject","line":110,"loc":{"start":{"line":110,"column":19},"end":{"line":110,"column":55}}},"9":{"name":"toObject","line":119,"loc":{"start":{"line":119,"column":29},"end":{"line":119,"column":56}}},"10":{"name":"toJSON","line":127,"loc":{"start":{"line":127,"column":27},"end":{"line":127,"column":45}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"3":{"start":{"line":12,"column":0},"end":{"line":17,"column":1}},"4":{"start":{"line":14,"column":4},"end":{"line":16,"column":48}},"5":{"start":{"line":15,"column":8},"end":{"line":16,"column":48}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":48}},"7":{"start":{"line":39,"column":0},"end":{"line":41,"column":2}},"8":{"start":{"line":40,"column":4},"end":{"line":40,"column":46}},"9":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"10":{"start":{"line":50,"column":4},"end":{"line":50,"column":55}},"11":{"start":{"line":60,"column":0},"end":{"line":62,"column":2}},"12":{"start":{"line":61,"column":4},"end":{"line":61,"column":37}},"13":{"start":{"line":71,"column":0},"end":{"line":73,"column":2}},"14":{"start":{"line":72,"column":4},"end":{"line":72,"column":46}},"15":{"start":{"line":82,"column":0},"end":{"line":84,"column":2}},"16":{"start":{"line":83,"column":4},"end":{"line":83,"column":38}},"17":{"start":{"line":91,"column":0},"end":{"line":93,"column":2}},"18":{"start":{"line":92,"column":4},"end":{"line":92,"column":41}},"19":{"start":{"line":102,"column":0},"end":{"line":102,"column":34}},"20":{"start":{"line":110,"column":0},"end":{"line":112,"column":2}},"21":{"start":{"line":111,"column":4},"end":{"line":111,"column":49}},"22":{"start":{"line":119,"column":0},"end":{"line":121,"column":2}},"23":{"start":{"line":120,"column":4},"end":{"line":120,"column":46}},"24":{"start":{"line":127,"column":0},"end":{"line":129,"column":2}},"25":{"start":{"line":128,"column":4},"end":{"line":128,"column":57}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]}},"code":["\"use strict\";","module.exports = Message;","","var util = require(\"./util\");","","/**"," * Constructs a new message instance."," * @classdesc Abstract runtime message."," * @constructor"," * @param {Object.<string,*>} [properties] Properties to set"," */","function Message(properties) {","    // not used internally","    if (properties)","        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)","            this[keys[i]] = properties[keys[i]];","}","","/**"," * Reference to the reflected type."," * @name Message.$type"," * @type {Type}"," * @readonly"," */","","/**"," * Reference to the reflected type."," * @name Message#$type"," * @type {Type}"," * @readonly"," */","","/**"," * Encodes a message of this type."," * @param {Message|Object.<string,*>} message Message to encode"," * @param {Writer} [writer] Writer to use"," * @returns {Writer} Writer"," */","Message.encode = function encode(message, writer) {","    return this.$type.encode(message, writer);","};","","/**"," * Encodes a message of this type preceeded by its length as a varint."," * @param {Message|Object.<string,*>} message Message to encode"," * @param {Writer} [writer] Writer to use"," * @returns {Writer} Writer"," */","Message.encodeDelimited = function encodeDelimited(message, writer) {","    return this.$type.encodeDelimited(message, writer);","};","","/**"," * Decodes a message of this type."," * @name Message.decode"," * @function"," * @param {Reader|Uint8Array} reader Reader or buffer to decode"," * @returns {Message} Decoded message"," */","Message.decode = function decode(reader) {","    return this.$type.decode(reader);","};","","/**"," * Decodes a message of this type preceeded by its length as a varint."," * @name Message.decodeDelimited"," * @function"," * @param {Reader|Uint8Array} reader Reader or buffer to decode"," * @returns {Message} Decoded message"," */","Message.decodeDelimited = function decodeDelimited(reader) {","    return this.$type.decodeDelimited(reader);","};","","/**"," * Verifies a message of this type."," * @name Message.verify"," * @function"," * @param {Message|Object.<string,*>} message Message or plain object to verify"," * @returns {?string} `null` if valid, otherwise the reason why it is not"," */","Message.verify = function verify(message) {","    return this.$type.verify(message);","};","","/**"," * Creates a new message of this type from a plain object. Also converts values to their respective internal types."," * @param {Object.<string,*>} object Plain object"," * @returns {Message} Message instance"," */","Message.fromObject = function fromObject(object) {","    return this.$type.fromObject(object);","};","","/**"," * Creates a new message of this type from a plain object. Also converts values to their respective internal types."," * This is an alias of {@link Message.fromObject}."," * @function"," * @param {Object.<string,*>} object Plain object"," * @returns {Message} Message instance"," */","Message.from = Message.fromObject;","","/**"," * Creates a plain object from a message of this type. Also converts values to other types if specified."," * @param {Message} message Message instance"," * @param {ConversionOptions} [options] Conversion options"," * @returns {Object.<string,*>} Plain object"," */","Message.toObject = function toObject(message, options) {","    return this.$type.toObject(message, options);","};","","/**"," * Creates a plain object from this message. Also converts values to other types if specified."," * @param {ConversionOptions} [options] Conversion options"," * @returns {Object.<string,*>} Plain object"," */","Message.prototype.toObject = function toObject(options) {","    return this.$type.toObject(this, options);","};","","/**"," * Converts this message to JSON."," * @returns {Object.<string,*>} JSON object"," */","Message.prototype.toJSON = function toJSON() {","    return this.$type.toObject(this, util.toJSONOptions);","};",""],"l":{"2":1,"4":1,"12":1,"14":0,"15":0,"16":0,"39":1,"40":0,"49":1,"50":0,"60":1,"61":0,"71":1,"72":0,"82":1,"83":0,"91":1,"92":0,"102":1,"110":1,"111":0,"119":1,"120":0,"127":1,"128":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/tokenize.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/tokenize.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"unescape","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":23}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":35},"end":{"line":28,"column":52}}},"3":{"name":"tokenize","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":26}}},"4":{"name":"illegal","line":80,"loc":{"start":{"line":80,"column":4},"end":{"line":80,"column":30}},"skip":true},"5":{"name":"readString","line":89,"loc":{"start":{"line":89,"column":4},"end":{"line":89,"column":26}}},"6":{"name":"charAt","line":107,"loc":{"start":{"line":107,"column":4},"end":{"line":107,"column":25}}},"7":{"name":"setComment","line":118,"loc":{"start":{"line":118,"column":4},"end":{"line":118,"column":36}}},"8":{"name":"next","line":136,"loc":{"start":{"line":136,"column":4},"end":{"line":136,"column":20}}},"9":{"name":"push","line":208,"loc":{"start":{"line":208,"column":4},"end":{"line":208,"column":25}}},"10":{"name":"peek","line":217,"loc":{"start":{"line":217,"column":4},"end":{"line":217,"column":20}}},"11":{"name":"skip","line":235,"loc":{"start":{"line":235,"column":4},"end":{"line":235,"column":38}}},"12":{"name":"cmnt","line":253,"loc":{"start":{"line":253,"column":4},"end":{"line":253,"column":32}}},"13":{"name":"(anonymous_13)","line":272,"loc":{"start":{"line":272,"column":14},"end":{"line":272,"column":25}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":6,"column":55}},"3":{"start":{"line":8,"column":0},"end":{"line":11,"column":27}},"4":{"start":{"line":13,"column":0},"end":{"line":18,"column":2}},"5":{"start":{"line":27,"column":0},"end":{"line":37,"column":1}},"6":{"start":{"line":28,"column":4},"end":{"line":36,"column":7}},"7":{"start":{"line":29,"column":8},"end":{"line":35,"column":9}},"8":{"start":{"line":32,"column":16},"end":{"line":32,"column":26}},"9":{"start":{"line":34,"column":16},"end":{"line":34,"column":45}},"10":{"start":{"line":39,"column":0},"end":{"line":39,"column":29}},"11":{"start":{"line":58,"column":0},"end":{"line":278,"column":1}},"12":{"start":{"line":60,"column":4},"end":{"line":60,"column":31}},"13":{"start":{"line":62,"column":4},"end":{"line":67,"column":24}},"14":{"start":{"line":69,"column":4},"end":{"line":69,"column":19}},"15":{"start":{"line":71,"column":4},"end":{"line":71,"column":27}},"16":{"start":{"line":80,"column":4},"end":{"line":82,"column":5},"skip":true},"17":{"start":{"line":81,"column":8},"end":{"line":81,"column":68},"skip":true},"18":{"start":{"line":89,"column":4},"end":{"line":99,"column":5}},"19":{"start":{"line":90,"column":8},"end":{"line":90,"column":71}},"20":{"start":{"line":91,"column":8},"end":{"line":91,"column":34}},"21":{"start":{"line":92,"column":8},"end":{"line":92,"column":36}},"22":{"start":{"line":93,"column":8},"end":{"line":94,"column":36}},"23":{"start":{"line":94,"column":12},"end":{"line":94,"column":36}},"24":{"start":{"line":95,"column":8},"end":{"line":95,"column":30}},"25":{"start":{"line":96,"column":8},"end":{"line":96,"column":26}},"26":{"start":{"line":97,"column":8},"end":{"line":97,"column":27}},"27":{"start":{"line":98,"column":8},"end":{"line":98,"column":34}},"28":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"29":{"start":{"line":108,"column":8},"end":{"line":108,"column":34}},"30":{"start":{"line":118,"column":4},"end":{"line":129,"column":5}},"31":{"start":{"line":119,"column":8},"end":{"line":119,"column":45}},"32":{"start":{"line":120,"column":8},"end":{"line":120,"column":27}},"33":{"start":{"line":121,"column":8},"end":{"line":123,"column":38}},"34":{"start":{"line":124,"column":8},"end":{"line":125,"column":65}},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":65}},"36":{"start":{"line":126,"column":8},"end":{"line":128,"column":20}},"37":{"start":{"line":136,"column":4},"end":{"line":200,"column":5}},"38":{"start":{"line":137,"column":8},"end":{"line":138,"column":33}},"39":{"start":{"line":138,"column":12},"end":{"line":138,"column":33}},"40":{"start":{"line":139,"column":8},"end":{"line":140,"column":32}},"41":{"start":{"line":140,"column":12},"end":{"line":140,"column":32}},"42":{"start":{"line":141,"column":8},"end":{"line":145,"column":22}},"43":{"start":{"line":146,"column":8},"end":{"line":186,"column":25}},"44":{"start":{"line":147,"column":12},"end":{"line":148,"column":28}},"45":{"start":{"line":148,"column":16},"end":{"line":148,"column":28}},"46":{"start":{"line":149,"column":12},"end":{"line":149,"column":27}},"47":{"start":{"line":150,"column":12},"end":{"line":155,"column":13}},"48":{"start":{"line":151,"column":16},"end":{"line":152,"column":27}},"49":{"start":{"line":152,"column":20},"end":{"line":152,"column":27}},"50":{"start":{"line":153,"column":16},"end":{"line":154,"column":32}},"51":{"start":{"line":154,"column":20},"end":{"line":154,"column":32}},"52":{"start":{"line":156,"column":12},"end":{"line":185,"column":13}},"53":{"start":{"line":157,"column":16},"end":{"line":158,"column":45}},"54":{"start":{"line":158,"column":20},"end":{"line":158,"column":45}},"55":{"start":{"line":159,"column":16},"end":{"line":184,"column":31}},"56":{"start":{"line":160,"column":20},"end":{"line":160,"column":67}},"57":{"start":{"line":161,"column":20},"end":{"line":163,"column":40}},"58":{"start":{"line":162,"column":24},"end":{"line":163,"column":40}},"59":{"start":{"line":163,"column":28},"end":{"line":163,"column":40}},"60":{"start":{"line":164,"column":20},"end":{"line":164,"column":29}},"61":{"start":{"line":165,"column":20},"end":{"line":166,"column":54}},"62":{"start":{"line":166,"column":24},"end":{"line":166,"column":54}},"63":{"start":{"line":167,"column":20},"end":{"line":167,"column":27}},"64":{"start":{"line":168,"column":20},"end":{"line":168,"column":34}},"65":{"start":{"line":169,"column":23},"end":{"line":184,"column":31}},"66":{"start":{"line":170,"column":20},"end":{"line":170,"column":67}},"67":{"start":{"line":171,"column":20},"end":{"line":178,"column":59}},"68":{"start":{"line":172,"column":24},"end":{"line":173,"column":35}},"69":{"start":{"line":173,"column":28},"end":{"line":173,"column":35}},"70":{"start":{"line":174,"column":24},"end":{"line":175,"column":53}},"71":{"start":{"line":175,"column":28},"end":{"line":175,"column":53}},"72":{"start":{"line":176,"column":24},"end":{"line":176,"column":36}},"73":{"start":{"line":177,"column":24},"end":{"line":177,"column":46}},"74":{"start":{"line":179,"column":20},"end":{"line":179,"column":29}},"75":{"start":{"line":180,"column":20},"end":{"line":181,"column":54}},"76":{"start":{"line":181,"column":24},"end":{"line":181,"column":54}},"77":{"start":{"line":182,"column":20},"end":{"line":182,"column":34}},"78":{"start":{"line":184,"column":20},"end":{"line":184,"column":31}},"79":{"start":{"line":190,"column":8},"end":{"line":190,"column":25}},"80":{"start":{"line":191,"column":8},"end":{"line":191,"column":30}},"81":{"start":{"line":192,"column":8},"end":{"line":192,"column":48}},"82":{"start":{"line":193,"column":8},"end":{"line":195,"column":22}},"83":{"start":{"line":194,"column":12},"end":{"line":195,"column":22}},"84":{"start":{"line":195,"column":16},"end":{"line":195,"column":22}},"85":{"start":{"line":196,"column":8},"end":{"line":196,"column":59}},"86":{"start":{"line":197,"column":8},"end":{"line":198,"column":32}},"87":{"start":{"line":198,"column":12},"end":{"line":198,"column":32}},"88":{"start":{"line":199,"column":8},"end":{"line":199,"column":21}},"89":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"90":{"start":{"line":209,"column":8},"end":{"line":209,"column":26}},"91":{"start":{"line":217,"column":4},"end":{"line":225,"column":5}},"92":{"start":{"line":218,"column":8},"end":{"line":223,"column":9}},"93":{"start":{"line":219,"column":12},"end":{"line":219,"column":31}},"94":{"start":{"line":220,"column":12},"end":{"line":221,"column":28}},"95":{"start":{"line":221,"column":16},"end":{"line":221,"column":28}},"96":{"start":{"line":222,"column":12},"end":{"line":222,"column":24}},"97":{"start":{"line":224,"column":8},"end":{"line":224,"column":24}},"98":{"start":{"line":235,"column":4},"end":{"line":245,"column":5}},"99":{"start":{"line":236,"column":8},"end":{"line":237,"column":41}},"100":{"start":{"line":238,"column":8},"end":{"line":241,"column":9}},"101":{"start":{"line":239,"column":12},"end":{"line":239,"column":19}},"102":{"start":{"line":240,"column":12},"end":{"line":240,"column":24}},"103":{"start":{"line":242,"column":8},"end":{"line":243,"column":81}},"104":{"start":{"line":243,"column":12},"end":{"line":243,"column":81}},"105":{"start":{"line":244,"column":8},"end":{"line":244,"column":21}},"106":{"start":{"line":253,"column":4},"end":{"line":265,"column":5}},"107":{"start":{"line":254,"column":8},"end":{"line":254,"column":16}},"108":{"start":{"line":255,"column":8},"end":{"line":261,"column":9}},"109":{"start":{"line":256,"column":12},"end":{"line":256,"column":66}},"110":{"start":{"line":258,"column":12},"end":{"line":259,"column":23}},"111":{"start":{"line":259,"column":16},"end":{"line":259,"column":23}},"112":{"start":{"line":260,"column":12},"end":{"line":260,"column":93}},"113":{"start":{"line":262,"column":8},"end":{"line":262,"column":41}},"114":{"start":{"line":263,"column":8},"end":{"line":263,"column":24}},"115":{"start":{"line":264,"column":8},"end":{"line":264,"column":19}},"116":{"start":{"line":267,"column":4},"end":{"line":276,"column":6}},"117":{"start":{"line":273,"column":12},"end":{"line":273,"column":24}}},"branchMap":{"1":{"line":29,"type":"switch","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":22}},{"start":{"line":31,"column":12},"end":{"line":32,"column":26}},{"start":{"line":33,"column":12},"end":{"line":34,"column":45}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":23},"end":{"line":34,"column":38}},{"start":{"line":34,"column":42},"end":{"line":34,"column":44}}]},"3":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":39},"end":{"line":90,"column":53}},{"start":{"line":90,"column":56},"end":{"line":90,"column":70}}]},"4":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"5":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]},"6":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"7":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":147,"column":12}},{"start":{"line":147,"column":12},"end":{"line":147,"column":12}}]},"8":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":16},"end":{"line":151,"column":16}},{"start":{"line":151,"column":16},"end":{"line":151,"column":16}}]},"9":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":16},"end":{"line":153,"column":16}},{"start":{"line":153,"column":16},"end":{"line":153,"column":16}}]},"10":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":12},"end":{"line":156,"column":12}},{"start":{"line":156,"column":12},"end":{"line":156,"column":12}}]},"11":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":16},"end":{"line":157,"column":16}},{"start":{"line":157,"column":16},"end":{"line":157,"column":16}}]},"12":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":16},"end":{"line":159,"column":16}},{"start":{"line":159,"column":16},"end":{"line":159,"column":16}}]},"13":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":24},"end":{"line":162,"column":24}},{"start":{"line":162,"column":24},"end":{"line":162,"column":24}}]},"14":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":20},"end":{"line":165,"column":20}},{"start":{"line":165,"column":20},"end":{"line":165,"column":20}}]},"15":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":23},"end":{"line":169,"column":23}},{"start":{"line":169,"column":23},"end":{"line":169,"column":23}}]},"16":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":24},"end":{"line":172,"column":24}},{"start":{"line":172,"column":24},"end":{"line":172,"column":24}}]},"17":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":24},"end":{"line":174,"column":24}},{"start":{"line":174,"column":24},"end":{"line":174,"column":24}}]},"18":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":29},"end":{"line":178,"column":41}},{"start":{"line":178,"column":45},"end":{"line":178,"column":57}}]},"19":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":20},"end":{"line":180,"column":20}},{"start":{"line":180,"column":20},"end":{"line":180,"column":20}}]},"20":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":8}},{"start":{"line":193,"column":8},"end":{"line":193,"column":8}}]},"21":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":19},"end":{"line":194,"column":31}},{"start":{"line":194,"column":35},"end":{"line":194,"column":61}}]},"22":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]},"23":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":12},"end":{"line":197,"column":26}},{"start":{"line":197,"column":30},"end":{"line":197,"column":43}}]},"24":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8}},{"start":{"line":218,"column":8},"end":{"line":218,"column":8}}]},"25":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":12},"end":{"line":220,"column":12}},{"start":{"line":220,"column":12},"end":{"line":220,"column":12}}]},"26":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":8},"end":{"line":238,"column":8}},{"start":{"line":238,"column":8},"end":{"line":238,"column":8}}]},"27":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":242,"column":8}},{"start":{"line":242,"column":8},"end":{"line":242,"column":8}}]},"28":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":8},"end":{"line":255,"column":8}},{"start":{"line":255,"column":8},"end":{"line":255,"column":8}}]},"29":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":18},"end":{"line":256,"column":42}},{"start":{"line":256,"column":46},"end":{"line":256,"column":57}},{"start":{"line":256,"column":61},"end":{"line":256,"column":65}}]},"30":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":12},"end":{"line":258,"column":12}},{"start":{"line":258,"column":12},"end":{"line":258,"column":12}}]},"31":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":18},"end":{"line":260,"column":46}},{"start":{"line":260,"column":50},"end":{"line":260,"column":69}},{"start":{"line":260,"column":73},"end":{"line":260,"column":84}},{"start":{"line":260,"column":88},"end":{"line":260,"column":92}}]}},"code":["\"use strict\";","module.exports = tokenize;","","var delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,","    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,","    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;","","var setCommentRe = /^ *[*/]+ */,","    setCommentSplitRe = /\\n/g,","    whitespaceRe = /\\s/,","    unescapeRe = /\\\\(.?)/g;","","var unescapeMap = {","    \"0\": \"\\0\",","    \"r\": \"\\r\",","    \"n\": \"\\n\",","    \"t\": \"\\t\"","};","","/**"," * Unescapes a string."," * @param {string} str String to unescape"," * @returns {string} Unescaped string"," * @property {Object.<string,string>} map Special characters map"," * @ignore"," */","function unescape(str) {","    return str.replace(unescapeRe, function($0, $1) {","        switch ($1) {","            case \"\\\\\":","            case \"\":","                return $1;","            default:","                return unescapeMap[$1] || \"\";","        }","    });","}","","tokenize.unescape = unescape;","","/**"," * Handle object returned from {@link tokenize}."," * @typedef {Object.<string,*>} TokenizerHandle"," * @property {function():number} line Gets the current line number"," * @property {function():?string} next Gets the next token and advances (`null` on eof)"," * @property {function():?string} peek Peeks for the next token (`null` on eof)"," * @property {function(string)} push Pushes a token back to the stack"," * @property {function(string, boolean=):boolean} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws"," * @property {function(number=):?string} cmnt Gets the comment on the previous line or the line comment on the specified line, if any"," */","","/**"," * Tokenizes the given .proto source and returns an object with useful utility functions."," * @param {string} source Source contents"," * @returns {TokenizerHandle} Tokenizer handle"," * @property {function(string):string} unescape Unescapes a string"," */","function tokenize(source) {","    /* eslint-disable callback-return */","    source = source.toString();","","    var offset = 0,","        length = source.length,","        line = 1,","        commentType = null,","        commentText = null,","        commentLine = 0;","","    var stack = [];","","    var stringDelim = null;","","    /* istanbul ignore next */","    /**","     * Creates an error for illegal syntax.","     * @param {string} subject Subject","     * @returns {Error} Error created","     * @inner","     */","    function illegal(subject) {","        return Error(\"illegal \" + subject + \" (line \" + line + \")\");","    }","","    /**","     * Reads a string till its end.","     * @returns {string} String read","     * @inner","     */","    function readString() {","        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;","        re.lastIndex = offset - 1;","        var match = re.exec(source);","        if (!match)","            throw illegal(\"string\");","        offset = re.lastIndex;","        push(stringDelim);","        stringDelim = null;","        return unescape(match[1]);","    }","","    /**","     * Gets the character at `pos` within the source.","     * @param {number} pos Position","     * @returns {string} Character","     * @inner","     */","    function charAt(pos) {","        return source.charAt(pos);","    }","","    /**","     * Sets the current comment text.","     * @param {number} start Start offset","     * @param {number} end End offset","     * @returns {undefined}","     * @inner","     */","    function setComment(start, end) {","        commentType = source.charAt(start++);","        commentLine = line;","        var lines = source","            .substring(start, end)","            .split(setCommentSplitRe);","        for (var i = 0; i < lines.length; ++i)","            lines[i] = lines[i].replace(setCommentRe, \"\").trim();","        commentText = lines","            .join(\"\\n\")","            .trim();","    }","","    /**","     * Obtains the next token.","     * @returns {?string} Next token or `null` on eof","     * @inner","     */","    function next() {","        if (stack.length > 0)","            return stack.shift();","        if (stringDelim)","            return readString();","        var repeat,","            prev,","            curr,","            start,","            isComment;","        do {","            if (offset === length)","                return null;","            repeat = false;","            while (whitespaceRe.test(curr = charAt(offset))) {","                if (curr === \"\\n\")","                    ++line;","                if (++offset === length)","                    return null;","            }","            if (charAt(offset) === \"/\") {","                if (++offset === length)","                    throw illegal(\"comment\");","                if (charAt(offset) === \"/\") { // Line","                    isComment = charAt(start = offset + 1) === \"/\";","                    while (charAt(++offset) !== \"\\n\")","                        if (offset === length)","                            return null;","                    ++offset;","                    if (isComment)","                        setComment(start, offset - 1);","                    ++line;","                    repeat = true;","                } else if ((curr = charAt(offset)) === \"*\") { /* Block */","                    isComment = charAt(start = offset + 1) === \"*\";","                    do {","                        if (curr === \"\\n\")","                            ++line;","                        if (++offset === length)","                            throw illegal(\"comment\");","                        prev = curr;","                        curr = charAt(offset);","                    } while (prev !== \"*\" || curr !== \"/\");","                    ++offset;","                    if (isComment)","                        setComment(start, offset - 2);","                    repeat = true;","                } else","                    return \"/\";","            }","        } while (repeat);","","        // offset !== length if we got here","","        var end = offset;","        delimRe.lastIndex = 0;","        var delim = delimRe.test(charAt(end++));","        if (!delim)","            while (end < length && !delimRe.test(charAt(end)))","                ++end;","        var token = source.substring(offset, offset = end);","        if (token === \"\\\"\" || token === \"'\")","            stringDelim = token;","        return token;","    }","","    /**","     * Pushes a token back to the stack.","     * @param {string} token Token","     * @returns {undefined}","     * @inner","     */","    function push(token) {","        stack.push(token);","    }","","    /**","     * Peeks for the next token.","     * @returns {?string} Token or `null` on eof","     * @inner","     */","    function peek() {","        if (!stack.length) {","            var token = next();","            if (token === null)","                return null;","            push(token);","        }","        return stack[0];","    }","","    /**","     * Skips a token.","     * @param {string} expected Expected token","     * @param {boolean} [optional=false] Whether the token is optional","     * @returns {boolean} `true` when skipped, `false` if not","     * @throws {Error} When a required token is not present","     * @inner","     */","    function skip(expected, optional) {","        var actual = peek(),","            equals = actual === expected;","        if (equals) {","            next();","            return true;","        }","        if (!optional)","            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");","        return false;","    }","","    /**","     * Gets a comment.","     * @param {number=} trailingLine Trailing line number if applicable","     * @returns {?string} Comment text","     * @inner","     */","    function cmnt(trailingLine) {","        var ret;","        if (trailingLine === undefined)","            ret = commentLine === line - 1 && commentText || null;","        else {","            if (!commentText)","                peek();","            ret = commentLine === trailingLine && commentType === \"/\" && commentText || null;","        }","        commentType = commentText = null;","        commentLine = 0;","        return ret;","    }","","    return {","        next: next,","        peek: peek,","        push: push,","        skip: skip,","        line: function() {","            return line;","        },","        cmnt: cmnt","    };","    /* eslint-enable callback-return */","}",""],"l":{"2":1,"4":1,"8":1,"13":1,"27":1,"28":0,"29":0,"32":0,"34":0,"39":1,"58":1,"60":0,"62":0,"69":0,"71":0,"80":1,"81":1,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"107":1,"108":0,"118":1,"119":0,"120":0,"121":0,"124":0,"125":0,"126":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"179":0,"180":0,"181":0,"182":0,"184":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"208":1,"209":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"224":0,"235":1,"236":0,"238":0,"239":0,"240":0,"242":0,"243":0,"244":0,"253":1,"254":0,"255":0,"256":0,"258":0,"259":0,"260":0,"262":0,"263":0,"264":0,"267":0,"273":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/parse.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/parse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":1,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":1,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":1,"290":0,"291":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":1,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":1,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0,0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0,0,0,0,0,0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0,0,0],"86":[0,0],"87":[0,0],"88":[0,0,0,0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},"fnMap":{"1":{"name":"camelCase","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":24}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":37},"end":{"line":35,"column":54}}},"3":{"name":"parse","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":38}}},"4":{"name":"(anonymous_4)","line":91,"loc":{"start":{"line":91,"column":39},"end":{"line":91,"column":54}}},"5":{"name":"illegal","line":94,"loc":{"start":{"line":94,"column":4},"end":{"line":94,"column":50}},"skip":true},"6":{"name":"readString","line":101,"loc":{"start":{"line":101,"column":4},"end":{"line":101,"column":26}}},"7":{"name":"readValue","line":116,"loc":{"start":{"line":116,"column":4},"end":{"line":116,"column":38}}},"8":{"name":"readRanges","line":141,"loc":{"start":{"line":141,"column":4},"end":{"line":141,"column":47}}},"9":{"name":"parseNumber","line":152,"loc":{"start":{"line":152,"column":4},"end":{"line":152,"column":48}}},"10":{"name":"parseId","line":181,"loc":{"start":{"line":181,"column":4},"end":{"line":181,"column":44}}},"11":{"name":"parsePackage","line":206,"loc":{"start":{"line":206,"column":4},"end":{"line":206,"column":28}}},"12":{"name":"parseImport","line":222,"loc":{"start":{"line":222,"column":4},"end":{"line":222,"column":27}}},"13":{"name":"parseSyntax","line":242,"loc":{"start":{"line":242,"column":4},"end":{"line":242,"column":27}}},"14":{"name":"parseCommon","line":254,"loc":{"start":{"line":254,"column":4},"end":{"line":254,"column":40}}},"15":{"name":"ifBlock","line":281,"loc":{"start":{"line":281,"column":4},"end":{"line":281,"column":40}}},"16":{"name":"parseType","line":301,"loc":{"start":{"line":301,"column":4},"end":{"line":301,"column":38}}},"17":{"name":"parseType_block","line":308,"loc":{"start":{"line":308,"column":22},"end":{"line":308,"column":54}}},"18":{"name":"parseField","line":349,"loc":{"start":{"line":349,"column":4},"end":{"line":349,"column":46}}},"19":{"name":"parseField_block","line":370,"loc":{"start":{"line":370,"column":23},"end":{"line":370,"column":56}}},"20":{"name":"parseField_line","line":379,"loc":{"start":{"line":379,"column":11},"end":{"line":379,"column":38}}},"21":{"name":"parseGroup","line":392,"loc":{"start":{"line":392,"column":4},"end":{"line":392,"column":38}}},"22":{"name":"parseGroup_block","line":408,"loc":{"start":{"line":408,"column":22},"end":{"line":408,"column":55}}},"23":{"name":"parseMapField","line":431,"loc":{"start":{"line":431,"column":4},"end":{"line":431,"column":35}}},"24":{"name":"parseMapField_block","line":455,"loc":{"start":{"line":455,"column":23},"end":{"line":455,"column":59}}},"25":{"name":"parseMapField_line","line":464,"loc":{"start":{"line":464,"column":11},"end":{"line":464,"column":41}}},"26":{"name":"parseOneOf","line":470,"loc":{"start":{"line":470,"column":4},"end":{"line":470,"column":39}}},"27":{"name":"parseOneOf_block","line":477,"loc":{"start":{"line":477,"column":23},"end":{"line":477,"column":56}}},"28":{"name":"parseEnum","line":489,"loc":{"start":{"line":489,"column":4},"end":{"line":489,"column":38}}},"29":{"name":"parseEnum_block","line":496,"loc":{"start":{"line":496,"column":21},"end":{"line":496,"column":53}}},"30":{"name":"parseEnumValue","line":506,"loc":{"start":{"line":506,"column":4},"end":{"line":506,"column":43}}},"31":{"name":"parseEnumValue_block","line":515,"loc":{"start":{"line":515,"column":23},"end":{"line":515,"column":60}}},"32":{"name":"parseEnumValue_line","line":524,"loc":{"start":{"line":524,"column":11},"end":{"line":524,"column":42}}},"33":{"name":"parseOption","line":530,"loc":{"start":{"line":530,"column":4},"end":{"line":530,"column":40}}},"34":{"name":"parseOptionValue","line":551,"loc":{"start":{"line":551,"column":4},"end":{"line":551,"column":44}}},"35":{"name":"setOption","line":570,"loc":{"start":{"line":570,"column":4},"end":{"line":570,"column":44}}},"36":{"name":"parseInlineOptions","line":575,"loc":{"start":{"line":575,"column":4},"end":{"line":575,"column":40}}},"37":{"name":"parseService","line":585,"loc":{"start":{"line":585,"column":4},"end":{"line":585,"column":41}}},"38":{"name":"parseService_block","line":592,"loc":{"start":{"line":592,"column":25},"end":{"line":592,"column":60}}},"39":{"name":"parseMethod","line":605,"loc":{"start":{"line":605,"column":4},"end":{"line":605,"column":40}}},"40":{"name":"parseMethod_block","line":637,"loc":{"start":{"line":637,"column":24},"end":{"line":637,"column":58}}},"41":{"name":"parseExtension","line":650,"loc":{"start":{"line":650,"column":4},"end":{"line":650,"column":43}}},"42":{"name":"parseExtension_block","line":657,"loc":{"start":{"line":657,"column":22},"end":{"line":657,"column":59}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":22}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"4":{"start":{"line":7,"column":0},"end":{"line":17,"column":34}},"5":{"start":{"line":19,"column":0},"end":{"line":28,"column":51}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":30}},"7":{"start":{"line":32,"column":0},"end":{"line":36,"column":1}},"8":{"start":{"line":33,"column":4},"end":{"line":35,"column":84}},"9":{"start":{"line":35,"column":56},"end":{"line":35,"column":80}},"10":{"start":{"line":66,"column":0},"end":{"line":739,"column":1}},"11":{"start":{"line":68,"column":4},"end":{"line":71,"column":5}},"12":{"start":{"line":69,"column":8},"end":{"line":69,"column":23}},"13":{"start":{"line":70,"column":8},"end":{"line":70,"column":26}},"14":{"start":{"line":72,"column":4},"end":{"line":73,"column":33}},"15":{"start":{"line":73,"column":8},"end":{"line":73,"column":33}},"16":{"start":{"line":75,"column":4},"end":{"line":80,"column":23}},"17":{"start":{"line":82,"column":4},"end":{"line":87,"column":25}},"18":{"start":{"line":89,"column":4},"end":{"line":89,"column":19}},"19":{"start":{"line":91,"column":4},"end":{"line":91,"column":83}},"20":{"start":{"line":91,"column":56},"end":{"line":91,"column":68}},"21":{"start":{"line":94,"column":4},"end":{"line":99,"column":5},"skip":true},"22":{"start":{"line":95,"column":8},"end":{"line":95,"column":38},"skip":true},"23":{"start":{"line":96,"column":8},"end":{"line":97,"column":34},"skip":true},"24":{"start":{"line":97,"column":12},"end":{"line":97,"column":34},"skip":true},"25":{"start":{"line":98,"column":8},"end":{"line":98,"column":140},"skip":true},"26":{"start":{"line":101,"column":4},"end":{"line":114,"column":5}},"27":{"start":{"line":102,"column":8},"end":{"line":103,"column":18}},"28":{"start":{"line":104,"column":8},"end":{"line":112,"column":50}},"29":{"start":{"line":106,"column":12},"end":{"line":107,"column":37}},"30":{"start":{"line":107,"column":16},"end":{"line":107,"column":37},"skip":true},"31":{"start":{"line":109,"column":12},"end":{"line":109,"column":32}},"32":{"start":{"line":110,"column":12},"end":{"line":110,"column":24}},"33":{"start":{"line":111,"column":12},"end":{"line":111,"column":27}},"34":{"start":{"line":113,"column":8},"end":{"line":113,"column":31}},"35":{"start":{"line":116,"column":4},"end":{"line":139,"column":5}},"36":{"start":{"line":117,"column":8},"end":{"line":117,"column":27}},"37":{"start":{"line":118,"column":8},"end":{"line":127,"column":9}},"38":{"start":{"line":121,"column":16},"end":{"line":121,"column":28}},"39":{"start":{"line":122,"column":16},"end":{"line":122,"column":36}},"40":{"start":{"line":124,"column":16},"end":{"line":124,"column":28}},"41":{"start":{"line":126,"column":16},"end":{"line":126,"column":29}},"42":{"start":{"line":128,"column":8},"end":{"line":138,"column":9}},"43":{"start":{"line":129,"column":12},"end":{"line":129,"column":65}},"44":{"start":{"line":133,"column":12},"end":{"line":134,"column":29}},"45":{"start":{"line":134,"column":16},"end":{"line":134,"column":29}},"46":{"start":{"line":137,"column":12},"end":{"line":137,"column":42},"skip":true},"47":{"start":{"line":141,"column":4},"end":{"line":150,"column":5}},"48":{"start":{"line":142,"column":8},"end":{"line":142,"column":25}},"49":{"start":{"line":143,"column":8},"end":{"line":148,"column":34}},"50":{"start":{"line":144,"column":12},"end":{"line":147,"column":101}},"51":{"start":{"line":145,"column":16},"end":{"line":145,"column":42}},"52":{"start":{"line":147,"column":16},"end":{"line":147,"column":101}},"53":{"start":{"line":149,"column":8},"end":{"line":149,"column":18}},"54":{"start":{"line":152,"column":4},"end":{"line":179,"column":5}},"55":{"start":{"line":153,"column":8},"end":{"line":153,"column":21}},"56":{"start":{"line":154,"column":8},"end":{"line":157,"column":9}},"57":{"start":{"line":155,"column":12},"end":{"line":155,"column":22}},"58":{"start":{"line":156,"column":12},"end":{"line":156,"column":39}},"59":{"start":{"line":158,"column":8},"end":{"line":165,"column":9}},"60":{"start":{"line":160,"column":16},"end":{"line":160,"column":39}},"61":{"start":{"line":162,"column":16},"end":{"line":162,"column":27}},"62":{"start":{"line":164,"column":16},"end":{"line":164,"column":25}},"63":{"start":{"line":166,"column":8},"end":{"line":167,"column":46}},"64":{"start":{"line":167,"column":12},"end":{"line":167,"column":46}},"65":{"start":{"line":168,"column":8},"end":{"line":169,"column":46}},"66":{"start":{"line":169,"column":12},"end":{"line":169,"column":46}},"67":{"start":{"line":170,"column":8},"end":{"line":171,"column":45}},"68":{"start":{"line":171,"column":12},"end":{"line":171,"column":45}},"69":{"start":{"line":174,"column":8},"end":{"line":175,"column":44}},"70":{"start":{"line":175,"column":12},"end":{"line":175,"column":44}},"71":{"start":{"line":178,"column":8},"end":{"line":178,"column":55},"skip":true},"72":{"start":{"line":181,"column":4},"end":{"line":204,"column":5}},"73":{"start":{"line":182,"column":8},"end":{"line":187,"column":9}},"74":{"start":{"line":184,"column":16},"end":{"line":184,"column":33}},"75":{"start":{"line":186,"column":16},"end":{"line":186,"column":25}},"76":{"start":{"line":190,"column":8},"end":{"line":191,"column":39}},"77":{"start":{"line":191,"column":12},"end":{"line":191,"column":39},"skip":true},"78":{"start":{"line":193,"column":8},"end":{"line":194,"column":39}},"79":{"start":{"line":194,"column":12},"end":{"line":194,"column":39}},"80":{"start":{"line":195,"column":8},"end":{"line":196,"column":39}},"81":{"start":{"line":196,"column":12},"end":{"line":196,"column":39}},"82":{"start":{"line":199,"column":8},"end":{"line":200,"column":38}},"83":{"start":{"line":200,"column":12},"end":{"line":200,"column":38}},"84":{"start":{"line":203,"column":8},"end":{"line":203,"column":35},"skip":true},"85":{"start":{"line":206,"column":4},"end":{"line":220,"column":5}},"86":{"start":{"line":209,"column":8},"end":{"line":210,"column":37}},"87":{"start":{"line":210,"column":12},"end":{"line":210,"column":37},"skip":true},"88":{"start":{"line":212,"column":8},"end":{"line":212,"column":21}},"89":{"start":{"line":215,"column":8},"end":{"line":216,"column":39}},"90":{"start":{"line":216,"column":12},"end":{"line":216,"column":39},"skip":true},"91":{"start":{"line":218,"column":8},"end":{"line":218,"column":30}},"92":{"start":{"line":219,"column":8},"end":{"line":219,"column":18}},"93":{"start":{"line":222,"column":4},"end":{"line":240,"column":5}},"94":{"start":{"line":223,"column":8},"end":{"line":223,"column":27}},"95":{"start":{"line":224,"column":8},"end":{"line":224,"column":25}},"96":{"start":{"line":225,"column":8},"end":{"line":236,"column":9}},"97":{"start":{"line":227,"column":16},"end":{"line":227,"column":65}},"98":{"start":{"line":228,"column":16},"end":{"line":228,"column":23}},"99":{"start":{"line":229,"column":16},"end":{"line":229,"column":22}},"100":{"start":{"line":231,"column":16},"end":{"line":231,"column":23}},"101":{"start":{"line":234,"column":16},"end":{"line":234,"column":57}},"102":{"start":{"line":235,"column":16},"end":{"line":235,"column":22}},"103":{"start":{"line":237,"column":8},"end":{"line":237,"column":29}},"104":{"start":{"line":238,"column":8},"end":{"line":238,"column":18}},"105":{"start":{"line":239,"column":8},"end":{"line":239,"column":33}},"106":{"start":{"line":242,"column":4},"end":{"line":252,"column":5}},"107":{"start":{"line":243,"column":8},"end":{"line":243,"column":18}},"108":{"start":{"line":244,"column":8},"end":{"line":244,"column":30}},"109":{"start":{"line":245,"column":8},"end":{"line":245,"column":39}},"110":{"start":{"line":248,"column":8},"end":{"line":249,"column":44}},"111":{"start":{"line":249,"column":12},"end":{"line":249,"column":44},"skip":true},"112":{"start":{"line":251,"column":8},"end":{"line":251,"column":18}},"113":{"start":{"line":254,"column":4},"end":{"line":279,"column":5}},"114":{"start":{"line":255,"column":8},"end":{"line":277,"column":9}},"115":{"start":{"line":258,"column":16},"end":{"line":258,"column":43}},"116":{"start":{"line":259,"column":16},"end":{"line":259,"column":26}},"117":{"start":{"line":260,"column":16},"end":{"line":260,"column":28}},"118":{"start":{"line":263,"column":16},"end":{"line":263,"column":41}},"119":{"start":{"line":264,"column":16},"end":{"line":264,"column":28}},"120":{"start":{"line":267,"column":16},"end":{"line":267,"column":41}},"121":{"start":{"line":268,"column":16},"end":{"line":268,"column":28}},"122":{"start":{"line":271,"column":16},"end":{"line":271,"column":44}},"123":{"start":{"line":272,"column":16},"end":{"line":272,"column":28}},"124":{"start":{"line":275,"column":16},"end":{"line":275,"column":46}},"125":{"start":{"line":276,"column":16},"end":{"line":276,"column":28}},"126":{"start":{"line":278,"column":8},"end":{"line":278,"column":21}},"127":{"start":{"line":281,"column":4},"end":{"line":299,"column":5}},"128":{"start":{"line":282,"column":8},"end":{"line":282,"column":37}},"129":{"start":{"line":283,"column":8},"end":{"line":286,"column":9}},"130":{"start":{"line":284,"column":12},"end":{"line":284,"column":33}},"131":{"start":{"line":285,"column":12},"end":{"line":285,"column":42}},"132":{"start":{"line":287,"column":8},"end":{"line":298,"column":9}},"133":{"start":{"line":288,"column":12},"end":{"line":288,"column":22}},"134":{"start":{"line":289,"column":12},"end":{"line":290,"column":28}},"135":{"start":{"line":290,"column":16},"end":{"line":290,"column":28}},"136":{"start":{"line":291,"column":12},"end":{"line":291,"column":28}},"137":{"start":{"line":293,"column":12},"end":{"line":294,"column":25}},"138":{"start":{"line":294,"column":16},"end":{"line":294,"column":25}},"139":{"start":{"line":295,"column":12},"end":{"line":295,"column":22}},"140":{"start":{"line":296,"column":12},"end":{"line":297,"column":49}},"141":{"start":{"line":297,"column":16},"end":{"line":297,"column":49}},"142":{"start":{"line":301,"column":4},"end":{"line":347,"column":5}},"143":{"start":{"line":304,"column":8},"end":{"line":305,"column":46}},"144":{"start":{"line":305,"column":12},"end":{"line":305,"column":46},"skip":true},"145":{"start":{"line":307,"column":8},"end":{"line":307,"column":35}},"146":{"start":{"line":308,"column":8},"end":{"line":345,"column":11}},"147":{"start":{"line":309,"column":12},"end":{"line":310,"column":23}},"148":{"start":{"line":310,"column":16},"end":{"line":310,"column":23}},"149":{"start":{"line":312,"column":12},"end":{"line":344,"column":13}},"150":{"start":{"line":315,"column":20},"end":{"line":315,"column":47}},"151":{"start":{"line":316,"column":20},"end":{"line":316,"column":26}},"152":{"start":{"line":321,"column":20},"end":{"line":321,"column":44}},"153":{"start":{"line":322,"column":20},"end":{"line":322,"column":26}},"154":{"start":{"line":325,"column":20},"end":{"line":325,"column":44}},"155":{"start":{"line":326,"column":20},"end":{"line":326,"column":26}},"156":{"start":{"line":329,"column":20},"end":{"line":329,"column":74}},"157":{"start":{"line":330,"column":20},"end":{"line":330,"column":26}},"158":{"start":{"line":333,"column":20},"end":{"line":333,"column":76}},"159":{"start":{"line":334,"column":20},"end":{"line":334,"column":26}},"160":{"start":{"line":338,"column":20},"end":{"line":339,"column":45}},"161":{"start":{"line":339,"column":24},"end":{"line":339,"column":45},"skip":true},"162":{"start":{"line":341,"column":20},"end":{"line":341,"column":32}},"163":{"start":{"line":342,"column":20},"end":{"line":342,"column":49}},"164":{"start":{"line":343,"column":20},"end":{"line":343,"column":26}},"165":{"start":{"line":346,"column":8},"end":{"line":346,"column":25}},"166":{"start":{"line":349,"column":4},"end":{"line":390,"column":5}},"167":{"start":{"line":350,"column":8},"end":{"line":350,"column":26}},"168":{"start":{"line":351,"column":8},"end":{"line":354,"column":9}},"169":{"start":{"line":352,"column":12},"end":{"line":352,"column":37}},"170":{"start":{"line":353,"column":12},"end":{"line":353,"column":19}},"171":{"start":{"line":357,"column":8},"end":{"line":358,"column":40}},"172":{"start":{"line":358,"column":12},"end":{"line":358,"column":40},"skip":true},"173":{"start":{"line":360,"column":8},"end":{"line":360,"column":26}},"174":{"start":{"line":363,"column":8},"end":{"line":364,"column":40}},"175":{"start":{"line":364,"column":12},"end":{"line":364,"column":40},"skip":true},"176":{"start":{"line":366,"column":8},"end":{"line":366,"column":31}},"177":{"start":{"line":367,"column":8},"end":{"line":367,"column":18}},"178":{"start":{"line":369,"column":8},"end":{"line":369,"column":73}},"179":{"start":{"line":370,"column":8},"end":{"line":381,"column":11}},"180":{"start":{"line":373,"column":12},"end":{"line":377,"column":37}},"181":{"start":{"line":374,"column":16},"end":{"line":374,"column":42}},"182":{"start":{"line":375,"column":16},"end":{"line":375,"column":26}},"183":{"start":{"line":377,"column":16},"end":{"line":377,"column":37},"skip":true},"184":{"start":{"line":380,"column":12},"end":{"line":380,"column":38}},"185":{"start":{"line":382,"column":8},"end":{"line":382,"column":26}},"186":{"start":{"line":388,"column":8},"end":{"line":389,"column":66}},"187":{"start":{"line":389,"column":12},"end":{"line":389,"column":66}},"188":{"start":{"line":392,"column":4},"end":{"line":429,"column":5}},"189":{"start":{"line":393,"column":8},"end":{"line":393,"column":26}},"190":{"start":{"line":396,"column":8},"end":{"line":397,"column":40}},"191":{"start":{"line":397,"column":12},"end":{"line":397,"column":40},"skip":true},"192":{"start":{"line":399,"column":8},"end":{"line":399,"column":43}},"193":{"start":{"line":400,"column":8},"end":{"line":401,"column":38}},"194":{"start":{"line":401,"column":12},"end":{"line":401,"column":38}},"195":{"start":{"line":402,"column":8},"end":{"line":402,"column":18}},"196":{"start":{"line":403,"column":8},"end":{"line":403,"column":33}},"197":{"start":{"line":404,"column":8},"end":{"line":404,"column":34}},"198":{"start":{"line":405,"column":8},"end":{"line":405,"column":26}},"199":{"start":{"line":406,"column":8},"end":{"line":406,"column":57}},"200":{"start":{"line":407,"column":8},"end":{"line":407,"column":40}},"201":{"start":{"line":408,"column":8},"end":{"line":426,"column":11}},"202":{"start":{"line":409,"column":12},"end":{"line":425,"column":13}},"203":{"start":{"line":412,"column":20},"end":{"line":412,"column":45}},"204":{"start":{"line":413,"column":20},"end":{"line":413,"column":30}},"205":{"start":{"line":414,"column":20},"end":{"line":414,"column":26}},"206":{"start":{"line":419,"column":20},"end":{"line":419,"column":44}},"207":{"start":{"line":420,"column":20},"end":{"line":420,"column":26}},"208":{"start":{"line":424,"column":20},"end":{"line":424,"column":41},"skip":true},"209":{"start":{"line":427,"column":8},"end":{"line":428,"column":26}},"210":{"start":{"line":431,"column":4},"end":{"line":468,"column":5}},"211":{"start":{"line":432,"column":8},"end":{"line":432,"column":18}},"212":{"start":{"line":433,"column":8},"end":{"line":433,"column":29}},"213":{"start":{"line":436,"column":8},"end":{"line":437,"column":43}},"214":{"start":{"line":437,"column":12},"end":{"line":437,"column":43},"skip":true},"215":{"start":{"line":439,"column":8},"end":{"line":439,"column":18}},"216":{"start":{"line":440,"column":8},"end":{"line":440,"column":31}},"217":{"start":{"line":443,"column":8},"end":{"line":444,"column":45}},"218":{"start":{"line":444,"column":12},"end":{"line":444,"column":45},"skip":true},"219":{"start":{"line":446,"column":8},"end":{"line":446,"column":18}},"220":{"start":{"line":447,"column":8},"end":{"line":447,"column":26}},"221":{"start":{"line":450,"column":8},"end":{"line":451,"column":40}},"222":{"start":{"line":451,"column":12},"end":{"line":451,"column":40},"skip":true},"223":{"start":{"line":453,"column":8},"end":{"line":453,"column":18}},"224":{"start":{"line":454,"column":8},"end":{"line":454,"column":87}},"225":{"start":{"line":455,"column":8},"end":{"line":466,"column":11}},"226":{"start":{"line":458,"column":12},"end":{"line":462,"column":37}},"227":{"start":{"line":459,"column":16},"end":{"line":459,"column":42}},"228":{"start":{"line":460,"column":16},"end":{"line":460,"column":26}},"229":{"start":{"line":462,"column":16},"end":{"line":462,"column":37},"skip":true},"230":{"start":{"line":465,"column":12},"end":{"line":465,"column":38}},"231":{"start":{"line":467,"column":8},"end":{"line":467,"column":26}},"232":{"start":{"line":470,"column":4},"end":{"line":487,"column":5}},"233":{"start":{"line":473,"column":8},"end":{"line":474,"column":41}},"234":{"start":{"line":474,"column":12},"end":{"line":474,"column":41},"skip":true},"235":{"start":{"line":476,"column":8},"end":{"line":476,"column":48}},"236":{"start":{"line":477,"column":8},"end":{"line":485,"column":11}},"237":{"start":{"line":478,"column":12},"end":{"line":484,"column":13}},"238":{"start":{"line":479,"column":16},"end":{"line":479,"column":42}},"239":{"start":{"line":480,"column":16},"end":{"line":480,"column":26}},"240":{"start":{"line":482,"column":16},"end":{"line":482,"column":28}},"241":{"start":{"line":483,"column":16},"end":{"line":483,"column":46}},"242":{"start":{"line":486,"column":8},"end":{"line":486,"column":26}},"243":{"start":{"line":489,"column":4},"end":{"line":504,"column":5}},"244":{"start":{"line":492,"column":8},"end":{"line":493,"column":41}},"245":{"start":{"line":493,"column":12},"end":{"line":493,"column":41},"skip":true},"246":{"start":{"line":495,"column":8},"end":{"line":495,"column":34}},"247":{"start":{"line":496,"column":8},"end":{"line":502,"column":11}},"248":{"start":{"line":497,"column":12},"end":{"line":501,"column":43}},"249":{"start":{"line":498,"column":16},"end":{"line":498,"column":40}},"250":{"start":{"line":499,"column":16},"end":{"line":499,"column":26}},"251":{"start":{"line":501,"column":16},"end":{"line":501,"column":43}},"252":{"start":{"line":503,"column":8},"end":{"line":503,"column":24}},"253":{"start":{"line":506,"column":4},"end":{"line":528,"column":5}},"254":{"start":{"line":509,"column":8},"end":{"line":510,"column":41}},"255":{"start":{"line":510,"column":12},"end":{"line":510,"column":41},"skip":true},"256":{"start":{"line":512,"column":8},"end":{"line":512,"column":18}},"257":{"start":{"line":513,"column":8},"end":{"line":514,"column":23}},"258":{"start":{"line":515,"column":8},"end":{"line":526,"column":11}},"259":{"start":{"line":518,"column":12},"end":{"line":522,"column":37}},"260":{"start":{"line":519,"column":16},"end":{"line":519,"column":42}},"261":{"start":{"line":520,"column":16},"end":{"line":520,"column":26}},"262":{"start":{"line":522,"column":16},"end":{"line":522,"column":37},"skip":true},"263":{"start":{"line":525,"column":12},"end":{"line":525,"column":38}},"264":{"start":{"line":527,"column":8},"end":{"line":527,"column":48}},"265":{"start":{"line":530,"column":4},"end":{"line":549,"column":5}},"266":{"start":{"line":531,"column":8},"end":{"line":531,"column":39}},"267":{"start":{"line":534,"column":8},"end":{"line":535,"column":41}},"268":{"start":{"line":535,"column":12},"end":{"line":535,"column":41},"skip":true},"269":{"start":{"line":537,"column":8},"end":{"line":537,"column":25}},"270":{"start":{"line":538,"column":8},"end":{"line":546,"column":9}},"271":{"start":{"line":539,"column":12},"end":{"line":539,"column":22}},"272":{"start":{"line":540,"column":12},"end":{"line":540,"column":36}},"273":{"start":{"line":541,"column":12},"end":{"line":541,"column":27}},"274":{"start":{"line":542,"column":12},"end":{"line":545,"column":13}},"275":{"start":{"line":543,"column":16},"end":{"line":543,"column":30}},"276":{"start":{"line":544,"column":16},"end":{"line":544,"column":23}},"277":{"start":{"line":547,"column":8},"end":{"line":547,"column":18}},"278":{"start":{"line":548,"column":8},"end":{"line":548,"column":39}},"279":{"start":{"line":551,"column":4},"end":{"line":568,"column":5}},"280":{"start":{"line":552,"column":8},"end":{"line":566,"column":53}},"281":{"start":{"line":553,"column":12},"end":{"line":564,"column":39}},"282":{"start":{"line":555,"column":16},"end":{"line":556,"column":49}},"283":{"start":{"line":556,"column":20},"end":{"line":556,"column":49},"skip":true},"284":{"start":{"line":558,"column":16},"end":{"line":563,"column":17}},"285":{"start":{"line":559,"column":20},"end":{"line":559,"column":65}},"286":{"start":{"line":561,"column":20},"end":{"line":561,"column":30}},"287":{"start":{"line":562,"column":20},"end":{"line":562,"column":75}},"288":{"start":{"line":566,"column":12},"end":{"line":566,"column":53}},"289":{"start":{"line":570,"column":4},"end":{"line":573,"column":5}},"290":{"start":{"line":571,"column":8},"end":{"line":572,"column":42}},"291":{"start":{"line":572,"column":12},"end":{"line":572,"column":42}},"292":{"start":{"line":575,"column":4},"end":{"line":583,"column":5}},"293":{"start":{"line":576,"column":8},"end":{"line":581,"column":9}},"294":{"start":{"line":577,"column":12},"end":{"line":579,"column":38}},"295":{"start":{"line":578,"column":16},"end":{"line":578,"column":46}},"296":{"start":{"line":580,"column":12},"end":{"line":580,"column":22}},"297":{"start":{"line":582,"column":8},"end":{"line":582,"column":22}},"298":{"start":{"line":585,"column":4},"end":{"line":603,"column":5}},"299":{"start":{"line":588,"column":8},"end":{"line":589,"column":49}},"300":{"start":{"line":589,"column":12},"end":{"line":589,"column":49},"skip":true},"301":{"start":{"line":591,"column":8},"end":{"line":591,"column":41}},"302":{"start":{"line":592,"column":8},"end":{"line":601,"column":11}},"303":{"start":{"line":593,"column":12},"end":{"line":594,"column":23}},"304":{"start":{"line":594,"column":16},"end":{"line":594,"column":23}},"305":{"start":{"line":597,"column":12},"end":{"line":600,"column":37}},"306":{"start":{"line":598,"column":16},"end":{"line":598,"column":44}},"307":{"start":{"line":600,"column":16},"end":{"line":600,"column":37},"skip":true},"308":{"start":{"line":602,"column":8},"end":{"line":602,"column":28}},"309":{"start":{"line":605,"column":4},"end":{"line":648,"column":5}},"310":{"start":{"line":606,"column":8},"end":{"line":606,"column":25}},"311":{"start":{"line":609,"column":8},"end":{"line":610,"column":41}},"312":{"start":{"line":610,"column":12},"end":{"line":610,"column":41},"skip":true},"313":{"start":{"line":612,"column":8},"end":{"line":614,"column":41}},"314":{"start":{"line":616,"column":8},"end":{"line":616,"column":18}},"315":{"start":{"line":617,"column":8},"end":{"line":618,"column":33}},"316":{"start":{"line":618,"column":12},"end":{"line":618,"column":33}},"317":{"start":{"line":621,"column":8},"end":{"line":622,"column":33}},"318":{"start":{"line":622,"column":12},"end":{"line":622,"column":33},"skip":true},"319":{"start":{"line":624,"column":8},"end":{"line":624,"column":28}},"320":{"start":{"line":625,"column":8},"end":{"line":625,"column":18}},"321":{"start":{"line":625,"column":19},"end":{"line":625,"column":35}},"322":{"start":{"line":625,"column":36},"end":{"line":625,"column":46}},"323":{"start":{"line":626,"column":8},"end":{"line":627,"column":34}},"324":{"start":{"line":627,"column":12},"end":{"line":627,"column":34}},"325":{"start":{"line":630,"column":8},"end":{"line":631,"column":33}},"326":{"start":{"line":631,"column":12},"end":{"line":631,"column":33},"skip":true},"327":{"start":{"line":633,"column":8},"end":{"line":633,"column":29}},"328":{"start":{"line":634,"column":8},"end":{"line":634,"column":18}},"329":{"start":{"line":636,"column":8},"end":{"line":636,"column":102}},"330":{"start":{"line":637,"column":8},"end":{"line":646,"column":11}},"331":{"start":{"line":640,"column":12},"end":{"line":644,"column":37}},"332":{"start":{"line":641,"column":16},"end":{"line":641,"column":43}},"333":{"start":{"line":642,"column":16},"end":{"line":642,"column":26}},"334":{"start":{"line":644,"column":16},"end":{"line":644,"column":37},"skip":true},"335":{"start":{"line":647,"column":8},"end":{"line":647,"column":27}},"336":{"start":{"line":650,"column":4},"end":{"line":675,"column":5}},"337":{"start":{"line":653,"column":8},"end":{"line":654,"column":46}},"338":{"start":{"line":654,"column":12},"end":{"line":654,"column":46},"skip":true},"339":{"start":{"line":656,"column":8},"end":{"line":656,"column":30}},"340":{"start":{"line":657,"column":8},"end":{"line":674,"column":11}},"341":{"start":{"line":658,"column":12},"end":{"line":673,"column":13}},"342":{"start":{"line":663,"column":20},"end":{"line":663,"column":57}},"343":{"start":{"line":664,"column":20},"end":{"line":664,"column":26}},"344":{"start":{"line":668,"column":20},"end":{"line":669,"column":45}},"345":{"start":{"line":669,"column":24},"end":{"line":669,"column":45},"skip":true},"346":{"start":{"line":670,"column":20},"end":{"line":670,"column":32}},"347":{"start":{"line":671,"column":20},"end":{"line":671,"column":62}},"348":{"start":{"line":672,"column":20},"end":{"line":672,"column":26}},"349":{"start":{"line":677,"column":4},"end":{"line":677,"column":14}},"350":{"start":{"line":678,"column":4},"end":{"line":729,"column":5}},"351":{"start":{"line":679,"column":8},"end":{"line":728,"column":9}},"352":{"start":{"line":684,"column":16},"end":{"line":685,"column":41}},"353":{"start":{"line":685,"column":20},"end":{"line":685,"column":41},"skip":true},"354":{"start":{"line":687,"column":16},"end":{"line":687,"column":31}},"355":{"start":{"line":688,"column":16},"end":{"line":688,"column":22}},"356":{"start":{"line":693,"column":16},"end":{"line":694,"column":41}},"357":{"start":{"line":694,"column":20},"end":{"line":694,"column":41},"skip":true},"358":{"start":{"line":696,"column":16},"end":{"line":696,"column":30}},"359":{"start":{"line":697,"column":16},"end":{"line":697,"column":22}},"360":{"start":{"line":702,"column":16},"end":{"line":703,"column":41}},"361":{"start":{"line":703,"column":20},"end":{"line":703,"column":41},"skip":true},"362":{"start":{"line":705,"column":16},"end":{"line":705,"column":30}},"363":{"start":{"line":706,"column":16},"end":{"line":706,"column":22}},"364":{"start":{"line":711,"column":16},"end":{"line":712,"column":41}},"365":{"start":{"line":712,"column":20},"end":{"line":712,"column":41},"skip":true},"366":{"start":{"line":714,"column":16},"end":{"line":714,"column":40}},"367":{"start":{"line":715,"column":16},"end":{"line":715,"column":26}},"368":{"start":{"line":716,"column":16},"end":{"line":716,"column":22}},"369":{"start":{"line":721,"column":16},"end":{"line":724,"column":17}},"370":{"start":{"line":722,"column":20},"end":{"line":722,"column":33}},"371":{"start":{"line":723,"column":20},"end":{"line":723,"column":29}},"372":{"start":{"line":727,"column":16},"end":{"line":727,"column":37},"skip":true},"373":{"start":{"line":731,"column":4},"end":{"line":731,"column":26}},"374":{"start":{"line":732,"column":4},"end":{"line":738,"column":6}}},"branchMap":{"1":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"2":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"3":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":39},"end":{"line":91,"column":70}},{"start":{"line":91,"column":73},"end":{"line":91,"column":82}}]},"4":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8},"skip":true},{"start":{"line":96,"column":8},"end":{"line":96,"column":8},"skip":true}]},"5":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":35},"end":{"line":98,"column":39},"skip":true},{"start":{"line":98,"column":43},"end":{"line":98,"column":50},"skip":true}]},"6":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":89},"end":{"line":98,"column":104},"skip":true},{"start":{"line":98,"column":107},"end":{"line":98,"column":109},"skip":true}]},"7":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":12},"skip":true},{"start":{"line":106,"column":12},"end":{"line":106,"column":12}}]},"8":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":16},"end":{"line":106,"column":41}},{"start":{"line":106,"column":45},"end":{"line":106,"column":58}}]},"9":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":17},"end":{"line":112,"column":31}},{"start":{"line":112,"column":35},"end":{"line":112,"column":48}}]},"10":{"line":118,"type":"switch","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":21}},{"start":{"line":120,"column":12},"end":{"line":122,"column":36}},{"start":{"line":123,"column":12},"end":{"line":123,"column":24}},{"start":{"line":123,"column":25},"end":{"line":124,"column":28}},{"start":{"line":125,"column":12},"end":{"line":125,"column":25}},{"start":{"line":125,"column":26},"end":{"line":126,"column":29}}]},"11":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":12}},{"start":{"line":133,"column":12},"end":{"line":133,"column":12},"skip":true}]},"12":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":16},"end":{"line":133,"column":29}},{"start":{"line":133,"column":33},"end":{"line":133,"column":54}}]},"13":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":12}},{"start":{"line":144,"column":12},"end":{"line":144,"column":12}}]},"14":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":16},"end":{"line":144,"column":29}},{"start":{"line":144,"column":34},"end":{"line":144,"column":59}},{"start":{"line":144,"column":63},"end":{"line":144,"column":76}}]},"15":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":74},"end":{"line":147,"column":89}},{"start":{"line":147,"column":92},"end":{"line":147,"column":97}}]},"16":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"17":{"line":158,"type":"switch","locations":[{"start":{"line":159,"column":12},"end":{"line":159,"column":23}},{"start":{"line":159,"column":24},"end":{"line":159,"column":35}},{"start":{"line":159,"column":36},"end":{"line":160,"column":39}},{"start":{"line":161,"column":12},"end":{"line":161,"column":23}},{"start":{"line":161,"column":24},"end":{"line":161,"column":35}},{"start":{"line":161,"column":36},"end":{"line":161,"column":47}},{"start":{"line":161,"column":48},"end":{"line":162,"column":27}},{"start":{"line":163,"column":12},"end":{"line":164,"column":25}}]},"18":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":166,"column":8}},{"start":{"line":166,"column":8},"end":{"line":166,"column":8}}]},"19":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":168,"column":8}},{"start":{"line":168,"column":8},"end":{"line":168,"column":8}}]},"20":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":8}},{"start":{"line":170,"column":8},"end":{"line":170,"column":8}}]},"21":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":8},"end":{"line":174,"column":8}},{"start":{"line":174,"column":8},"end":{"line":174,"column":8},"skip":true}]},"22":{"line":182,"type":"switch","locations":[{"start":{"line":183,"column":12},"end":{"line":183,"column":23}},{"start":{"line":183,"column":24},"end":{"line":183,"column":35}},{"start":{"line":183,"column":36},"end":{"line":184,"column":33}},{"start":{"line":185,"column":12},"end":{"line":186,"column":25}}]},"23":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":8},"skip":true},{"start":{"line":190,"column":8},"end":{"line":190,"column":8}}]},"24":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":27}},{"start":{"line":190,"column":31},"end":{"line":190,"column":54}}]},"25":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":8}},{"start":{"line":193,"column":8},"end":{"line":193,"column":8}}]},"26":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":8}},{"start":{"line":195,"column":8},"end":{"line":195,"column":8}}]},"27":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":8}},{"start":{"line":199,"column":8},"end":{"line":199,"column":8},"skip":true}]},"28":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":8},"skip":true},{"start":{"line":209,"column":8},"end":{"line":209,"column":8}}]},"29":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":8},"skip":true},{"start":{"line":215,"column":8},"end":{"line":215,"column":8}}]},"30":{"line":225,"type":"switch","locations":[{"start":{"line":226,"column":12},"end":{"line":229,"column":22}},{"start":{"line":230,"column":12},"end":{"line":231,"column":23}},{"start":{"line":233,"column":12},"end":{"line":235,"column":22}}]},"31":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":31},"end":{"line":227,"column":42}},{"start":{"line":227,"column":47},"end":{"line":227,"column":63}}]},"32":{"line":234,"type":"binary-expr","locations":[{"start":{"line":234,"column":31},"end":{"line":234,"column":38}},{"start":{"line":234,"column":43},"end":{"line":234,"column":55}}]},"33":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8},"skip":true},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"34":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":12},"end":{"line":248,"column":21}},{"start":{"line":248,"column":25},"end":{"line":248,"column":44}}]},"35":{"line":255,"type":"switch","locations":[{"start":{"line":257,"column":12},"end":{"line":260,"column":28}},{"start":{"line":262,"column":12},"end":{"line":264,"column":28}},{"start":{"line":266,"column":12},"end":{"line":268,"column":28}},{"start":{"line":270,"column":12},"end":{"line":272,"column":28}},{"start":{"line":274,"column":12},"end":{"line":276,"column":28}}]},"36":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":8},"end":{"line":283,"column":8}},{"start":{"line":283,"column":8},"end":{"line":283,"column":8}}]},"37":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":8},"end":{"line":287,"column":8}},{"start":{"line":287,"column":8},"end":{"line":287,"column":8}}]},"38":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":12},"end":{"line":293,"column":12}},{"start":{"line":293,"column":12},"end":{"line":293,"column":12}}]},"39":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":12},"end":{"line":296,"column":12}},{"start":{"line":296,"column":12},"end":{"line":296,"column":12}}]},"40":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":16},"end":{"line":296,"column":19}},{"start":{"line":296,"column":23},"end":{"line":296,"column":54}}]},"41":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":8},"end":{"line":304,"column":8},"skip":true},{"start":{"line":304,"column":8},"end":{"line":304,"column":8}}]},"42":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":12},"end":{"line":309,"column":12}},{"start":{"line":309,"column":12},"end":{"line":309,"column":12}}]},"43":{"line":312,"type":"switch","locations":[{"start":{"line":314,"column":16},"end":{"line":316,"column":26}},{"start":{"line":318,"column":16},"end":{"line":318,"column":32}},{"start":{"line":319,"column":16},"end":{"line":319,"column":32}},{"start":{"line":320,"column":16},"end":{"line":322,"column":26}},{"start":{"line":324,"column":16},"end":{"line":326,"column":26}},{"start":{"line":328,"column":16},"end":{"line":330,"column":26}},{"start":{"line":332,"column":16},"end":{"line":334,"column":26}},{"start":{"line":336,"column":16},"end":{"line":343,"column":26}}]},"44":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":31},"end":{"line":329,"column":46}},{"start":{"line":329,"column":51},"end":{"line":329,"column":71}}]},"45":{"line":333,"type":"binary-expr","locations":[{"start":{"line":333,"column":31},"end":{"line":333,"column":44}},{"start":{"line":333,"column":49},"end":{"line":333,"column":67}}]},"46":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":20},"end":{"line":338,"column":20},"skip":true},{"start":{"line":338,"column":20},"end":{"line":338,"column":20}}]},"47":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":24},"end":{"line":338,"column":33}},{"start":{"line":338,"column":37},"end":{"line":338,"column":59}}]},"48":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":8},"end":{"line":351,"column":8}},{"start":{"line":351,"column":8},"end":{"line":351,"column":8}}]},"49":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":8},"end":{"line":357,"column":8},"skip":true},{"start":{"line":357,"column":8},"end":{"line":357,"column":8}}]},"50":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":8},"end":{"line":363,"column":8},"skip":true},{"start":{"line":363,"column":8},"end":{"line":363,"column":8}}]},"51":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":12},"end":{"line":373,"column":12}},{"start":{"line":373,"column":12},"end":{"line":373,"column":12},"skip":true}]},"52":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":8},"end":{"line":388,"column":8}},{"start":{"line":388,"column":8},"end":{"line":388,"column":8}}]},"53":{"line":388,"type":"binary-expr","locations":[{"start":{"line":388,"column":12},"end":{"line":388,"column":21}},{"start":{"line":388,"column":25},"end":{"line":388,"column":39}}]},"54":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":8},"end":{"line":396,"column":8},"skip":true},{"start":{"line":396,"column":8},"end":{"line":396,"column":8}}]},"55":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":8},"end":{"line":400,"column":8}},{"start":{"line":400,"column":8},"end":{"line":400,"column":8}}]},"56":{"line":409,"type":"switch","locations":[{"start":{"line":411,"column":16},"end":{"line":414,"column":26}},{"start":{"line":416,"column":16},"end":{"line":416,"column":32}},{"start":{"line":417,"column":16},"end":{"line":417,"column":32}},{"start":{"line":418,"column":16},"end":{"line":420,"column":26}},{"start":{"line":423,"column":16},"end":{"line":424,"column":41},"skip":true}]},"57":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":8},"end":{"line":436,"column":8},"skip":true},{"start":{"line":436,"column":8},"end":{"line":436,"column":8}}]},"58":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":8},"end":{"line":443,"column":8},"skip":true},{"start":{"line":443,"column":8},"end":{"line":443,"column":8}}]},"59":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":8},"end":{"line":450,"column":8},"skip":true},{"start":{"line":450,"column":8},"end":{"line":450,"column":8}}]},"60":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":12},"end":{"line":458,"column":12}},{"start":{"line":458,"column":12},"end":{"line":458,"column":12},"skip":true}]},"61":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":8},"end":{"line":473,"column":8},"skip":true},{"start":{"line":473,"column":8},"end":{"line":473,"column":8}}]},"62":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":12},"end":{"line":478,"column":12}},{"start":{"line":478,"column":12},"end":{"line":478,"column":12}}]},"63":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":8},"end":{"line":492,"column":8},"skip":true},{"start":{"line":492,"column":8},"end":{"line":492,"column":8}}]},"64":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":12},"end":{"line":497,"column":12}},{"start":{"line":497,"column":12},"end":{"line":497,"column":12}}]},"65":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":8},"end":{"line":509,"column":8},"skip":true},{"start":{"line":509,"column":8},"end":{"line":509,"column":8}}]},"66":{"line":518,"type":"if","locations":[{"start":{"line":518,"column":12},"end":{"line":518,"column":12}},{"start":{"line":518,"column":12},"end":{"line":518,"column":12},"skip":true}]},"67":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":8},"end":{"line":534,"column":8},"skip":true},{"start":{"line":534,"column":8},"end":{"line":534,"column":8}}]},"68":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":8},"end":{"line":538,"column":8}},{"start":{"line":538,"column":8},"end":{"line":538,"column":8}}]},"69":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":12},"end":{"line":542,"column":12}},{"start":{"line":542,"column":12},"end":{"line":542,"column":12}}]},"70":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":8},"end":{"line":552,"column":8}},{"start":{"line":552,"column":8},"end":{"line":552,"column":8}}]},"71":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":16},"end":{"line":555,"column":16},"skip":true},{"start":{"line":555,"column":16},"end":{"line":555,"column":16}}]},"72":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":16},"end":{"line":558,"column":16}},{"start":{"line":558,"column":16},"end":{"line":558,"column":16}}]},"73":{"line":571,"type":"if","locations":[{"start":{"line":571,"column":8},"end":{"line":571,"column":8}},{"start":{"line":571,"column":8},"end":{"line":571,"column":8}}]},"74":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":8},"end":{"line":576,"column":8}},{"start":{"line":576,"column":8},"end":{"line":576,"column":8}}]},"75":{"line":588,"type":"if","locations":[{"start":{"line":588,"column":8},"end":{"line":588,"column":8},"skip":true},{"start":{"line":588,"column":8},"end":{"line":588,"column":8}}]},"76":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":12},"end":{"line":593,"column":12}},{"start":{"line":593,"column":12},"end":{"line":593,"column":12}}]},"77":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":12},"end":{"line":597,"column":12}},{"start":{"line":597,"column":12},"end":{"line":597,"column":12},"skip":true}]},"78":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":8},"end":{"line":609,"column":8},"skip":true},{"start":{"line":609,"column":8},"end":{"line":609,"column":8}}]},"79":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":8},"end":{"line":617,"column":8}},{"start":{"line":617,"column":8},"end":{"line":617,"column":8}}]},"80":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":8},"end":{"line":621,"column":8},"skip":true},{"start":{"line":621,"column":8},"end":{"line":621,"column":8}}]},"81":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":8},"end":{"line":626,"column":8}},{"start":{"line":626,"column":8},"end":{"line":626,"column":8}}]},"82":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":8},"end":{"line":630,"column":8},"skip":true},{"start":{"line":630,"column":8},"end":{"line":630,"column":8}}]},"83":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":12},"end":{"line":640,"column":12}},{"start":{"line":640,"column":12},"end":{"line":640,"column":12},"skip":true}]},"84":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":8},"end":{"line":653,"column":8},"skip":true},{"start":{"line":653,"column":8},"end":{"line":653,"column":8}}]},"85":{"line":658,"type":"switch","locations":[{"start":{"line":660,"column":16},"end":{"line":660,"column":32}},{"start":{"line":661,"column":16},"end":{"line":661,"column":32}},{"start":{"line":662,"column":16},"end":{"line":664,"column":26}},{"start":{"line":666,"column":16},"end":{"line":672,"column":26}}]},"86":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":20},"end":{"line":668,"column":20},"skip":true},{"start":{"line":668,"column":20},"end":{"line":668,"column":20}}]},"87":{"line":668,"type":"binary-expr","locations":[{"start":{"line":668,"column":24},"end":{"line":668,"column":33}},{"start":{"line":668,"column":37},"end":{"line":668,"column":59}}]},"88":{"line":679,"type":"switch","locations":[{"start":{"line":681,"column":12},"end":{"line":688,"column":22}},{"start":{"line":690,"column":12},"end":{"line":697,"column":22}},{"start":{"line":699,"column":12},"end":{"line":706,"column":22}},{"start":{"line":708,"column":12},"end":{"line":716,"column":22}},{"start":{"line":718,"column":12},"end":{"line":727,"column":37}}]},"89":{"line":684,"type":"if","locations":[{"start":{"line":684,"column":16},"end":{"line":684,"column":16},"skip":true},{"start":{"line":684,"column":16},"end":{"line":684,"column":16}}]},"90":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":16},"end":{"line":693,"column":16},"skip":true},{"start":{"line":693,"column":16},"end":{"line":693,"column":16}}]},"91":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":16},"end":{"line":702,"column":16},"skip":true},{"start":{"line":702,"column":16},"end":{"line":702,"column":16}}]},"92":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":16},"end":{"line":711,"column":16},"skip":true},{"start":{"line":711,"column":16},"end":{"line":711,"column":16}}]},"93":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":16},"end":{"line":721,"column":16}},{"start":{"line":721,"column":16},"end":{"line":721,"column":16},"skip":true}]}},"code":["\"use strict\";","module.exports = parse;","","parse.filename = null;","parse.defaults = { keepCase: false };","","var tokenize  = require(\"./tokenize\"),","    Root      = require(\"./root\"),","    Type      = require(\"./type\"),","    Field     = require(\"./field\"),","    MapField  = require(\"./mapfield\"),","    OneOf     = require(\"./oneof\"),","    Enum      = require(\"./enum\"),","    Service   = require(\"./service\"),","    Method    = require(\"./method\"),","    types     = require(\"./types\"),","    util      = require(\"./util\");","","var base10Re    = /^[1-9][0-9]*$/,","    base10NegRe = /^-?[1-9][0-9]*$/,","    base16Re    = /^0[x][0-9a-fA-F]+$/,","    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,","    base8Re     = /^0[0-7]+$/,","    base8NegRe  = /^-?0[0-7]+$/,","    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,","    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,","    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,","    fqTypeRefRe = /^(?:\\.[a-zA-Z][a-zA-Z_0-9]*)+$/;","","var camelCaseRe = /_([a-z])/g;","","function camelCase(str) {","    return str.substring(0,1)","         + str.substring(1)","               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });","}","","/**"," * Result object returned from {@link parse}."," * @typedef ParserResult"," * @type {Object.<string,*>}"," * @property {string|undefined} package Package name, if declared"," * @property {string[]|undefined} imports Imports, if any"," * @property {string[]|undefined} weakImports Weak imports, if any"," * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)"," * @property {Root} root Populated root instance"," */","","/**"," * Options modifying the behavior of {@link parse}."," * @typedef ParseOptions"," * @type {Object.<string,*>}"," * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case"," */","","/**"," * Parses the given .proto source and returns an object with the parsed contents."," * @function"," * @param {string} source Source contents"," * @param {Root} root Root to populate"," * @param {ParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted."," * @returns {ParserResult} Parser result"," * @property {string} filename=null Currently processing file name for error reporting, if known"," * @property {ParseOptions} defaults Default {@link ParseOptions}"," */","function parse(source, root, options) {","    /* eslint-disable callback-return */","    if (!(root instanceof Root)) {","        options = root;","        root = new Root();","    }","    if (!options)","        options = parse.defaults;","","    var tn = tokenize(source),","        next = tn.next,","        push = tn.push,","        peek = tn.peek,","        skip = tn.skip,","        cmnt = tn.cmnt;","","    var head = true,","        pkg,","        imports,","        weakImports,","        syntax,","        isProto3 = false;","","    var ptr = root;","","    var applyCase = options.keepCase ? function(name) { return name; } : camelCase;","","    /* istanbul ignore next */","    function illegal(token, name, insideTryCatch) {","        var filename = parse.filename;","        if (!insideTryCatch)","            parse.filename = null;","        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line() + \")\");","    }","","    function readString() {","        var values = [],","            token;","        do {","            /* istanbul ignore if */","            if ((token = next()) !== \"\\\"\" && token !== \"'\")","                throw illegal(token);","","            values.push(next());","            skip(token);","            token = peek();","        } while (token === \"\\\"\" || token === \"'\");","        return values.join(\"\");","    }","","    function readValue(acceptTypeRef) {","        var token = next();","        switch (token) {","            case \"'\":","            case \"\\\"\":","                push(token);","                return readString();","            case \"true\": case \"TRUE\":","                return true;","            case \"false\": case \"FALSE\":","                return false;","        }","        try {","            return parseNumber(token, /* insideTryCatch */ true);","        } catch (e) {","","            /* istanbul ignore else */","            if (acceptTypeRef && typeRefRe.test(token))","                return token;","","            /* istanbul ignore next */","            throw illegal(token, \"value\");","        }","    }","","    function readRanges(target, acceptStrings) {","        var token, start;","        do {","            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))","                target.push(readString());","            else","                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);","        } while (skip(\",\", true));","        skip(\";\");","    }","","    function parseNumber(token, insideTryCatch) {","        var sign = 1;","        if (token.charAt(0) === \"-\") {","            sign = -1;","            token = token.substring(1);","        }","        switch (token) {","            case \"inf\": case \"INF\": case \"Inf\":","                return sign * Infinity;","            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":","                return NaN;","            case \"0\":","                return 0;","        }","        if (base10Re.test(token))","            return sign * parseInt(token, 10);","        if (base16Re.test(token))","            return sign * parseInt(token, 16);","        if (base8Re.test(token))","            return sign * parseInt(token, 8);","","        /* istanbul ignore else */","        if (numberRe.test(token))","            return sign * parseFloat(token);","","        /* istanbul ignore next */","        throw illegal(token, \"number\", insideTryCatch);","    }","","    function parseId(token, acceptNegative) {","        switch (token) {","            case \"max\": case \"MAX\": case \"Max\":","                return 536870911;","            case \"0\":","                return 0;","        }","","        /* istanbul ignore if */","        if (!acceptNegative && token.charAt(0) === \"-\")","            throw illegal(token, \"id\");","","        if (base10NegRe.test(token))","            return parseInt(token, 10);","        if (base16NegRe.test(token))","            return parseInt(token, 16);","","        /* istanbul ignore else */","        if (base8NegRe.test(token))","            return parseInt(token, 8);","","        /* istanbul ignore next */","        throw illegal(token, \"id\");","    }","","    function parsePackage() {","","        /* istanbul ignore if */","        if (pkg !== undefined)","            throw illegal(\"package\");","","        pkg = next();","","        /* istanbul ignore if */","        if (!typeRefRe.test(pkg))","            throw illegal(pkg, \"name\");","","        ptr = ptr.define(pkg);","        skip(\";\");","    }","","    function parseImport() {","        var token = peek();","        var whichImports;","        switch (token) {","            case \"weak\":","                whichImports = weakImports || (weakImports = []);","                next();","                break;","            case \"public\":","                next();","                // eslint-disable-line no-fallthrough","            default:","                whichImports = imports || (imports = []);","                break;","        }","        token = readString();","        skip(\";\");","        whichImports.push(token);","    }","","    function parseSyntax() {","        skip(\"=\");","        syntax = readString();","        isProto3 = syntax === \"proto3\";","","        /* istanbul ignore if */","        if (!isProto3 && syntax !== \"proto2\")","            throw illegal(syntax, \"syntax\");","","        skip(\";\");","    }","","    function parseCommon(parent, token) {","        switch (token) {","","            case \"option\":","                parseOption(parent, token);","                skip(\";\");","                return true;","","            case \"message\":","                parseType(parent, token);","                return true;","","            case \"enum\":","                parseEnum(parent, token);","                return true;","","            case \"service\":","                parseService(parent, token);","                return true;","","            case \"extend\":","                parseExtension(parent, token);","                return true;","        }","        return false;","    }","","    function ifBlock(obj, fnIf, fnElse) {","        var trailingLine = tn.line();","        if (obj) {","            obj.comment = cmnt(); // try block-type comment","            obj.filename = parse.filename;","        }","        if (skip(\"{\", true)) {","            var token;","            while ((token = next()) !== \"}\")","                fnIf(token);","            skip(\";\", true);","        } else {","            if (fnElse)","                fnElse();","            skip(\";\");","            if (obj && typeof obj.comment !== \"string\")","                obj.comment = cmnt(trailingLine); // try line-type comment if no block","        }","    }","","    function parseType(parent, token) {","","        /* istanbul ignore if */","        if (!nameRe.test(token = next()))","            throw illegal(token, \"type name\");","","        var type = new Type(token);","        ifBlock(type, function parseType_block(token) {","            if (parseCommon(type, token))","                return;","","            switch (token) {","","                case \"map\":","                    parseMapField(type, token);","                    break;","","                case \"required\":","                case \"optional\":","                case \"repeated\":","                    parseField(type, token);","                    break;","","                case \"oneof\":","                    parseOneOf(type, token);","                    break;","","                case \"extensions\":","                    readRanges(type.extensions || (type.extensions = []));","                    break;","","                case \"reserved\":","                    readRanges(type.reserved || (type.reserved = []), true);","                    break;","","                default:","                    /* istanbul ignore if */","                    if (!isProto3 || !typeRefRe.test(token))","                        throw illegal(token);","","                    push(token);","                    parseField(type, \"optional\");","                    break;","            }","        });","        parent.add(type);","    }","","    function parseField(parent, rule, extend) {","        var type = next();","        if (type === \"group\") {","            parseGroup(parent, rule);","            return;","        }","","        /* istanbul ignore if */","        if (!typeRefRe.test(type))","            throw illegal(type, \"type\");","","        var name = next();","","        /* istanbul ignore if */","        if (!nameRe.test(name))","            throw illegal(name, \"name\");","","        name = applyCase(name);","        skip(\"=\");","","        var field = new Field(name, parseId(next()), type, rule, extend);","        ifBlock(field, function parseField_block(token) {","","            /* istanbul ignore else */","            if (token === \"option\") {","                parseOption(field, token);","                skip(\";\");","            } else","                throw illegal(token);","","        }, function parseField_line() {","            parseInlineOptions(field);","        });","        parent.add(field);","","        // JSON defaults to packed=true if not set so we have to set packed=false explicity when","        // parsing proto2 descriptors without the option, where applicable. This must be done for","        // any type (not just packable types) because enums also use varint encoding and it is not","        // yet known whether a type is an enum or not.","        if (!isProto3 && field.repeated)","            field.setOption(\"packed\", false, /* ifNotSet */ true);","    }","","    function parseGroup(parent, rule) {","        var name = next();","","        /* istanbul ignore if */","        if (!nameRe.test(name))","            throw illegal(name, \"name\");","","        var fieldName = util.lcFirst(name);","        if (name === fieldName)","            name = util.ucFirst(name);","        skip(\"=\");","        var id = parseId(next());","        var type = new Type(name);","        type.group = true;","        var field = new Field(fieldName, id, name, rule);","        field.filename = parse.filename;","        ifBlock(type, function parseGroup_block(token) {","            switch (token) {","","                case \"option\":","                    parseOption(type, token);","                    skip(\";\");","                    break;","","                case \"required\":","                case \"optional\":","                case \"repeated\":","                    parseField(type, token);","                    break;","","                /* istanbul ignore next */","                default:","                    throw illegal(token); // there are no groups with proto3 semantics","            }","        });","        parent.add(type)","              .add(field);","    }","","    function parseMapField(parent) {","        skip(\"<\");","        var keyType = next();","","        /* istanbul ignore if */","        if (types.mapKey[keyType] === undefined)","            throw illegal(keyType, \"type\");","","        skip(\",\");","        var valueType = next();","","        /* istanbul ignore if */","        if (!typeRefRe.test(valueType))","            throw illegal(valueType, \"type\");","","        skip(\">\");","        var name = next();","","        /* istanbul ignore if */","        if (!nameRe.test(name))","            throw illegal(name, \"name\");","","        skip(\"=\");","        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);","        ifBlock(field, function parseMapField_block(token) {","","            /* istanbul ignore else */","            if (token === \"option\") {","                parseOption(field, token);","                skip(\";\");","            } else","                throw illegal(token);","","        }, function parseMapField_line() {","            parseInlineOptions(field);","        });","        parent.add(field);","    }","","    function parseOneOf(parent, token) {","","        /* istanbul ignore if */","        if (!nameRe.test(token = next()))","            throw illegal(token, \"name\");","","        var oneof = new OneOf(applyCase(token));","        ifBlock(oneof, function parseOneOf_block(token) {","            if (token === \"option\") {","                parseOption(oneof, token);","                skip(\";\");","            } else {","                push(token);","                parseField(oneof, \"optional\");","            }","        });","        parent.add(oneof);","    }","","    function parseEnum(parent, token) {","","        /* istanbul ignore if */","        if (!nameRe.test(token = next()))","            throw illegal(token, \"name\");","","        var enm = new Enum(token);","        ifBlock(enm, function parseEnum_block(token) {","            if (token === \"option\") {","                parseOption(enm, token);","                skip(\";\");","            } else","                parseEnumValue(enm, token);","        });","        parent.add(enm);","    }","","    function parseEnumValue(parent, token) {","","        /* istanbul ignore if */","        if (!nameRe.test(token))","            throw illegal(token, \"name\");","","        skip(\"=\");","        var value = parseId(next(), true),","            dummy = {};","        ifBlock(dummy, function parseEnumValue_block(token) {","","            /* istanbul ignore else */","            if (token === \"option\") {","                parseOption(dummy, token); // skip","                skip(\";\");","            } else","                throw illegal(token);","","        }, function parseEnumValue_line() {","            parseInlineOptions(dummy); // skip","        });","        parent.add(token, value, dummy.comment);","    }","","    function parseOption(parent, token) {","        var isCustom = skip(\"(\", true);","","        /* istanbul ignore if */","        if (!typeRefRe.test(token = next()))","            throw illegal(token, \"name\");","","        var name = token;","        if (isCustom) {","            skip(\")\");","            name = \"(\" + name + \")\";","            token = peek();","            if (fqTypeRefRe.test(token)) {","                name += token;","                next();","            }","        }","        skip(\"=\");","        parseOptionValue(parent, name);","    }","","    function parseOptionValue(parent, name) {","        if (skip(\"{\", true)) { // { a: \"foo\" b { c: \"bar\" } }","            do {","                /* istanbul ignore if */","                if (!nameRe.test(token = next()))","                    throw illegal(token, \"name\");","","                if (peek() === \"{\")","                    parseOptionValue(parent, name + \".\" + token);","                else {","                    skip(\":\");","                    setOption(parent, name + \".\" + token, readValue(true));","                }","            } while (!skip(\"}\", true));","        } else","            setOption(parent, name, readValue(true));","        // Does not enforce a delimiter to be universal","    }","","    function setOption(parent, name, value) {","        if (parent.setOption)","            parent.setOption(name, value);","    }","","    function parseInlineOptions(parent) {","        if (skip(\"[\", true)) {","            do {","                parseOption(parent, \"option\");","            } while (skip(\",\", true));","            skip(\"]\");","        }","        return parent;","    }","","    function parseService(parent, token) {","","        /* istanbul ignore if */","        if (!nameRe.test(token = next()))","            throw illegal(token, \"service name\");","","        var service = new Service(token);","        ifBlock(service, function parseService_block(token) {","            if (parseCommon(service, token))","                return;","","            /* istanbul ignore else */","            if (token === \"rpc\")","                parseMethod(service, token);","            else","                throw illegal(token);","        });","        parent.add(service);","    }","","    function parseMethod(parent, token) {","        var type = token;","","        /* istanbul ignore if */","        if (!nameRe.test(token = next()))","            throw illegal(token, \"name\");","","        var name = token,","            requestType, requestStream,","            responseType, responseStream;","","        skip(\"(\");","        if (skip(\"stream\", true))","            requestStream = true;","","        /* istanbul ignore if */","        if (!typeRefRe.test(token = next()))","            throw illegal(token);","","        requestType = token;","        skip(\")\"); skip(\"returns\"); skip(\"(\");","        if (skip(\"stream\", true))","            responseStream = true;","","        /* istanbul ignore if */","        if (!typeRefRe.test(token = next()))","            throw illegal(token);","","        responseType = token;","        skip(\")\");","","        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);","        ifBlock(method, function parseMethod_block(token) {","","            /* istanbul ignore else */","            if (token === \"option\") {","                parseOption(method, token);","                skip(\";\");","            } else","                throw illegal(token);","","        });","        parent.add(method);","    }","","    function parseExtension(parent, token) {","","        /* istanbul ignore if */","        if (!typeRefRe.test(token = next()))","            throw illegal(token, \"reference\");","","        var reference = token;","        ifBlock(null, function parseExtension_block(token) {","            switch (token) {","","                case \"required\":","                case \"repeated\":","                case \"optional\":","                    parseField(parent, token, reference);","                    break;","","                default:","                    /* istanbul ignore if */","                    if (!isProto3 || !typeRefRe.test(token))","                        throw illegal(token);","                    push(token);","                    parseField(parent, \"optional\", reference);","                    break;","            }","        });","    }","","    var token;","    while ((token = next()) !== null) {","        switch (token) {","","            case \"package\":","","                /* istanbul ignore if */","                if (!head)","                    throw illegal(token);","","                parsePackage();","                break;","","            case \"import\":","","                /* istanbul ignore if */","                if (!head)","                    throw illegal(token);","","                parseImport();","                break;","","            case \"syntax\":","","                /* istanbul ignore if */","                if (!head)","                    throw illegal(token);","","                parseSyntax();","                break;","","            case \"option\":","","                /* istanbul ignore if */","                if (!head)","                    throw illegal(token);","","                parseOption(ptr, token);","                skip(\";\");","                break;","","            default:","","                /* istanbul ignore else */","                if (parseCommon(ptr, token)) {","                    head = false;","                    continue;","                }","","                /* istanbul ignore next */","                throw illegal(token);","        }","    }","","    parse.filename = null;","    return {","        \"package\"     : pkg,","        \"imports\"     : imports,","         weakImports  : weakImports,","         syntax       : syntax,","         root         : root","    };","}","","/**"," * Parses the given .proto source and returns an object with the parsed contents."," * @name parse"," * @function"," * @param {string} source Source contents"," * @param {ParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted."," * @returns {ParserResult} Parser result"," * @property {string} filename=null Currently processing file name for error reporting, if known"," * @property {ParseOptions} defaults Default {@link ParseOptions}"," * @variation 2"," */",""],"l":{"2":1,"4":1,"5":1,"7":1,"19":1,"30":1,"32":1,"33":0,"35":0,"66":1,"68":0,"69":0,"70":0,"72":0,"73":0,"75":0,"82":0,"89":0,"91":0,"94":1,"95":1,"96":1,"97":1,"98":1,"101":1,"102":0,"104":0,"106":0,"107":1,"109":0,"110":0,"111":0,"113":0,"116":1,"117":0,"118":0,"121":0,"122":0,"124":0,"126":0,"128":0,"129":0,"133":0,"134":0,"137":1,"141":1,"142":0,"143":0,"144":0,"145":0,"147":0,"149":0,"152":1,"153":0,"154":0,"155":0,"156":0,"158":0,"160":0,"162":0,"164":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"174":0,"175":0,"178":1,"181":1,"182":0,"184":0,"186":0,"190":0,"191":1,"193":0,"194":0,"195":0,"196":0,"199":0,"200":0,"203":1,"206":1,"209":0,"210":1,"212":0,"215":0,"216":1,"218":0,"219":0,"222":1,"223":0,"224":0,"225":0,"227":0,"228":0,"229":0,"231":0,"234":0,"235":0,"237":0,"238":0,"239":0,"242":1,"243":0,"244":0,"245":0,"248":0,"249":1,"251":0,"254":1,"255":0,"258":0,"259":0,"260":0,"263":0,"264":0,"267":0,"268":0,"271":0,"272":0,"275":0,"276":0,"278":0,"281":1,"282":0,"283":0,"284":0,"285":0,"287":0,"288":0,"289":0,"290":0,"291":0,"293":0,"294":0,"295":0,"296":0,"297":0,"301":1,"304":0,"305":1,"307":0,"308":0,"309":0,"310":0,"312":0,"315":0,"316":0,"321":0,"322":0,"325":0,"326":0,"329":0,"330":0,"333":0,"334":0,"338":0,"339":1,"341":0,"342":0,"343":0,"346":0,"349":1,"350":0,"351":0,"352":0,"353":0,"357":0,"358":1,"360":0,"363":0,"364":1,"366":0,"367":0,"369":0,"370":0,"373":0,"374":0,"375":0,"377":1,"380":0,"382":0,"388":0,"389":0,"392":1,"393":0,"396":0,"397":1,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"412":0,"413":0,"414":0,"419":0,"420":0,"424":1,"427":0,"431":1,"432":0,"433":0,"436":0,"437":1,"439":0,"440":0,"443":0,"444":1,"446":0,"447":0,"450":0,"451":1,"453":0,"454":0,"455":0,"458":0,"459":0,"460":0,"462":1,"465":0,"467":0,"470":1,"473":0,"474":1,"476":0,"477":0,"478":0,"479":0,"480":0,"482":0,"483":0,"486":0,"489":1,"492":0,"493":1,"495":0,"496":0,"497":0,"498":0,"499":0,"501":0,"503":0,"506":1,"509":0,"510":1,"512":0,"513":0,"515":0,"518":0,"519":0,"520":0,"522":1,"525":0,"527":0,"530":1,"531":0,"534":0,"535":1,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"547":0,"548":0,"551":1,"552":0,"553":0,"555":0,"556":1,"558":0,"559":0,"561":0,"562":0,"566":0,"570":1,"571":0,"572":0,"575":1,"576":0,"577":0,"578":0,"580":0,"582":0,"585":1,"588":0,"589":1,"591":0,"592":0,"593":0,"594":0,"597":0,"598":0,"600":1,"602":0,"605":1,"606":0,"609":0,"610":1,"612":0,"616":0,"617":0,"618":0,"621":0,"622":1,"624":0,"625":0,"626":0,"627":0,"630":0,"631":1,"633":0,"634":0,"636":0,"637":0,"640":0,"641":0,"642":0,"644":1,"647":0,"650":1,"653":0,"654":1,"656":0,"657":0,"658":0,"663":0,"664":0,"668":0,"669":1,"670":0,"671":0,"672":0,"677":0,"678":0,"679":0,"684":0,"685":1,"687":0,"688":0,"693":0,"694":1,"696":0,"697":0,"702":0,"703":1,"705":0,"706":0,"711":0,"712":1,"714":0,"715":0,"716":0,"721":0,"722":0,"723":0,"727":1,"731":0,"732":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/common.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/common.js","s":{"1":1,"2":1,"3":6,"4":6,"5":6,"6":6,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{"1":[6,0]},"f":{"1":6},"fnMap":{"1":{"name":"common","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":24}},"2":{"start":{"line":23,"column":0},"end":{"line":29,"column":1}},"3":{"start":{"line":24,"column":4},"end":{"line":27,"column":5}},"4":{"start":{"line":25,"column":8},"end":{"line":25,"column":52}},"5":{"start":{"line":26,"column":8},"end":{"line":26,"column":82}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":24}},"7":{"start":{"line":31,"column":0},"end":{"line":31,"column":23}},"8":{"start":{"line":43,"column":0},"end":{"line":56,"column":3}},"9":{"start":{"line":58,"column":0},"end":{"line":58,"column":13}},"10":{"start":{"line":60,"column":0},"end":{"line":73,"column":3}},"11":{"start":{"line":75,"column":0},"end":{"line":77,"column":3}},"12":{"start":{"line":79,"column":0},"end":{"line":83,"column":3}},"13":{"start":{"line":85,"column":0},"end":{"line":149,"column":3}},"14":{"start":{"line":151,"column":0},"end":{"line":224,"column":3}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]}},"code":["\"use strict\";","module.exports = common;","","/**"," * Provides common type definitions."," * Can also be used to provide additional google types or your own custom types."," * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name"," * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition"," * @returns {undefined}"," * @property {Object.<string,*>} google/protobuf/any.proto Any"," * @property {Object.<string,*>} google/protobuf/duration.proto Duration"," * @property {Object.<string,*>} google/protobuf/empty.proto Empty"," * @property {Object.<string,*>} google/protobuf/struct.proto Struct, Value, NullValue and ListValue"," * @property {Object.<string,*>} google/protobuf/timestamp.proto Timestamp"," * @property {Object.<string,*>} google/protobuf/wrappers.proto Wrappers"," * @example"," * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)"," * protobuf.common(\"descriptor\", descriptorJson);"," *"," * // manually provides a custom definition (uses my.foo namespace)"," * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);"," */","function common(name, json) {","    if (!commonRe.test(name)) {","        name = \"google/protobuf/\" + name + \".proto\";","        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };","    }","    common[name] = json;","}","","var commonRe = /\\/|\\./;","","// Not provided because of limited use (feel free to discuss or to provide yourself):","//","// google/protobuf/descriptor.proto","// google/protobuf/field_mask.proto","// google/protobuf/source_context.proto","// google/protobuf/type.proto","//","// Stripped and pre-parsed versions of these non-bundled files are instead available as part of","// the repository or package within the google/protobuf directory.","","common(\"any\", {","    Any: {","        fields: {","            type_url: {","                type: \"string\",","                id: 1","            },","            value: {","                type: \"bytes\",","                id: 2","            }","        }","    }","});","","var timeType;","","common(\"duration\", {","    Duration: timeType = {","        fields: {","            seconds: {","                type: \"int64\",","                id: 1","            },","            nanos: {","                type: \"int32\",","                id: 2","            }","        }","    }","});","","common(\"timestamp\", {","    Timestamp: timeType","});","","common(\"empty\", {","    Empty: {","        fields: {}","    }","});","","common(\"struct\", {","    Struct: {","        fields: {","            fields: {","                keyType: \"string\",","                type: \"Value\",","                id: 1","            }","        }","    },","    Value: {","        oneofs: {","            kind: {","                oneof: [","                    \"nullValue\",","                    \"numberValue\",","                    \"stringValue\",","                    \"boolValue\",","                    \"structValue\",","                    \"listValue\"","                ]","            }","        },","        fields: {","            nullValue: {","                type: \"NullValue\",","                id: 1","            },","            numberValue: {","                type: \"double\",","                id: 2","            },","            stringValue: {","                type: \"string\",","                id: 3","            },","            boolValue: {","                type: \"bool\",","                id: 4","            },","            structValue: {","                type: \"Struct\",","                id: 5","            },","            listValue: {","                type: \"ListValue\",","                id: 6","            }","        }","    },","    NullValue: {","        values: {","            NULL_VALUE: 0","        }","    },","    ListValue: {","        fields: {","            values: {","                rule: \"repeated\",","                type: \"Value\",","                id: 1","            }","        }","    }","});","","common(\"wrappers\", {","    DoubleValue: {","        fields: {","            value: {","                type: \"double\",","                id: 1","            }","        }","    },","    FloatValue: {","        fields: {","            value: {","                type: \"float\",","                id: 1","            }","        }","    },","    Int64Value: {","        fields: {","            value: {","                type: \"int64\",","                id: 1","            }","        }","    },","    UInt64Value: {","        fields: {","            value: {","                type: \"uint64\",","                id: 1","            }","        }","    },","    Int32Value: {","        fields: {","            value: {","                type: \"int32\",","                id: 1","            }","        }","    },","    UInt32Value: {","        fields: {","            value: {","                type: \"uint32\",","                id: 1","            }","        }","    },","    BoolValue: {","        fields: {","            value: {","                type: \"bool\",","                id: 1","            }","        }","    },","    StringValue: {","        fields: {","            value: {","                type: \"string\",","                id: 1","            }","        }","    },","    BytesValue: {","        fields: {","            value: {","                type: \"bytes\",","                id: 1","            }","        }","    }","});",""],"l":{"2":1,"23":1,"24":6,"25":6,"26":6,"28":6,"31":1,"43":1,"58":1,"60":1,"75":1,"79":1,"85":1,"151":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/bench/suite.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/bench/suite.js","s":{"1":2,"2":2,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"newSuite","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":24}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":31}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":28}}},"4":{"name":"(anonymous_4)","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":33}}},"5":{"name":"(anonymous_5)","line":21,"loc":{"start":{"line":21,"column":20},"end":{"line":21,"column":31}}},"6":{"name":"(anonymous_6)","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":40}}},"7":{"name":"(anonymous_7)","line":27,"loc":{"start":{"line":27,"column":37},"end":{"line":27,"column":53}}},"8":{"name":"getHz","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":22}}},"9":{"name":"pad","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":26}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":5,"column":33}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":17}},"4":{"start":{"line":9,"column":0},"end":{"line":35,"column":1}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":21}},"6":{"start":{"line":11,"column":4},"end":{"line":34,"column":7}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":35}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":101}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":58}},"10":{"start":{"line":22,"column":8},"end":{"line":32,"column":9}},"11":{"start":{"line":23,"column":12},"end":{"line":23,"column":73}},"12":{"start":{"line":23,"column":42},"end":{"line":23,"column":69}},"13":{"start":{"line":24,"column":12},"end":{"line":25,"column":43}},"14":{"start":{"line":26,"column":12},"end":{"line":26,"column":123}},"15":{"start":{"line":27,"column":12},"end":{"line":31,"column":15}},"16":{"start":{"line":28,"column":16},"end":{"line":28,"column":38}},"17":{"start":{"line":29,"column":16},"end":{"line":29,"column":49}},"18":{"start":{"line":30,"column":16},"end":{"line":30,"column":199}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":35}},"20":{"start":{"line":37,"column":0},"end":{"line":39,"column":1}},"21":{"start":{"line":38,"column":4},"end":{"line":38,"column":52}},"22":{"start":{"line":41,"column":0},"end":{"line":45,"column":1}},"23":{"start":{"line":42,"column":4},"end":{"line":43,"column":40}},"24":{"start":{"line":43,"column":8},"end":{"line":43,"column":40}},"25":{"start":{"line":44,"column":4},"end":{"line":44,"column":15}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]},"2":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":18},"end":{"line":43,"column":27}},{"start":{"line":43,"column":30},"end":{"line":43,"column":39}}]}},"code":["\"use strict\";","module.exports = newSuite;","","var benchmark = require(\"benchmark\"),","    chalk     = require(\"chalk\");","","var padSize = 23;","","function newSuite(name) {","    var benches = [];","    return new benchmark.Suite(name)","    .on(\"add\", function(event) {","        benches.push(event.target);","    })","    .on(\"start\", function() {","        process.stdout.write(chalk.white.bold(\"benchmarking \" + name + \" performance ...\") + \"\\n\\n\");","    })","    .on(\"cycle\", function(event) {","        process.stdout.write(String(event.target) + \"\\n\");","    })","    .on(\"complete\", function() {","        if (benches.length > 1) {","            benches.sort(function(a, b) { return getHz(b) - getHz(a); });","            var fastest   = benches[0],","                fastestHz = getHz(fastest);","            process.stdout.write(\"\\n\" + chalk.white(pad(fastest.name, padSize)) + \" was \" + chalk.green(\"fastest\") + \"\\n\");","            benches.slice(1).forEach(function(bench) {","                var hz = getHz(bench);","                var percent = 1 - hz / fastestHz;","                process.stdout.write(chalk.white(pad(bench.name, padSize)) + \" was \" + chalk.red((percent * 100).toFixed(1) + \"% ops/sec slower (factor \" + (fastestHz / hz).toFixed(1) + \")\") + \"\\n\");","            });","        }","        process.stdout.write(\"\\n\");","    });","}","","function getHz(bench) {","    return 1 / (bench.stats.mean + bench.stats.moe);","}","","function pad(str, len, l) {","    while (str.length < len)","        str = l ? str + \" \" : \" \" + str;","    return str;","}",""],"l":{"2":2,"4":2,"7":0,"9":1,"10":0,"11":0,"13":0,"16":0,"19":0,"22":0,"23":0,"24":0,"26":0,"27":0,"28":0,"29":0,"30":0,"33":0,"37":1,"38":0,"41":1,"42":0,"43":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/debug.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/debug.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}}},"branchMap":{},"code":["// experimental - debug library entry point.","","\"use strict\";","module.exports = require(\"./src/index-debug\");",""],"l":{"4":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/index-debug.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/src/index-debug.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"codegen_debug","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":29}}},"3":{"name":"str_debug","line":22,"loc":{"start":{"line":22,"column":38},"end":{"line":22,"column":59}}},"4":{"name":"unusedTypes","line":33,"loc":{"start":{"line":33,"column":20},"end":{"line":33,"column":45}}},"5":{"name":"enable","line":64,"loc":{"start":{"line":64,"column":15},"end":{"line":64,"column":33}}},"6":{"name":"disable","line":72,"loc":{"start":{"line":72,"column":16},"end":{"line":72,"column":35}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":49}},"5":{"start":{"line":18,"column":0},"end":{"line":26,"column":1}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":48}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":44}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":73}},"9":{"start":{"line":22,"column":4},"end":{"line":24,"column":18}},"10":{"start":{"line":22,"column":31},"end":{"line":24,"column":6}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":137}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":15}},"13":{"start":{"line":33,"column":0},"end":{"line":58,"column":2}},"14":{"start":{"line":36,"column":4},"end":{"line":37,"column":50}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":50},"skip":true},"16":{"start":{"line":40,"column":4},"end":{"line":41,"column":18}},"17":{"start":{"line":41,"column":8},"end":{"line":41,"column":18},"skip":true},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":20}},"19":{"start":{"line":44,"column":4},"end":{"line":56,"column":5}},"20":{"start":{"line":45,"column":8},"end":{"line":45,"column":41}},"21":{"start":{"line":46,"column":8},"end":{"line":55,"column":68}},"22":{"start":{"line":47,"column":12},"end":{"line":51,"column":52}},"23":{"start":{"line":52,"column":12},"end":{"line":53,"column":36}},"24":{"start":{"line":53,"column":16},"end":{"line":53,"column":36}},"25":{"start":{"line":54,"column":15},"end":{"line":55,"column":68}},"26":{"start":{"line":55,"column":12},"end":{"line":55,"column":68}},"27":{"start":{"line":57,"column":4},"end":{"line":57,"column":18}},"28":{"start":{"line":64,"column":0},"end":{"line":66,"column":2}},"29":{"start":{"line":65,"column":4},"end":{"line":65,"column":42}},"30":{"start":{"line":72,"column":0},"end":{"line":74,"column":2}},"31":{"start":{"line":73,"column":4},"end":{"line":73,"column":36}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4},"skip":true},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4},"skip":true},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":12}},{"start":{"line":52,"column":12},"end":{"line":52,"column":12}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":15},"end":{"line":54,"column":15}},{"start":{"line":54,"column":15},"end":{"line":54,"column":15}}]}},"code":["// WARNING: highly experimental.","// might eventually become a starting point for a real debug build.","","\"use strict\";","var protobuf = module.exports = require(\"./index\");","","/**"," * Debugging utility functions. Only present in debug builds."," * @namespace"," */","var debug = protobuf.debug = {};","","var codegen = protobuf.util.codegen;","","var debugFnRe = /function ([^(]+)\\(([^)]*)\\) {/g;","","// Counts number of calls to any generated function","function codegen_debug() {","    codegen_debug.supported = codegen.supported;","    codegen_debug.verbose = codegen.verbose;","    var gen = codegen.apply(null, Array.prototype.slice.call(arguments));","    gen.str = (function(str) { return function str_debug() {","        return str.apply(null, Array.prototype.slice.call(arguments)).replace(debugFnRe, \"function $1($2) {\\n\\t$1.calls=($1.calls|0)+1\");","    };})(gen.str);","    return gen;","}","","/**"," * Returns a list of unused types within the specified root."," * @param {NamespaceBase} ns Namespace to search"," * @returns {Type[]} Unused types"," */","debug.unusedTypes = function unusedTypes(ns) {","","    /* istanbul ignore if */","    if (!(ns instanceof protobuf.Namespace))","        throw TypeError(\"ns must be a Namespace\");","","    /* istanbul ignore if */","    if (!ns.nested)","        return [];","","    var unused = [];","    for (var names = Object.keys(ns.nested), i = 0; i < names.length; ++i) {","        var nested = ns.nested[names[i]];","        if (nested instanceof protobuf.Type) {","            var calls = (nested.encode.calls|0)","                      + (nested.decode.calls|0)","                      + (nested.verify.calls|0)","                      + (nested.toObject.calls|0)","                      + (nested.fromObject.calls|0);","            if (!calls)","                unused.push(nested);","        } else if (nested instanceof protobuf.Namespace)","            Array.prototype.push.apply(unused, unusedTypes(nested));","    }","    return unused;","};","","/**"," * Enables debugging extensions."," * @returns {undefined}"," */","debug.enable = function enable() {","    protobuf.util.codegen = codegen_debug;","};","","/**"," * Disables debugging extensions."," * @returns {undefined}"," */","debug.disable = function disable() {","    protobuf.util.codegen = codegen;","};",""],"l":{"5":1,"11":1,"13":1,"15":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"33":1,"36":0,"37":1,"40":0,"41":1,"43":0,"44":0,"45":0,"46":0,"47":0,"52":0,"53":0,"54":0,"55":0,"57":0,"64":1,"65":0,"72":1,"73":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/lib/polyfill.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/lib/polyfill.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,1],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,1],"16":[0,0],"17":[0,0],"18":[0,1],"19":[0,0],"20":[0,0],"21":[0,1],"22":[0,0],"23":[0,1],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,1],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,1],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,1],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"f":{"1":0,"2":0,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":51}}},"2":{"name":"Ctor","line":8,"loc":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":1},"end":{"line":22,"column":12}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":8},"end":{"line":24,"column":20}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":28},"end":{"line":26,"column":53}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":28},"end":{"line":47,"column":53}}},"7":{"name":"(anonymous_7)","line":62,"loc":{"start":{"line":62,"column":16},"end":{"line":62,"column":29}}},"8":{"name":"(anonymous_8)","line":77,"loc":{"start":{"line":77,"column":18},"end":{"line":77,"column":31}}},"9":{"name":"(anonymous_9)","line":82,"loc":{"start":{"line":82,"column":28},"end":{"line":82,"column":70}}},"10":{"name":"(anonymous_10)","line":115,"loc":{"start":{"line":115,"column":28},"end":{"line":115,"column":56}}},"11":{"name":"(anonymous_11)","line":135,"loc":{"start":{"line":135,"column":24},"end":{"line":135,"column":52}}},"12":{"name":"(anonymous_12)","line":157,"loc":{"start":{"line":157,"column":27},"end":{"line":157,"column":55}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":18,"column":1}},"2":{"start":{"line":6,"column":2},"end":{"line":17,"column":4}},"3":{"start":{"line":7,"column":4},"end":{"line":7,"column":61}},"4":{"start":{"line":7,"column":41},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":22}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":23}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"9":{"start":{"line":11,"column":21},"end":{"line":11,"column":42}},"10":{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},"11":{"start":{"line":13,"column":6},"end":{"line":13,"column":67}},"12":{"start":{"line":13,"column":47},"end":{"line":13,"column":65}},"13":{"start":{"line":14,"column":6},"end":{"line":14,"column":45}},"14":{"start":{"line":16,"column":4},"end":{"line":16,"column":13}},"15":{"start":{"line":22,"column":0},"end":{"line":43,"column":5}},"16":{"start":{"line":23,"column":2},"end":{"line":42,"column":3}},"17":{"start":{"line":24,"column":22},"end":{"line":24,"column":106}},"18":{"start":{"line":24,"column":28},"end":{"line":24,"column":63}},"19":{"start":{"line":24,"column":64},"end":{"line":24,"column":76}},"20":{"start":{"line":24,"column":91},"end":{"line":24,"column":104}},"21":{"start":{"line":25,"column":4},"end":{"line":25,"column":37}},"22":{"start":{"line":26,"column":4},"end":{"line":41,"column":6}},"23":{"start":{"line":28,"column":6},"end":{"line":28,"column":68}},"24":{"start":{"line":28,"column":18},"end":{"line":28,"column":66}},"25":{"start":{"line":28,"column":24},"end":{"line":28,"column":51}},"26":{"start":{"line":30,"column":6},"end":{"line":30,"column":93}},"27":{"start":{"line":30,"column":29},"end":{"line":30,"column":91}},"28":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"29":{"start":{"line":32,"column":8},"end":{"line":32,"column":66}},"30":{"start":{"line":34,"column":6},"end":{"line":36,"column":7}},"31":{"start":{"line":35,"column":8},"end":{"line":35,"column":66}},"32":{"start":{"line":37,"column":6},"end":{"line":39,"column":7}},"33":{"start":{"line":38,"column":8},"end":{"line":38,"column":29}},"34":{"start":{"line":40,"column":6},"end":{"line":40,"column":15}},"35":{"start":{"line":46,"column":0},"end":{"line":57,"column":1}},"36":{"start":{"line":47,"column":2},"end":{"line":56,"column":4}},"37":{"start":{"line":48,"column":4},"end":{"line":48,"column":93}},"38":{"start":{"line":48,"column":27},"end":{"line":48,"column":91}},"39":{"start":{"line":49,"column":4},"end":{"line":49,"column":13}},"40":{"start":{"line":50,"column":4},"end":{"line":54,"column":5}},"41":{"start":{"line":51,"column":6},"end":{"line":53,"column":7}},"42":{"start":{"line":52,"column":8},"end":{"line":52,"column":57}},"43":{"start":{"line":55,"column":4},"end":{"line":55,"column":13}},"44":{"start":{"line":61,"column":0},"end":{"line":72,"column":1}},"45":{"start":{"line":62,"column":2},"end":{"line":71,"column":4}},"46":{"start":{"line":63,"column":4},"end":{"line":63,"column":81}},"47":{"start":{"line":63,"column":27},"end":{"line":63,"column":79}},"48":{"start":{"line":64,"column":4},"end":{"line":64,"column":20}},"49":{"start":{"line":65,"column":4},"end":{"line":69,"column":5}},"50":{"start":{"line":66,"column":6},"end":{"line":68,"column":7}},"51":{"start":{"line":67,"column":8},"end":{"line":67,"column":20}},"52":{"start":{"line":70,"column":4},"end":{"line":70,"column":15}},"53":{"start":{"line":76,"column":0},"end":{"line":77,"column":120}},"54":{"start":{"line":77,"column":2},"end":{"line":77,"column":120}},"55":{"start":{"line":77,"column":33},"end":{"line":77,"column":117}},"56":{"start":{"line":81,"column":0},"end":{"line":110,"column":1}},"57":{"start":{"line":82,"column":2},"end":{"line":109,"column":4}},"58":{"start":{"line":83,"column":4},"end":{"line":83,"column":64}},"59":{"start":{"line":83,"column":44},"end":{"line":83,"column":62}},"60":{"start":{"line":85,"column":4},"end":{"line":85,"column":25}},"61":{"start":{"line":86,"column":4},"end":{"line":86,"column":29}},"62":{"start":{"line":87,"column":4},"end":{"line":87,"column":33}},"63":{"start":{"line":87,"column":21},"end":{"line":87,"column":31}},"64":{"start":{"line":89,"column":4},"end":{"line":89,"column":14}},"65":{"start":{"line":90,"column":4},"end":{"line":97,"column":5}},"66":{"start":{"line":91,"column":6},"end":{"line":91,"column":31}},"67":{"start":{"line":92,"column":6},"end":{"line":96,"column":7}},"68":{"start":{"line":93,"column":8},"end":{"line":93,"column":14}},"69":{"start":{"line":94,"column":13},"end":{"line":96,"column":7}},"70":{"start":{"line":95,"column":8},"end":{"line":95,"column":52}},"71":{"start":{"line":99,"column":4},"end":{"line":99,"column":32}},"72":{"start":{"line":99,"column":20},"end":{"line":99,"column":30}},"73":{"start":{"line":101,"column":4},"end":{"line":101,"column":56}},"74":{"start":{"line":103,"column":4},"end":{"line":107,"column":5}},"75":{"start":{"line":104,"column":6},"end":{"line":106,"column":7}},"76":{"start":{"line":105,"column":8},"end":{"line":105,"column":17}},"77":{"start":{"line":108,"column":4},"end":{"line":108,"column":14}},"78":{"start":{"line":114,"column":0},"end":{"line":129,"column":1}},"79":{"start":{"line":115,"column":2},"end":{"line":128,"column":4}},"80":{"start":{"line":116,"column":4},"end":{"line":116,"column":64}},"81":{"start":{"line":116,"column":44},"end":{"line":116,"column":62}},"82":{"start":{"line":118,"column":4},"end":{"line":118,"column":25}},"83":{"start":{"line":119,"column":4},"end":{"line":119,"column":29}},"84":{"start":{"line":120,"column":4},"end":{"line":120,"column":57}},"85":{"start":{"line":120,"column":37},"end":{"line":120,"column":55}},"86":{"start":{"line":122,"column":4},"end":{"line":122,"column":32}},"87":{"start":{"line":123,"column":4},"end":{"line":127,"column":5}},"88":{"start":{"line":124,"column":6},"end":{"line":126,"column":7}},"89":{"start":{"line":125,"column":8},"end":{"line":125,"column":36}},"90":{"start":{"line":134,"column":0},"end":{"line":152,"column":1}},"91":{"start":{"line":135,"column":2},"end":{"line":151,"column":4}},"92":{"start":{"line":136,"column":4},"end":{"line":136,"column":64}},"93":{"start":{"line":136,"column":44},"end":{"line":136,"column":62}},"94":{"start":{"line":138,"column":4},"end":{"line":138,"column":25}},"95":{"start":{"line":139,"column":4},"end":{"line":139,"column":29}},"96":{"start":{"line":140,"column":4},"end":{"line":140,"column":57}},"97":{"start":{"line":140,"column":37},"end":{"line":140,"column":55}},"98":{"start":{"line":142,"column":4},"end":{"line":142,"column":17}},"99":{"start":{"line":142,"column":18},"end":{"line":142,"column":35}},"100":{"start":{"line":143,"column":4},"end":{"line":143,"column":32}},"101":{"start":{"line":144,"column":4},"end":{"line":148,"column":5}},"102":{"start":{"line":145,"column":6},"end":{"line":147,"column":7}},"103":{"start":{"line":146,"column":8},"end":{"line":146,"column":45}},"104":{"start":{"line":150,"column":4},"end":{"line":150,"column":15}},"105":{"start":{"line":156,"column":0},"end":{"line":177,"column":1}},"106":{"start":{"line":157,"column":2},"end":{"line":176,"column":4}},"107":{"start":{"line":158,"column":4},"end":{"line":158,"column":64}},"108":{"start":{"line":158,"column":44},"end":{"line":158,"column":62}},"109":{"start":{"line":160,"column":4},"end":{"line":160,"column":25}},"110":{"start":{"line":161,"column":4},"end":{"line":161,"column":29}},"111":{"start":{"line":162,"column":4},"end":{"line":162,"column":57}},"112":{"start":{"line":162,"column":37},"end":{"line":162,"column":55}},"113":{"start":{"line":164,"column":4},"end":{"line":164,"column":17}},"114":{"start":{"line":165,"column":4},"end":{"line":165,"column":32}},"115":{"start":{"line":166,"column":4},"end":{"line":173,"column":5}},"116":{"start":{"line":167,"column":6},"end":{"line":172,"column":7}},"117":{"start":{"line":168,"column":8},"end":{"line":168,"column":23}},"118":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"119":{"start":{"line":170,"column":10},"end":{"line":170,"column":24}},"120":{"start":{"line":175,"column":4},"end":{"line":175,"column":15}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":0},"end":{"line":5,"column":0}},{"start":{"line":5,"column":0},"end":{"line":5,"column":0}}]},"2":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"4":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"5":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":6}},{"start":{"line":13,"column":6},"end":{"line":13,"column":6}}]},"6":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"7":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":28}},{"start":{"line":24,"column":6},"end":{"line":24,"column":112}}]},"8":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]},"9":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"10":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"11":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":10},"end":{"line":31,"column":43}},{"start":{"line":31,"column":48},"end":{"line":31,"column":61}}]},"12":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"13":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":10},"end":{"line":34,"column":43}},{"start":{"line":34,"column":48},"end":{"line":34,"column":61}}]},"14":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"15":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":0},"end":{"line":46,"column":0}},{"start":{"line":46,"column":0},"end":{"line":46,"column":0}}]},"16":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"17":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]},"18":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":0},"end":{"line":61,"column":0}},{"start":{"line":61,"column":0},"end":{"line":61,"column":0}}]},"19":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"20":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":6}},{"start":{"line":66,"column":6},"end":{"line":66,"column":6}}]},"21":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":0},"end":{"line":76,"column":0}},{"start":{"line":76,"column":0},"end":{"line":76,"column":0}}]},"22":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":48},"end":{"line":77,"column":49}},{"start":{"line":77,"column":53},"end":{"line":77,"column":115}}]},"23":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":0},"end":{"line":81,"column":0}},{"start":{"line":81,"column":0},"end":{"line":81,"column":0}}]},"24":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"25":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":23}},{"start":{"line":83,"column":27},"end":{"line":83,"column":40}}]},"26":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"27":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"28":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":6}},{"start":{"line":92,"column":6},"end":{"line":92,"column":6}}]},"29":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":13},"end":{"line":94,"column":13}},{"start":{"line":94,"column":13},"end":{"line":94,"column":13}}]},"30":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":17},"end":{"line":94,"column":24}},{"start":{"line":94,"column":28},"end":{"line":94,"column":41}},{"start":{"line":94,"column":45},"end":{"line":94,"column":59}}]},"31":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":13},"end":{"line":95,"column":18}},{"start":{"line":95,"column":22},"end":{"line":95,"column":24}}]},"32":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"33":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":21},"end":{"line":101,"column":22}},{"start":{"line":101,"column":25},"end":{"line":101,"column":55}}]},"34":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":6}},{"start":{"line":104,"column":6},"end":{"line":104,"column":6}}]},"35":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":10},"end":{"line":104,"column":16}},{"start":{"line":104,"column":20},"end":{"line":104,"column":42}}]},"36":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":0},"end":{"line":114,"column":0}},{"start":{"line":114,"column":0},"end":{"line":114,"column":0}}]},"37":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"38":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":23}},{"start":{"line":116,"column":27},"end":{"line":116,"column":40}}]},"39":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"40":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":6}},{"start":{"line":124,"column":6},"end":{"line":124,"column":6}}]},"41":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":0},"end":{"line":134,"column":0}},{"start":{"line":134,"column":0},"end":{"line":134,"column":0}}]},"42":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"43":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":23}},{"start":{"line":136,"column":27},"end":{"line":136,"column":40}}]},"44":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"45":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":6}},{"start":{"line":145,"column":6},"end":{"line":145,"column":6}}]},"46":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":0},"end":{"line":156,"column":0}},{"start":{"line":156,"column":0},"end":{"line":156,"column":0}}]},"47":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"48":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":23}},{"start":{"line":158,"column":27},"end":{"line":158,"column":40}}]},"49":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"50":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":6}},{"start":{"line":167,"column":6},"end":{"line":167,"column":6}}]},"51":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":8}},{"start":{"line":169,"column":8},"end":{"line":169,"column":8}}]}},"code":["// This file exists for testing purposes but can also be used as a reference for polyfilling non-ES5 environments.","// ref: https://github.com/inexorabletash/polyfill/blob/master/es5.js (public domain)","","// ES5 15.2.3.5 Object.create ( O [, Properties] )","if (typeof Object.create !== \"function\") {","  Object.create = function (prototype, properties) {","    if (typeof prototype !== \"object\") { throw TypeError(); }","    function Ctor() {}","    Ctor.prototype = prototype;","    var o = new Ctor();","    if (prototype) { o.constructor = Ctor; }","    if (properties !== undefined) {","      if (properties !== Object(properties)) { throw TypeError(); }","      Object.defineProperties(o, properties);","    }","    return o;","  };","}","","// ES 15.2.3.6 Object.defineProperty ( O, P, Attributes )","// Partial support for most common case - getters, setters, and values","(function() {","  if (!Object.defineProperty ||","      !(function () { try { Object.defineProperty({}, 'x', {}); return true; } catch (e) { return false; } } ())) {","    var orig = Object.defineProperty;","    Object.defineProperty = function (o, prop, desc) {","      // In IE8 try built-in implementation for defining properties on DOM prototypes.","      if (orig) { try { return orig(o, prop, desc); } catch (e) {} }","","      if (o !== Object(o)) { throw TypeError(\"Object.defineProperty called on non-object\"); }","      if (Object.prototype.__defineGetter__ && ('get' in desc)) {","        Object.prototype.__defineGetter__.call(o, prop, desc.get);","      }","      if (Object.prototype.__defineSetter__ && ('set' in desc)) {","        Object.prototype.__defineSetter__.call(o, prop, desc.set);","      }","      if ('value' in desc) {","        o[prop] = desc.value;","      }","      return o;","    };","  }","}());","","// ES 15.2.3.7 Object.defineProperties ( O, Properties )","if (typeof Object.defineProperties !== \"function\") {","  Object.defineProperties = function (o, properties) {","    if (o !== Object(o)) { throw TypeError(\"Object.defineProperties called on non-object\"); }","    var name;","    for (name in properties) {","      if (Object.prototype.hasOwnProperty.call(properties, name)) {","        Object.defineProperty(o, name, properties[name]);","      }","    }","    return o;","  };","}","","// ES5 15.2.3.14 Object.keys ( O )","// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys","if (!Object.keys) {","  Object.keys = function (o) {","    if (o !== Object(o)) { throw TypeError('Object.keys called on non-object'); }","    var ret = [], p;","    for (p in o) {","      if (Object.prototype.hasOwnProperty.call(o, p)) {","        ret.push(p);","      }","    }","    return ret;","  };","}","","// ES5 15.4.3.2 Array.isArray ( arg )","// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray","if (!Array.isArray)","  Array.isArray = function (o) { return Boolean(o && Object.prototype.toString.call(Object(o)) === '[object Array]'); };","","// ES5 15.4.4.14 Array.prototype.indexOf ( searchElement [ , fromIndex ] )","// From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf","if (!Array.prototype.indexOf) {","  Array.prototype.indexOf = function (searchElement /*, fromIndex */) {","    if (this === void 0 || this === null) { throw TypeError(); }","","    var t = Object(this);","    var len = t.length >>> 0;","    if (len === 0) { return -1; }","","    var n = 0;","    if (arguments.length > 0) {","      n = Number(arguments[1]);","      if (isNaN(n)) {","        n = 0;","      } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {","        n = (n > 0 || -1) * Math.floor(Math.abs(n));","      }","    }","","    if (n >= len) { return -1; }","","    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);","","    for (; k < len; k++) {","      if (k in t && t[k] === searchElement) {","        return k;","      }","    }","    return -1;","  };","}","","// ES5 15.4.4.18 Array.prototype.forEach ( callbackfn [ , thisArg ] )","// From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach","if (!Array.prototype.forEach) {","  Array.prototype.forEach = function (fun /*, thisp */) {","    if (this === void 0 || this === null) { throw TypeError(); }","","    var t = Object(this);","    var len = t.length >>> 0;","    if (typeof fun !== \"function\") { throw TypeError(); }","","    var thisp = arguments[1], i;","    for (i = 0; i < len; i++) {","      if (i in t) {","        fun.call(thisp, t[i], i, t);","      }","    }","  };","}","","","// ES5 15.4.4.19 Array.prototype.map ( callbackfn [ , thisArg ] )","// From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/Map","if (!Array.prototype.map) {","  Array.prototype.map = function (fun /*, thisp */) {","    if (this === void 0 || this === null) { throw TypeError(); }","","    var t = Object(this);","    var len = t.length >>> 0;","    if (typeof fun !== \"function\") { throw TypeError(); }","","    var res = []; res.length = len;","    var thisp = arguments[1], i;","    for (i = 0; i < len; i++) {","      if (i in t) {","        res[i] = fun.call(thisp, t[i], i, t);","      }","    }","","    return res;","  };","}","","// ES5 15.4.4.20 Array.prototype.filter ( callbackfn [ , thisArg ] )","// From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/Filter","if (!Array.prototype.filter) {","  Array.prototype.filter = function (fun /*, thisp */) {","    if (this === void 0 || this === null) { throw TypeError(); }","","    var t = Object(this);","    var len = t.length >>> 0;","    if (typeof fun !== \"function\") { throw TypeError(); }","","    var res = [];","    var thisp = arguments[1], i;","    for (i = 0; i < len; i++) {","      if (i in t) {","        var val = t[i]; // in case fun mutates this","        if (fun.call(thisp, val, i, t)) {","          res.push(val);","        }","      }","    }","","    return res;","  };","}",""],"l":{"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"16":0,"22":1,"23":1,"24":1,"25":0,"26":0,"28":0,"30":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"55":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"70":0,"76":1,"77":0,"81":1,"82":0,"83":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"99":0,"101":0,"103":0,"104":0,"105":0,"108":0,"114":1,"115":0,"116":0,"118":0,"119":0,"120":0,"122":0,"123":0,"124":0,"125":0,"134":1,"135":0,"136":0,"138":0,"139":0,"140":0,"142":0,"143":0,"144":0,"145":0,"146":0,"150":0,"156":1,"157":0,"158":0,"160":0,"161":0,"162":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"175":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/lib/prelude.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/lib/prelude.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"prelude","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":43}}},"2":{"name":"$require","line":8,"loc":{"start":{"line":8,"column":4},"end":{"line":8,"column":28}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":32,"column":22}},"2":{"start":{"line":8,"column":4},"end":{"line":13,"column":5}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":34}},"4":{"start":{"line":10,"column":8},"end":{"line":11,"column":111}},"5":{"start":{"line":11,"column":12},"end":{"line":11,"column":111}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":31}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":58}},"8":{"start":{"line":19,"column":4},"end":{"line":26,"column":11}},"9":{"start":{"line":20,"column":8},"end":{"line":26,"column":11}},"10":{"start":{"line":21,"column":12},"end":{"line":24,"column":13}},"11":{"start":{"line":22,"column":16},"end":{"line":22,"column":42}},"12":{"start":{"line":23,"column":16},"end":{"line":23,"column":37}},"13":{"start":{"line":25,"column":12},"end":{"line":25,"column":28}},"14":{"start":{"line":29,"column":4},"end":{"line":30,"column":34}},"15":{"start":{"line":30,"column":8},"end":{"line":30,"column":34}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":8}},{"start":{"line":10,"column":8},"end":{"line":10,"column":8}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":36}},{"start":{"line":19,"column":40},"end":{"line":19,"column":50}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":21,"column":12}},{"start":{"line":21,"column":12},"end":{"line":21,"column":12}}]},"5":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":20}},{"start":{"line":21,"column":24},"end":{"line":21,"column":35}}]},"6":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"7":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":34}},{"start":{"line":29,"column":38},"end":{"line":29,"column":44}},{"start":{"line":29,"column":48},"end":{"line":29,"column":62}}]}},"code":["(function prelude(modules, cache, entries) {","","    // This is the prelude used to bundle protobuf.js for the browser. Wraps up the CommonJS","    // sources through a conflict-free require shim and is again wrapped within an iife that","    // provides a unified `global` and a minification-friendly `undefined` var plus a global","    // \"use strict\" directive so that minification can remove the directives of each module.","","    function $require(name) {","        var $module = cache[name];","        if (!$module)","            modules[name][0].call($module = cache[name] = { exports: {} }, $require, $module, $module.exports);","        return $module.exports;","    }","","    // Expose globally","    var protobuf = global.protobuf = $require(entries[0]);","","    // Be nice to AMD","    if (typeof define === \"function\" && define.amd)","        define([\"long\"], function(Long) {","            if (Long && Long.isLong) {","                protobuf.util.Long = Long;","                protobuf.configure();","            }","            return protobuf;","        });","","    // Be nice to CommonJS","    if (typeof module === \"object\" && module && module.exports)","        module.exports = protobuf;","","})/* end of prelude */"],"l":{"1":1,"8":1,"9":0,"10":0,"11":0,"12":0,"16":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/lib/tape-adapter.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/lib/tape-adapter.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"4":{"start":{"line":10,"column":0},"end":{"line":22,"column":2}},"5":{"start":{"line":15,"column":4},"end":{"line":21,"column":7}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":18},"end":{"line":16,"column":21}},{"start":{"line":16,"column":25},"end":{"line":16,"column":47}}]}},"code":["var tape = require(\"tape\");","","var Test = tape.Test;","","// some ancient environments have invalid own properties on buffers so that deepEqual doesn't work.","// the following uses a monkey-patched deepEqual implementation for all kinds of number arrays.","","var deepEqual = require(\"./deep-equal\");","","Test.prototype.deepEqual","= Test.prototype.deepEquals","= Test.prototype.isEquivalent","= Test.prototype.same","= function (a, b, msg, extra) {","    this._assert(deepEqual(a, b, { strict: true }), {","        message : msg || \"should be equivalent\",","        operator : \"deepEqual\",","        actual : a,","        expected : b,","        extra : extra","    });","};",""],"l":{"1":2,"3":0,"8":0,"10":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/light.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/light.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}}},"branchMap":{},"code":["// light library entry point.","","\"use strict\";","module.exports = require(\"./src/index-light\");"],"l":{"4":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/minimal.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/minimal.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}}},"branchMap":{},"code":["// minimal library entry point.","","\"use strict\";","module.exports = require(\"./src/index-minimal\");",""],"l":{"4":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/runtime.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/runtime.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}}},"branchMap":{},"code":["// deprecated - compatibility layer for v6.5 and earlier (now named \"minimal\")","","\"use strict\";","module.exports = require(\"./src/index-minimal\");",""],"l":{"4":1}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/bundle.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/bundle.js","s":{"1":2,"2":2,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"bundle","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":25}}},"2":{"name":"compress","line":104,"loc":{"start":{"line":104,"column":18},"end":{"line":104,"column":75}}},"3":{"name":"(anonymous_3)","line":109,"loc":{"start":{"line":109,"column":20},"end":{"line":109,"column":31}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":5,"column":33}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}},"14":{"start":{"line":24,"column":0},"end":{"line":31,"column":20}},"15":{"start":{"line":34,"column":0},"end":{"line":34,"column":85}},"16":{"start":{"line":45,"column":0},"end":{"line":95,"column":1}},"17":{"start":{"line":46,"column":4},"end":{"line":47,"column":43}},"18":{"start":{"line":47,"column":8},"end":{"line":47,"column":43}},"19":{"start":{"line":48,"column":4},"end":{"line":56,"column":22}},"20":{"start":{"line":57,"column":4},"end":{"line":58,"column":58}},"21":{"start":{"line":58,"column":8},"end":{"line":58,"column":58}},"22":{"start":{"line":59,"column":4},"end":{"line":94,"column":28}},"23":{"start":{"line":104,"column":0},"end":{"line":113,"column":2}},"24":{"start":{"line":105,"column":4},"end":{"line":105,"column":46}},"25":{"start":{"line":106,"column":4},"end":{"line":106,"column":52}},"26":{"start":{"line":107,"column":4},"end":{"line":107,"column":30}},"27":{"start":{"line":108,"column":4},"end":{"line":108,"column":30}},"28":{"start":{"line":109,"column":4},"end":{"line":111,"column":7}},"29":{"start":{"line":110,"column":8},"end":{"line":110,"column":23}},"30":{"start":{"line":112,"column":4},"end":{"line":112,"column":44}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"2":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":16}},{"start":{"line":46,"column":20},"end":{"line":46,"column":34}},{"start":{"line":46,"column":38},"end":{"line":46,"column":53}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"4":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":36},"end":{"line":68,"column":53}},{"start":{"line":68,"column":56},"end":{"line":68,"column":69}}]}},"code":["\"use strict\";","module.exports = bundle;","","var fs         = require(\"fs\"),","    path       = require(\"path\");","","var browserify = require(\"browserify\");","","var header     = require(\"gulp-header\");","var gulpif     = require(\"gulp-if\");","var sourcemaps = require(\"gulp-sourcemaps\");","var uglify     = require(\"gulp-uglify\");","var gutil      = require(\"gulp-util\");","","var buffer     = require(\"vinyl-buffer\");","var vinylfs    = require(\"vinyl-fs\");","var source     = require(\"vinyl-source-stream\");","","var zopfli     = require(\"node-zopfli\");","","var pkg = require(path.join(__dirname, \"..\", \"package.json\"));","","/*eslint-disable no-template-curly-in-string*/","var license = [","    \"/*!\",","    \" * protobuf.js v${version} (c) 2016, Daniel Wirtz\",","    \" * Compiled ${date}\",","    \" * Licensed under the BSD-3-Clause License\",","    \" * see: https://github.com/dcodeIO/protobuf.js for details\",","    \" */\"","].join(\"\\n\") + \"\\n\";","/*eslint-enable no-template-curly-in-string*/","","var prelude = fs.readFileSync(require.resolve(\"../lib/prelude.js\")).toString(\"utf8\");","","/**"," * Bundles the library."," * @param {Object} options Bundler options"," * @param {string} options.entry Entry file"," * @param {string} options.target Target directory"," * @param {boolean} [options.compress=false] Whether to minify or not"," * @param {string[]} [options.exclude] Excluded source files"," * @returns {undefined}"," */","function bundle(options) {","    if (!options || !options.entry || !options.target)","        throw TypeError(\"missing options\");","    var bundler = browserify({","        entries: options.entry,","        insertGlobalVars: false,","        detectGlobals: false,","        debug: true,","        prelude: prelude,","        preludePath: \"./lib/prelude.js\"","    })","    .external(\"long\");","    if (options.exclude)","        options.exclude.forEach(bundler.exclude, bundler);","    return bundler","    .plugin(require(\"browserify-wrap\"), {","        // + global object for convenience","        // + undefined var and global strict-mode for uglify","        prefix: \"(function(global,undefined){\\\"use strict\\\";\",","        suffix: \"})(typeof window===\\\"object\\\"&&window||typeof self===\\\"object\\\"&&self||this);\"","    })","    .plugin(require(\"bundle-collapser/plugin\"))","    .bundle()","    .pipe(source(options.compress ? \"protobuf.min.js\" : \"protobuf.js\"))","    .pipe(buffer())","    .pipe(sourcemaps.init({ loadMaps: true }))","            .pipe(","                gulpif(options.compress, uglify({","                    mangleProperties: {","                        regex: /^_/","                    },","                    mangle: {","                        eval: true,","                        toplevel: false","                    },","                    compress: {","                        unused: true,","                        keep_fargs: false,","                        unsafe: true","                    }","                }))","            )","            .pipe(header(license, {","                date: (new Date()).toUTCString().replace(\"GMT\", \"UTC\"),","                version: pkg.version","            }))","    .pipe(sourcemaps.write(\".\", { sourceRoot: \"\" }))","    .pipe(vinylfs.dest(options.target))","    .on(\"log\", gutil.log)","    .on(\"error\", gutil.log);","}","","/**"," * Compresses a file using zopfli gzip."," * @param {string} sourceFile Source file"," * @param {string} destinationFile Destination file"," * @param {function(?Error)} callback Node-style callback"," * @returns {undefined}"," */","bundle.compress = function compress(sourceFile, destinationFile, callback) {","    var src = fs.createReadStream(sourceFile);","    var dst = fs.createWriteStream(destinationFile);","    src.on(\"error\", callback);","    dst.on(\"error\", callback);","    dst.on(\"close\", function() {","        callback(null);","    });","    src.pipe(zopfli.createGzip()).pipe(dst);","};",""],"l":{"2":2,"4":2,"7":2,"9":0,"10":0,"11":0,"12":0,"13":0,"15":0,"16":0,"17":0,"19":0,"21":0,"24":0,"34":0,"45":1,"46":0,"47":0,"48":0,"57":0,"58":0,"59":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"112":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/changelog.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/changelog.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":39,"loc":{"start":{"line":39,"column":14},"end":{"line":39,"column":34}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":41},"end":{"line":44,"column":60}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":24},"end":{"line":68,"column":38}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":23},"end":{"line":72,"column":39}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":35},"end":{"line":80,"column":53}}},"6":{"name":"(anonymous_6)","line":118,"loc":{"start":{"line":118,"column":22},"end":{"line":118,"column":33}}},"7":{"name":"(anonymous_7)","line":120,"loc":{"start":{"line":120,"column":40},"end":{"line":120,"column":59}}},"8":{"name":"(anonymous_8)","line":125,"loc":{"start":{"line":125,"column":29},"end":{"line":125,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":25}},"2":{"start":{"line":6,"column":0},"end":{"line":8,"column":40}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":24,"column":3}},"6":{"start":{"line":27,"column":0},"end":{"line":34,"column":2}},"7":{"start":{"line":35,"column":0},"end":{"line":35,"column":51}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":52}},"9":{"start":{"line":39,"column":0},"end":{"line":150,"column":3}},"10":{"start":{"line":40,"column":4},"end":{"line":41,"column":18}},"11":{"start":{"line":41,"column":8},"end":{"line":41,"column":18}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":24}},"13":{"start":{"line":44,"column":4},"end":{"line":46,"column":7}},"14":{"start":{"line":45,"column":8},"end":{"line":45,"column":34}},"15":{"start":{"line":47,"column":4},"end":{"line":47,"column":20}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":23}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":20}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":12}},"19":{"start":{"line":52,"column":4},"end":{"line":59,"column":26}},"20":{"start":{"line":53,"column":8},"end":{"line":53,"column":41}},"21":{"start":{"line":54,"column":8},"end":{"line":55,"column":52}},"22":{"start":{"line":55,"column":12},"end":{"line":55,"column":52}},"23":{"start":{"line":56,"column":8},"end":{"line":56,"column":29}},"24":{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},"25":{"start":{"line":59,"column":8},"end":{"line":59,"column":26}},"26":{"start":{"line":61,"column":4},"end":{"line":66,"column":7}},"27":{"start":{"line":68,"column":4},"end":{"line":70,"column":7}},"28":{"start":{"line":69,"column":8},"end":{"line":69,"column":18}},"29":{"start":{"line":72,"column":4},"end":{"line":116,"column":7}},"30":{"start":{"line":73,"column":8},"end":{"line":73,"column":52}},"31":{"start":{"line":74,"column":8},"end":{"line":74,"column":53}},"32":{"start":{"line":75,"column":8},"end":{"line":75,"column":17}},"33":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"34":{"start":{"line":77,"column":12},"end":{"line":77,"column":84}},"35":{"start":{"line":78,"column":12},"end":{"line":78,"column":28}},"36":{"start":{"line":80,"column":8},"end":{"line":115,"column":11}},"37":{"start":{"line":81,"column":12},"end":{"line":82,"column":23}},"38":{"start":{"line":82,"column":16},"end":{"line":82,"column":23}},"39":{"start":{"line":83,"column":12},"end":{"line":83,"column":66}},"40":{"start":{"line":84,"column":12},"end":{"line":84,"column":25}},"41":{"start":{"line":85,"column":12},"end":{"line":98,"column":13}},"42":{"start":{"line":86,"column":16},"end":{"line":86,"column":36}},"43":{"start":{"line":87,"column":16},"end":{"line":87,"column":72}},"44":{"start":{"line":89,"column":16},"end":{"line":89,"column":56}},"45":{"start":{"line":90,"column":16},"end":{"line":96,"column":17}},"46":{"start":{"line":91,"column":20},"end":{"line":91,"column":54}},"47":{"start":{"line":92,"column":20},"end":{"line":95,"column":21}},"48":{"start":{"line":93,"column":24},"end":{"line":93,"column":43}},"49":{"start":{"line":94,"column":24},"end":{"line":94,"column":30}},"50":{"start":{"line":97,"column":16},"end":{"line":97,"column":65}},"51":{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},"52":{"start":{"line":100,"column":16},"end":{"line":103,"column":39}},"53":{"start":{"line":101,"column":20},"end":{"line":101,"column":42}},"54":{"start":{"line":103,"column":20},"end":{"line":103,"column":39}},"55":{"start":{"line":105,"column":12},"end":{"line":105,"column":43}},"56":{"start":{"line":106,"column":12},"end":{"line":107,"column":58}},"57":{"start":{"line":107,"column":16},"end":{"line":107,"column":58}},"58":{"start":{"line":108,"column":12},"end":{"line":109,"column":23}},"59":{"start":{"line":109,"column":16},"end":{"line":109,"column":23}},"60":{"start":{"line":110,"column":12},"end":{"line":110,"column":64}},"61":{"start":{"line":111,"column":12},"end":{"line":114,"column":15}},"62":{"start":{"line":118,"column":4},"end":{"line":149,"column":7}},"63":{"start":{"line":119,"column":8},"end":{"line":119,"column":80}},"64":{"start":{"line":120,"column":8},"end":{"line":129,"column":11}},"65":{"start":{"line":121,"column":12},"end":{"line":121,"column":48}},"66":{"start":{"line":122,"column":12},"end":{"line":123,"column":23}},"67":{"start":{"line":123,"column":16},"end":{"line":123,"column":23}},"68":{"start":{"line":124,"column":12},"end":{"line":124,"column":51}},"69":{"start":{"line":125,"column":12},"end":{"line":128,"column":15}},"70":{"start":{"line":126,"column":16},"end":{"line":126,"column":92}},"71":{"start":{"line":127,"column":16},"end":{"line":127,"column":103}},"72":{"start":{"line":130,"column":8},"end":{"line":130,"column":20}},"73":{"start":{"line":131,"column":8},"end":{"line":135,"column":9}},"74":{"start":{"line":132,"column":12},"end":{"line":132,"column":82}},"75":{"start":{"line":134,"column":12},"end":{"line":134,"column":25}},"76":{"start":{"line":136,"column":8},"end":{"line":136,"column":52}},"77":{"start":{"line":137,"column":8},"end":{"line":143,"column":9}},"78":{"start":{"line":138,"column":12},"end":{"line":138,"column":48}},"79":{"start":{"line":139,"column":12},"end":{"line":142,"column":29}},"80":{"start":{"line":140,"column":16},"end":{"line":140,"column":56}},"81":{"start":{"line":142,"column":16},"end":{"line":142,"column":29}},"82":{"start":{"line":144,"column":8},"end":{"line":144,"column":56}},"83":{"start":{"line":145,"column":8},"end":{"line":148,"column":43}},"84":{"start":{"line":146,"column":12},"end":{"line":146,"column":74}},"85":{"start":{"line":148,"column":12},"end":{"line":148,"column":43}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"4":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"5":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":12}},{"start":{"line":81,"column":12},"end":{"line":81,"column":12}}]},"6":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":12}},{"start":{"line":85,"column":12},"end":{"line":85,"column":12}}]},"7":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":16},"end":{"line":85,"column":21}},{"start":{"line":85,"column":25},"end":{"line":85,"column":52}}]},"8":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":20},"end":{"line":92,"column":20}},{"start":{"line":92,"column":20},"end":{"line":92,"column":20}}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":24},"end":{"line":92,"column":26}},{"start":{"line":92,"column":30},"end":{"line":92,"column":46}}]},"10":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":99,"column":12}},{"start":{"line":99,"column":12},"end":{"line":99,"column":12}}]},"11":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":16},"end":{"line":100,"column":16}},{"start":{"line":100,"column":16},"end":{"line":100,"column":16}}]},"12":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":12}},{"start":{"line":106,"column":12},"end":{"line":106,"column":12}}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":21}},{"start":{"line":108,"column":25},"end":{"line":108,"column":44}}]},"15":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":122,"column":12}},{"start":{"line":122,"column":12},"end":{"line":122,"column":12}}]},"16":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]},"17":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":12},"end":{"line":139,"column":12}},{"start":{"line":139,"column":12},"end":{"line":139,"column":12}}]},"18":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8}}]}},"code":["\"use strict\";","","var path = require(\"path\"),","    fs   = require(\"fs\");","","var gitSemverTags = require(\"git-semver-tags\"),","    gitRawCommits = require(\"git-raw-commits\"),","    minimist      = require(\"minimist\");","","var basedir = path.join(__dirname, \"..\");","var pkg = require(basedir + \"/package.json\");","","var argv = minimist(process.argv, {","    alias: {","        tag    : \"t\",","        write  : \"w\"","    },","    string: [ \"tag\" ],","    boolean: [ \"write\" ],","    default: {","        tag: null,","        write: false","    }","});","","// categories to be used in the future and regexes for lazy / older subjects","var validCategories = {","    \"Breaking\": null,","    \"Fixed\": /fix|properly|prevent|correctly/i,","    \"New\": /added|initial/i,","    \"CLI\": /pbjs|pbts|CLI/,","    \"Docs\": /README/i,","    \"Other\": null","};","var breakingFallback = /removed|stripped|dropped/i;","","var repo = \"https://github.com/dcodeIO/protobuf.js\";","","gitSemverTags(function(err, tags) {","    if (err)","        throw err;","","    var categories = {};","    Object.keys(validCategories).forEach(function(category) {","        categories[category] = [];","    });","    var output = [];","","    var from = tags[0];","    var to = \"HEAD\";","    var tag;","    if (argv.tag) {","        var idx = tags.indexOf(argv.tag);","        if (idx < 0)","            throw Error(\"no such tag: \" + argv.tag);","        from = tags[idx + 1];","        tag = to = tags[idx];","    } else","        tag = pkg.version;","","    var commits = gitRawCommits({","        from: from,","        to: to,","        merges: false,","        format: \"%B%n#%H\"","    });","","    commits.on(\"error\", function(err) {","        throw err;","    });","","    commits.on(\"data\", function(chunk) {","        var message = chunk.toString(\"utf8\").trim();","        var match = /#([0-9a-f]{40})$/.exec(message);","        var hash;","        if (match) {","            message = message.substring(0, message.length - match[1].length).trim();","            hash = match[1];","        }","        message.split(\";\").forEach(function(message) {","            if (/^(Merge pull request |Post-merge)/.test(message))","                return;","            var match = /^(\\w+):/i.exec(message = message.trim());","            var category;","            if (match && match[1] in validCategories) {","                category = match[1];","                message = message.substring(match[1].length + 1).trim();","            } else {","                var keys = Object.keys(validCategories);","                for (var i = 0; i < keys.length; ++i) {","                    var re = validCategories[keys[i]];","                    if (re && re.test(message)) {","                        category = keys[i];","                        break;","                    }","                }","                message = message.replace(/^(\\w+):/i, \"\").trim();","            }","            if (!category) {","                if (breakingFallback.test(message))","                    category = \"Breaking\";","                else","                    category = \"Other\";","            }","            var nl = message.indexOf(\"\\n\");","            if (nl > -1)","                message = message.substring(0, nl).trim();","            if (!hash || message.length < 12)","                return;","            message = message.replace(/\\[ci skip\\]/, \"\").trim();","            categories[category].push({","                text: message,","                hash: hash","            });","        });","    });","","    commits.on(\"end\", function() {","        output.push(\"# [\" + tag + \"](\" + repo + \"/releases/tag/\" + tag + \")\\n\");","        Object.keys(categories).forEach(function(category) {","            var messages = categories[category];","            if (!messages.length)","                return;","            output.push(\"\\n## \" + category + \"\\n\");","            messages.forEach(function(message) {","                var text = message.text.replace(/#(\\d+)/g, \"[#$1](\" + repo + \"/issues/$1)\");","                output.push(\"[:hash:](\" + repo + \"/commit/\" + message.hash + \") \" + text + \"<br />\\n\");","            });","        });","        var current;","        try {","            current = fs.readFileSync(basedir + \"/CHANGELOG.md\").toString(\"utf8\");","        } catch (e) {","            current = \"\";","        }","        var re = new RegExp(\"^# \\\\[\" + tag + \"\\\\]\");","        if (re.test(current)) { // regenerated, replace","            var pos = current.indexOf(\"# [\", 1);","            if (pos > -1)","                current = current.substring(pos).trim();","            else","                current = \"\";","        }","        var contents = output.join(\"\") + \"\\n\" + current;","        if (argv.write)","            fs.writeFileSync(basedir + \"/CHANGELOG.md\", contents, \"utf8\");","        else","            process.stdout.write(contents);","    });","});",""],"l":{"3":2,"6":2,"10":0,"11":0,"13":0,"27":0,"35":0,"37":0,"39":0,"40":0,"41":0,"43":0,"44":0,"45":0,"47":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"61":0,"68":0,"69":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"97":0,"99":0,"100":0,"101":0,"103":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"130":0,"131":0,"132":0,"134":0,"136":0,"137":0,"138":0,"139":0,"140":0,"142":0,"144":0,"145":0,"146":0,"148":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/gencommons.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/gencommons.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":9},"end":{"line":14,"column":24}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":7},"end":{"line":21,"column":21}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":26,"column":3}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":48}},"4":{"start":{"line":16,"column":4},"end":{"line":25,"column":7}},"5":{"start":{"line":22,"column":8},"end":{"line":23,"column":22}},"6":{"start":{"line":23,"column":12},"end":{"line":23,"column":22}},"7":{"start":{"line":24,"column":8},"end":{"line":24,"column":68}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]}},"code":["\"use strict\";","var pbjs = require(\"../cli/pbjs\");","","[","    \"google/protobuf/api.proto\",","    \"google/protobuf/descriptor.proto\",","    \"google/protobuf/field_mask.proto\",","    \"google/protobuf/source_context.proto\",","    \"google/protobuf/type.proto\",","","    \"google/api/annotations.proto\",","    \"google/api/http.proto\"","]",".forEach(function(file) {","    var out = file.replace(/\\.proto$/, \".json\");","    pbjs.main([","        \"--target\", \"json\",","        \"--sparse\",","        \"--out\", out,","        file","    ], function(err) {","        if (err)","            throw err;","        process.stdout.write(\"pbjs: \" + file + \" -> \" + out + \"\\n\");","    });","});"],"l":{"2":2,"4":0,"15":0,"16":0,"22":0,"23":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/cli/pbjs.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/cli/pbjs.js","s":{"1":4,"2":4,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"main","line":22,"loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":45}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":30},"end":{"line":61,"column":44}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":48},"end":{"line":62,"column":65}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":48},"end":{"line":71,"column":62}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":101},"end":{"line":71,"column":115}}},"6":{"name":"pbjsResolvePath","line":155,"loc":{"start":{"line":155,"column":23},"end":{"line":155,"column":64}}},"7":{"name":"(anonymous_7)","line":194,"loc":{"start":{"line":194,"column":33},"end":{"line":194,"column":49}}},"8":{"name":"(anonymous_8)","line":197,"loc":{"start":{"line":197,"column":32},"end":{"line":197,"column":43}}},"9":{"name":"markReferenced","line":233,"loc":{"start":{"line":233,"column":4},"end":{"line":233,"column":34}}},"10":{"name":"(anonymous_10)","line":237,"loc":{"start":{"line":237,"column":37},"end":{"line":237,"column":52}}},"11":{"name":"(anonymous_11)","line":241,"loc":{"start":{"line":241,"column":37},"end":{"line":241,"column":52}}},"12":{"name":"sparsify","line":249,"loc":{"start":{"line":249,"column":4},"end":{"line":249,"column":28}}},"13":{"name":"(anonymous_13)","line":252,"loc":{"start":{"line":252,"column":28},"end":{"line":252,"column":42}}},"14":{"name":"(anonymous_14)","line":260,"loc":{"start":{"line":260,"column":28},"end":{"line":260,"column":42}}},"15":{"name":"(anonymous_15)","line":267,"loc":{"start":{"line":267,"column":35},"end":{"line":267,"column":50}}},"16":{"name":"callTarget","line":289,"loc":{"start":{"line":289,"column":4},"end":{"line":289,"column":26}}},"17":{"name":"targetCallback","line":290,"loc":{"start":{"line":290,"column":27},"end":{"line":290,"column":64}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":5,"column":33}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":13}},"3":{"start":{"line":9,"column":0},"end":{"line":12,"column":31}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":44}},"5":{"start":{"line":22,"column":0},"end":{"line":313,"column":2}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":111}},"7":{"start":{"line":24,"column":4},"end":{"line":54,"column":7}},"8":{"start":{"line":56,"column":4},"end":{"line":58,"column":81}},"9":{"start":{"line":61,"column":4},"end":{"line":65,"column":7}},"10":{"start":{"line":62,"column":8},"end":{"line":62,"column":95}},"11":{"start":{"line":62,"column":67},"end":{"line":62,"column":91}},"12":{"start":{"line":63,"column":8},"end":{"line":64,"column":39}},"13":{"start":{"line":64,"column":12},"end":{"line":64,"column":39}},"14":{"start":{"line":68,"column":4},"end":{"line":68,"column":80}},"15":{"start":{"line":70,"column":4},"end":{"line":131,"column":5}},"16":{"start":{"line":71,"column":8},"end":{"line":73,"column":11}},"17":{"start":{"line":71,"column":64},"end":{"line":71,"column":93}},"18":{"start":{"line":72,"column":12},"end":{"line":72,"column":93}},"19":{"start":{"line":74,"column":8},"end":{"line":129,"column":26}},"20":{"start":{"line":75,"column":12},"end":{"line":75,"column":37}},"21":{"start":{"line":77,"column":12},"end":{"line":129,"column":26}},"22":{"start":{"line":130,"column":8},"end":{"line":130,"column":17}},"23":{"start":{"line":133,"column":4},"end":{"line":134,"column":49}},"24":{"start":{"line":134,"column":8},"end":{"line":134,"column":49}},"25":{"start":{"line":137,"column":4},"end":{"line":144,"column":5}},"26":{"start":{"line":138,"column":8},"end":{"line":143,"column":16}},"27":{"start":{"line":139,"column":12},"end":{"line":139,"column":46}},"28":{"start":{"line":140,"column":12},"end":{"line":140,"column":72}},"29":{"start":{"line":141,"column":12},"end":{"line":141,"column":32}},"30":{"start":{"line":143,"column":12},"end":{"line":143,"column":16}},"31":{"start":{"line":147,"column":4},"end":{"line":148,"column":67}},"32":{"start":{"line":148,"column":8},"end":{"line":148,"column":67}},"33":{"start":{"line":150,"column":4},"end":{"line":150,"column":35}},"34":{"start":{"line":152,"column":4},"end":{"line":152,"column":23}},"35":{"start":{"line":155,"column":4},"end":{"line":179,"column":6}},"36":{"start":{"line":156,"column":8},"end":{"line":157,"column":62}},"37":{"start":{"line":158,"column":8},"end":{"line":159,"column":39}},"38":{"start":{"line":159,"column":12},"end":{"line":159,"column":39}},"39":{"start":{"line":161,"column":8},"end":{"line":161,"column":80}},"40":{"start":{"line":162,"column":8},"end":{"line":162,"column":59}},"41":{"start":{"line":163,"column":8},"end":{"line":167,"column":9}},"42":{"start":{"line":164,"column":12},"end":{"line":164,"column":50}},"43":{"start":{"line":165,"column":12},"end":{"line":166,"column":35}},"44":{"start":{"line":166,"column":16},"end":{"line":166,"column":35}},"45":{"start":{"line":169,"column":8},"end":{"line":170,"column":28}},"46":{"start":{"line":170,"column":12},"end":{"line":170,"column":28}},"47":{"start":{"line":172,"column":8},"end":{"line":176,"column":9}},"48":{"start":{"line":173,"column":12},"end":{"line":173,"column":79}},"49":{"start":{"line":174,"column":12},"end":{"line":175,"column":33}},"50":{"start":{"line":175,"column":16},"end":{"line":175,"column":33}},"51":{"start":{"line":178,"column":8},"end":{"line":178,"column":24}},"52":{"start":{"line":182,"column":4},"end":{"line":185,"column":5}},"53":{"start":{"line":183,"column":8},"end":{"line":183,"column":26}},"54":{"start":{"line":184,"column":8},"end":{"line":184,"column":24}},"55":{"start":{"line":187,"column":4},"end":{"line":189,"column":6}},"56":{"start":{"line":192,"column":4},"end":{"line":231,"column":5}},"57":{"start":{"line":193,"column":8},"end":{"line":193,"column":22}},"58":{"start":{"line":194,"column":8},"end":{"line":196,"column":11}},"59":{"start":{"line":195,"column":12},"end":{"line":195,"column":29}},"60":{"start":{"line":197,"column":8},"end":{"line":215,"column":11}},"61":{"start":{"line":198,"column":12},"end":{"line":198,"column":62}},"62":{"start":{"line":199,"column":12},"end":{"line":214,"column":13}},"63":{"start":{"line":200,"column":16},"end":{"line":206,"column":17}},"64":{"start":{"line":201,"column":20},"end":{"line":201,"column":50}},"65":{"start":{"line":202,"column":20},"end":{"line":202,"column":63}},"66":{"start":{"line":204,"column":20},"end":{"line":204,"column":50}},"67":{"start":{"line":205,"column":20},"end":{"line":205,"column":64}},"68":{"start":{"line":207,"column":16},"end":{"line":207,"column":29}},"69":{"start":{"line":209,"column":16},"end":{"line":212,"column":17}},"70":{"start":{"line":210,"column":20},"end":{"line":210,"column":34}},"71":{"start":{"line":211,"column":20},"end":{"line":211,"column":27}},"72":{"start":{"line":213,"column":16},"end":{"line":213,"column":26}},"73":{"start":{"line":219,"column":8},"end":{"line":230,"column":9}},"74":{"start":{"line":220,"column":12},"end":{"line":220,"column":60}},"75":{"start":{"line":221,"column":12},"end":{"line":222,"column":31}},"76":{"start":{"line":222,"column":16},"end":{"line":222,"column":31}},"77":{"start":{"line":223,"column":12},"end":{"line":223,"column":25}},"78":{"start":{"line":225,"column":12},"end":{"line":228,"column":13}},"79":{"start":{"line":226,"column":16},"end":{"line":226,"column":30}},"80":{"start":{"line":227,"column":16},"end":{"line":227,"column":33}},"81":{"start":{"line":229,"column":12},"end":{"line":229,"column":22}},"82":{"start":{"line":233,"column":4},"end":{"line":247,"column":5}},"83":{"start":{"line":234,"column":8},"end":{"line":234,"column":31}},"84":{"start":{"line":236,"column":8},"end":{"line":239,"column":15}},"85":{"start":{"line":237,"column":12},"end":{"line":239,"column":15}},"86":{"start":{"line":238,"column":16},"end":{"line":238,"column":39}},"87":{"start":{"line":240,"column":8},"end":{"line":243,"column":15}},"88":{"start":{"line":241,"column":12},"end":{"line":243,"column":15}},"89":{"start":{"line":242,"column":16},"end":{"line":242,"column":39}},"90":{"start":{"line":245,"column":8},"end":{"line":246,"column":57}},"91":{"start":{"line":246,"column":12},"end":{"line":246,"column":57}},"92":{"start":{"line":249,"column":4},"end":{"line":287,"column":5}},"93":{"start":{"line":252,"column":8},"end":{"line":257,"column":11}},"94":{"start":{"line":253,"column":12},"end":{"line":254,"column":23}},"95":{"start":{"line":254,"column":16},"end":{"line":254,"column":23}},"96":{"start":{"line":255,"column":12},"end":{"line":256,"column":59}},"97":{"start":{"line":256,"column":16},"end":{"line":256,"column":59}},"98":{"start":{"line":260,"column":8},"end":{"line":283,"column":11}},"99":{"start":{"line":261,"column":12},"end":{"line":261,"column":36}},"100":{"start":{"line":262,"column":12},"end":{"line":263,"column":23}},"101":{"start":{"line":263,"column":16},"end":{"line":263,"column":23}},"102":{"start":{"line":265,"column":12},"end":{"line":282,"column":35}},"103":{"start":{"line":266,"column":16},"end":{"line":266,"column":42}},"104":{"start":{"line":267,"column":16},"end":{"line":270,"column":19}},"105":{"start":{"line":268,"column":20},"end":{"line":269,"column":45}},"106":{"start":{"line":269,"column":24},"end":{"line":269,"column":45}},"107":{"start":{"line":271,"column":16},"end":{"line":278,"column":39}},"108":{"start":{"line":272,"column":20},"end":{"line":276,"column":21}},"109":{"start":{"line":273,"column":24},"end":{"line":273,"column":81}},"110":{"start":{"line":274,"column":24},"end":{"line":274,"column":49}},"111":{"start":{"line":275,"column":24},"end":{"line":275,"column":41}},"112":{"start":{"line":278,"column":20},"end":{"line":278,"column":39}},"113":{"start":{"line":281,"column":19},"end":{"line":282,"column":35}},"114":{"start":{"line":282,"column":16},"end":{"line":282,"column":35}},"115":{"start":{"line":286,"column":8},"end":{"line":286,"column":26}},"116":{"start":{"line":289,"column":4},"end":{"line":310,"column":5}},"117":{"start":{"line":290,"column":8},"end":{"line":309,"column":11}},"118":{"start":{"line":291,"column":12},"end":{"line":295,"column":13}},"119":{"start":{"line":292,"column":16},"end":{"line":293,"column":41}},"120":{"start":{"line":293,"column":20},"end":{"line":293,"column":41}},"121":{"start":{"line":294,"column":16},"end":{"line":294,"column":26}},"122":{"start":{"line":296,"column":12},"end":{"line":308,"column":13}},"123":{"start":{"line":297,"column":16},"end":{"line":300,"column":57}},"124":{"start":{"line":298,"column":20},"end":{"line":298,"column":77}},"125":{"start":{"line":299,"column":21},"end":{"line":300,"column":57}},"126":{"start":{"line":300,"column":20},"end":{"line":300,"column":57}},"127":{"start":{"line":301,"column":16},"end":{"line":303,"column":32}},"128":{"start":{"line":305,"column":16},"end":{"line":306,"column":41}},"129":{"start":{"line":306,"column":20},"end":{"line":306,"column":41}},"130":{"start":{"line":307,"column":16},"end":{"line":307,"column":26}},"131":{"start":{"line":312,"column":4},"end":{"line":312,"column":21}}},"branchMap":{"1":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":49},"end":{"line":58,"column":62}},{"start":{"line":58,"column":65},"end":{"line":58,"column":80}}]},"2":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":65},"end":{"line":58,"column":74}},{"start":{"line":58,"column":78},"end":{"line":58,"column":80}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]},"4":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":15},"end":{"line":68,"column":71}},{"start":{"line":68,"column":75},"end":{"line":68,"column":78}}]},"5":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"6":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]},"7":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"8":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]},"9":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"10":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":8}},{"start":{"line":158,"column":8},"end":{"line":158,"column":8}}]},"11":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":163,"column":8}},{"start":{"line":163,"column":8},"end":{"line":163,"column":8}}]},"12":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":12},"end":{"line":165,"column":12}},{"start":{"line":165,"column":12},"end":{"line":165,"column":12}}]},"13":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":8}},{"start":{"line":169,"column":8},"end":{"line":169,"column":8}}]},"14":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":174,"column":12}},{"start":{"line":174,"column":12},"end":{"line":174,"column":12}}]},"15":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"16":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":8},"end":{"line":182,"column":27}},{"start":{"line":182,"column":31},"end":{"line":182,"column":39}}]},"17":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":20},"end":{"line":188,"column":37}},{"start":{"line":188,"column":41},"end":{"line":188,"column":46}}]},"18":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"19":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":8},"end":{"line":192,"column":26}},{"start":{"line":192,"column":30},"end":{"line":192,"column":46}}]},"20":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":16},"end":{"line":200,"column":16}},{"start":{"line":200,"column":16},"end":{"line":200,"column":16}}]},"21":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":16},"end":{"line":209,"column":16}},{"start":{"line":209,"column":16},"end":{"line":209,"column":16}}]},"22":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":12},"end":{"line":221,"column":12}},{"start":{"line":221,"column":12},"end":{"line":221,"column":12}}]},"23":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":12},"end":{"line":225,"column":12}},{"start":{"line":225,"column":12},"end":{"line":225,"column":12}}]},"24":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":8}},{"start":{"line":236,"column":8},"end":{"line":236,"column":8}}]},"25":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":240,"column":8}},{"start":{"line":240,"column":8},"end":{"line":240,"column":8}}]},"26":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":8}},{"start":{"line":245,"column":8},"end":{"line":245,"column":8}}]},"27":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":12},"end":{"line":253,"column":12}},{"start":{"line":253,"column":12},"end":{"line":253,"column":12}}]},"28":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":12},"end":{"line":255,"column":12}},{"start":{"line":255,"column":12},"end":{"line":255,"column":12}}]},"29":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":12},"end":{"line":262,"column":12}},{"start":{"line":262,"column":12},"end":{"line":262,"column":12}}]},"30":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":16},"end":{"line":262,"column":23}},{"start":{"line":262,"column":27},"end":{"line":262,"column":41}}]},"31":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":12},"end":{"line":265,"column":12}},{"start":{"line":265,"column":12},"end":{"line":265,"column":12}}]},"32":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":20},"end":{"line":268,"column":20}},{"start":{"line":268,"column":20},"end":{"line":268,"column":20}}]},"33":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":16},"end":{"line":271,"column":16}},{"start":{"line":271,"column":16},"end":{"line":271,"column":16}}]},"34":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":20},"end":{"line":272,"column":20}},{"start":{"line":272,"column":20},"end":{"line":272,"column":20}}]},"35":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":24},"end":{"line":272,"column":52}},{"start":{"line":272,"column":56},"end":{"line":272,"column":87}}]},"36":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":19},"end":{"line":281,"column":19}},{"start":{"line":281,"column":19},"end":{"line":281,"column":19}}]},"37":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":12},"end":{"line":291,"column":12}},{"start":{"line":291,"column":12},"end":{"line":291,"column":12}}]},"38":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":16},"end":{"line":292,"column":16}},{"start":{"line":292,"column":16},"end":{"line":292,"column":16}}]},"39":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":16},"end":{"line":297,"column":16}},{"start":{"line":297,"column":16},"end":{"line":297,"column":16}}]},"40":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":21},"end":{"line":299,"column":21}},{"start":{"line":299,"column":21},"end":{"line":299,"column":21}}]},"41":{"line":301,"type":"cond-expr","locations":[{"start":{"line":302,"column":22},"end":{"line":302,"column":44}},{"start":{"line":303,"column":22},"end":{"line":303,"column":31}}]},"42":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":16},"end":{"line":305,"column":16}},{"start":{"line":305,"column":16},"end":{"line":305,"column":16}}]}},"code":["\"use strict\";","var path     = require(\"path\"),","    fs       = require(\"fs\"),","    pkg      = require(\"./package.json\"),","    util     = require(\"./util\");","","util.setup();","","var protobuf = require(util.pathToProtobufJs),","    minimist = require(\"minimist\"),","    chalk    = require(\"chalk\"),","    glob     = require(\"glob\");","","var targets  = util.requireAll(\"./targets\");","","/**"," * Runs pbjs programmatically."," * @param {string[]} args Command line arguments"," * @param {function(?Error, string=)} [callback] Optional completion callback"," * @returns {number|undefined} Exit code, if known"," */","exports.main = function main(args, callback) {","    var lintDefault = \"eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins\";","    var argv = minimist(args, {","        alias: {","            target: \"t\",","            out: \"o\",","            path: \"p\",","            wrap: \"w\",","            root: \"r\",","            lint: \"l\",","            // backward compatibility:","            \"force-long\": \"strict-long\",","            \"force-message\": \"strict-message\"","        },","        string: [ \"target\", \"out\", \"path\", \"wrap\", \"root\", \"lint\" ],","        boolean: [ \"create\", \"encode\", \"decode\", \"verify\", \"convert\", \"delimited\", \"beautify\", \"comments\", \"es6\", \"sparse\", \"keep-case\", \"force-long\", \"force-message\" ],","        default: {","            target: \"json\",","            create: true,","            encode: true,","            decode: true,","            verify: true,","            convert: true,","            delimited: true,","            beautify: true,","            comments: true,","            es6: null,","            lint: lintDefault,","            \"keep-case\": false,","            \"force-long\": false,","            \"force-message\": false","        }","    });","","    var target = targets[argv.target],","        files  = argv._,","        paths  = typeof argv.path === \"string\" ? [ argv.path ] : argv.path || [];","","    // alias hyphen args in camel case","    Object.keys(argv).forEach(function(key) {","        var camelKey = key.replace(/-([a-z])/g, function($0, $1) { return $1.toUpperCase(); });","        if (camelKey !== key)","            argv[camelKey] = argv[key];","    });","","    // protobuf.js package directory contains additional, otherwise non-bundled google types","    paths.push(path.relative(process.cwd(), path.join(__dirname, \"..\")) || \".\");","","    if (!files.length) {","        var descs = Object.keys(targets).filter(function(key) { return !targets[key].private; }).map(function(key) {","            return \"                  \" + util.pad(key, 14, true) + targets[key].description;","        });","        if (callback)","            callback(Error(\"usage\")); // eslint-disable-line callback-return","        else","            process.stderr.write([","                \"protobuf.js v\" + pkg.version + \" CLI for JavaScript\",","                \"\",","                chalk.bold.white(\"Translates between file formats and generates static code.\"),","                \"\",","                \"  -t, --target     Specifies the target format. Also accepts a path to require a custom target.\",","                \"\",","                descs.join(\"\\n\"),","                \"\",","                \"  -p, --path       Adds a directory to the include path.\",","                \"\",","                \"  -o, --out        Saves to a file instead of writing to stdout.\",","                \"\",","                \"  --sparse         Exports only those types referenced from a main file (experimental).\",","                \"\",","                chalk.bold.gray(\"   Module targets only:\"),","                \"\",","                \"  -w, --wrap       Specifies the wrapper to use. Also accepts a path to require a custom wrapper.\",","                \"\",","                \"                   default   Default wrapper supporting both CommonJS and AMD\",","                \"                   commonjs  CommonJS wrapper\",","                \"                   amd       AMD wrapper\",","                \"                   es6       ES6 wrapper (implies --es6)\",","                \"\",","                \"  -r, --root       Specifies an alternative protobuf.roots name.\",","                \"\",","                \"  -l, --lint       Linter configuration. Defaults to protobuf.js-compatible rules:\",","                \"\",","                \"                   \" + lintDefault,","                \"\",","                \"  --es6            Enables ES6 syntax (const/let instead of var)\",","                \"\",","                chalk.bold.gray(\"   Proto sources only:\"),","                \"\",","                \"  --keep-case      Keeps field casing instead of converting to camel case.\",","                \"\",","                chalk.bold.gray(\"   Static targets only:\"),","                \"\",","                \"  --no-create      Does not generate create functions used for reflection compatibility.\",","                \"  --no-encode      Does not generate encode functions.\",","                \"  --no-decode      Does not generate decode functions.\",","                \"  --no-verify      Does not generate verify functions.\",","                \"  --no-convert     Does not generate convert functions like from/toObject\",","                \"  --no-delimited   Does not generate delimited encode/decode functions.\",","                \"  --no-beautify    Does not beautify generated code.\",","                \"  --no-comments    Does not output any JSDoc comments.\",","                \"\",","                \"  --force-long     Enfores the use of 'Long' for s-/u-/int64 and s-/fixed64 fields.\",","                \"  --force-message  Enfores the use of message instances instead of plain objects.\",","                \"\",","                \"usage: \" + chalk.bold.green(\"pbjs\") + \" [options] file1.proto file2.json ...\" + chalk.gray(\"  (or)  \") + \"other | \" + chalk.bold.green(\"pbjs\") + \" [options] -\",","                \"\"","            ].join(\"\\n\"));","        return 1;","    }","","    if (typeof argv[\"strict-long\"] === \"boolean\")","        argv[\"force-long\"] = argv[\"strict-long\"];","","    // Resolve glob expressions","    for (var i = 0; i < files.length;) {","        if (glob.hasMagic(files[i])) {","            var matches = glob.sync(files[i]);","            Array.prototype.splice.apply(files, [i, 1].concat(matches));","            i += matches.length;","        } else","            ++i;","    }","","    // Require custom target","    if (!target)","        target = require(path.resolve(process.cwd(), argv.target));","","    var root = new protobuf.Root();","","    var mainFiles = [];","","    // Search include paths when resolving imports","    root.resolvePath = function pbjsResolvePath(origin, target) {","        var normOrigin = protobuf.util.path.normalize(origin),","            normTarget = protobuf.util.path.normalize(target);","        if (!normOrigin)","            mainFiles.push(normTarget);","","        var resolved = protobuf.util.path.resolve(normOrigin, normTarget, true);","        var idx = resolved.lastIndexOf(\"google/protobuf/\");","        if (idx > -1) {","            var altname = resolved.substring(idx);","            if (altname in protobuf.common)","                resolved = altname;","        }","","        if (fs.existsSync(resolved))","            return resolved;","","        for (var i = 0; i < paths.length; ++i) {","            var iresolved = protobuf.util.path.resolve(paths[i] + \"/\", target);","            if (fs.existsSync(iresolved))","                return iresolved;","        }","","        return resolved;","    };","","    // Use es6 syntax if not explicitly specified on the command line and the es6 wrapper is used","    if (argv.wrap === \"es6\" || argv.es6) {","        argv.wrap = \"es6\";","        argv.es6 = true;","    }","","    var parseOptions = {","        \"keepCase\": argv[\"keep-case\"] || false","    };","","    // Read from stdin","    if (files.length === 1 && files[0] === \"-\") {","        var data = [];","        process.stdin.on(\"data\", function(chunk) {","            data.push(chunk);","        });","        process.stdin.on(\"end\", function() {","            var source = Buffer.concat(data).toString(\"utf8\");","            try {","                if (source.charAt(0) !== \"{\") {","                    protobuf.parse.filename = \"-\";","                    protobuf.parse(source, root, parseOptions);","                } else {","                    var json = JSON.parse(source);","                    root.setOptions(json.options).addJSON(json);","                }","                callTarget();","            } catch (err) {","                if (callback) {","                    callback(err);","                    return;","                }","                throw err;","            }","        });","","    // Load from disk","    } else {","        try {","            root.loadSync(files, parseOptions).resolveAll(); // sync is deterministic while async is not","            if (argv.sparse)","                sparsify(root);","            callTarget();","        } catch (err) {","            if (callback) {","                callback(err);","                return undefined;","            }","            throw err;","        }","    }","","    function markReferenced(tobj) {","        tobj.referenced = true;","        // also mark a type's fields and oneofs","        if (tobj.fieldsArray)","            tobj.fieldsArray.forEach(function(fobj) {","                fobj.referenced = true;","            });","        if (tobj.oneofsArray)","            tobj.oneofsArray.forEach(function(oobj) {","                oobj.referenced = true;","            });","        // also mark an extension field's extended type, but not its (other) fields","        if (tobj.extensionField)","            tobj.extensionField.parent.referenced = true;","    }","","    function sparsify(root) {","","        // 1. mark directly or indirectly referenced objects","        util.traverse(root, function(obj) {","            if (!obj.filename)","                return;","            if (mainFiles.indexOf(obj.filename) > -1)","                util.traverseResolved(obj, markReferenced);","        });","","        // 2. empty unreferenced objects","        util.traverse(root, function(obj) {","            var parent = obj.parent;","            if (!parent || obj.referenced) // root or referenced","                return;","            // remove unreferenced namespaces","            if (obj instanceof protobuf.Namespace) {","                var hasReferenced = false;","                util.traverse(obj, function(iobj) {","                    if (iobj.referenced)","                        hasReferenced = true;","                });","                if (hasReferenced) { // replace with plain namespace if a namespace subclass","                    if (obj instanceof protobuf.Type || obj instanceof protobuf.Service) {","                        var robj = new protobuf.Namespace(obj.name, obj.options);","                        robj.nested = obj.nested;","                        parent.add(robj);","                    }","                } else // remove completely if nothing inside is referenced","                    parent.remove(obj);","","            // remove everything else unreferenced","            } else if (!(obj instanceof protobuf.Namespace))","                parent.remove(obj);","        });","","        // 3. validate that everything is fine","        root.resolveAll();","    }","","    function callTarget() {","        target(root, argv, function targetCallback(err, output) {","            if (err) {","                if (callback)","                    return callback(err);","                throw err;","            }","            try {","                if (argv.out)","                    fs.writeFileSync(argv.out, output, { encoding: \"utf8\" });","                else if (!callback)","                    process.stdout.write(output, \"utf8\");","                return callback","                    ? callback(null, output)","                    : undefined;","            } catch (err) {","                if (callback)","                    return callback(err);","                throw err;","            }","        });","    }","","    return undefined;","};",""],"l":{"2":4,"7":4,"9":0,"14":0,"22":0,"23":0,"24":0,"56":0,"61":0,"62":0,"63":0,"64":0,"68":0,"70":0,"71":0,"72":0,"74":0,"75":0,"77":0,"130":0,"133":0,"134":0,"137":0,"138":0,"139":0,"140":0,"141":0,"143":0,"147":0,"148":0,"150":0,"152":0,"155":0,"156":0,"158":0,"159":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"169":0,"170":0,"172":0,"173":0,"174":0,"175":0,"178":0,"182":0,"183":0,"184":0,"187":0,"192":0,"193":0,"194":0,"195":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"204":0,"205":0,"207":0,"209":0,"210":0,"211":0,"213":0,"219":0,"220":0,"221":0,"222":0,"223":0,"225":0,"226":0,"227":0,"229":0,"233":1,"234":0,"236":0,"237":0,"238":0,"240":0,"241":0,"242":0,"245":0,"246":0,"249":1,"252":0,"253":0,"254":0,"255":0,"256":0,"260":0,"261":0,"262":0,"263":0,"265":0,"266":0,"267":0,"268":0,"269":0,"271":0,"272":0,"273":0,"274":0,"275":0,"278":0,"281":0,"282":0,"286":0,"289":1,"290":0,"291":0,"292":0,"293":0,"294":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"305":0,"306":0,"307":0,"312":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/cli/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/cli/util.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":40,"79":40,"80":40,"81":40,"82":0,"83":1,"84":0,"85":1,"86":4,"87":4,"88":4,"89":0,"90":0,"91":4,"92":4,"93":4,"94":40,"95":4,"96":36,"97":36,"98":0,"99":0,"100":4,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":1,"121":0,"122":1,"123":1,"124":0,"125":1,"126":0,"127":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[39,1],"27":[0,0],"28":[4,4],"29":[0,4],"30":[4,36],"31":[36,36],"32":[0,36],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":40,"16":0,"17":4,"18":40,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"basenameCompare","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}}},"2":{"name":"requireAll","line":33,"loc":{"start":{"line":33,"column":21},"end":{"line":33,"column":50}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":18},"end":{"line":37,"column":33}}},"4":{"name":"traverse","line":46,"loc":{"start":{"line":46,"column":19},"end":{"line":46,"column":50}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":36},"end":{"line":49,"column":52}}},"6":{"name":"(anonymous_6)","line":53,"loc":{"start":{"line":53,"column":36},"end":{"line":53,"column":52}}},"7":{"name":"(anonymous_7)","line":57,"loc":{"start":{"line":57,"column":37},"end":{"line":57,"column":54}}},"8":{"name":"(anonymous_8)","line":61,"loc":{"start":{"line":61,"column":36},"end":{"line":61,"column":53}}},"9":{"name":"traverseResolved","line":66,"loc":{"start":{"line":66,"column":27},"end":{"line":66,"column":66}}},"10":{"name":"inspect","line":78,"loc":{"start":{"line":78,"column":18},"end":{"line":78,"column":51}}},"11":{"name":"(anonymous_11)","line":98,"loc":{"start":{"line":98,"column":35},"end":{"line":98,"column":51}}},"12":{"name":"(anonymous_12)","line":102,"loc":{"start":{"line":102,"column":35},"end":{"line":102,"column":51}}},"13":{"name":"(anonymous_13)","line":106,"loc":{"start":{"line":106,"column":36},"end":{"line":106,"column":54}}},"14":{"name":"(anonymous_14)","line":110,"loc":{"start":{"line":110,"column":35},"end":{"line":110,"column":52}}},"15":{"name":"modExists","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":34}}},"16":{"name":"modInstall","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":29}}},"17":{"name":"(anonymous_17)","line":135,"loc":{"start":{"line":135,"column":16},"end":{"line":135,"column":27}}},"18":{"name":"(anonymous_18)","line":144,"loc":{"start":{"line":144,"column":32},"end":{"line":144,"column":47}}},"19":{"name":"(anonymous_19)","line":159,"loc":{"start":{"line":159,"column":15},"end":{"line":159,"column":41}}},"20":{"name":"(anonymous_20)","line":170,"loc":{"start":{"line":170,"column":41},"end":{"line":170,"column":58}}},"21":{"name":"(anonymous_21)","line":178,"loc":{"start":{"line":178,"column":14},"end":{"line":178,"column":36}}},"22":{"name":"reserved","line":184,"loc":{"start":{"line":184,"column":19},"end":{"line":184,"column":43}}},"23":{"name":"(anonymous_23)","line":191,"loc":{"start":{"line":191,"column":45},"end":{"line":191,"column":64}}},"24":{"name":"safeProp_dn","line":192,"loc":{"start":{"line":192,"column":11},"end":{"line":192,"column":38}}},"25":{"name":"(anonymous_25)","line":199,"loc":{"start":{"line":199,"column":23},"end":{"line":199,"column":38}}},"26":{"name":"(anonymous_26)","line":200,"loc":{"start":{"line":200,"column":43},"end":{"line":200,"column":64}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":4,"column":45}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":11}},"3":{"start":{"line":8,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":34}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":36}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"8":{"start":{"line":19,"column":0},"end":{"line":31,"column":1}},"9":{"start":{"line":20,"column":4},"end":{"line":21,"column":69}},"10":{"start":{"line":22,"column":4},"end":{"line":29,"column":5}},"11":{"start":{"line":23,"column":8},"end":{"line":24,"column":57}},"12":{"start":{"line":25,"column":8},"end":{"line":26,"column":22}},"13":{"start":{"line":26,"column":12},"end":{"line":26,"column":22}},"14":{"start":{"line":27,"column":8},"end":{"line":28,"column":21}},"15":{"start":{"line":28,"column":12},"end":{"line":28,"column":21}},"16":{"start":{"line":30,"column":4},"end":{"line":30,"column":40}},"17":{"start":{"line":33,"column":0},"end":{"line":44,"column":2}},"18":{"start":{"line":34,"column":4},"end":{"line":34,"column":46}},"19":{"start":{"line":35,"column":4},"end":{"line":36,"column":17}},"20":{"start":{"line":37,"column":4},"end":{"line":42,"column":7}},"21":{"start":{"line":38,"column":8},"end":{"line":39,"column":42}},"22":{"start":{"line":40,"column":8},"end":{"line":41,"column":62}},"23":{"start":{"line":41,"column":12},"end":{"line":41,"column":62}},"24":{"start":{"line":43,"column":4},"end":{"line":43,"column":15}},"25":{"start":{"line":46,"column":0},"end":{"line":64,"column":2}},"26":{"start":{"line":47,"column":4},"end":{"line":47,"column":16}},"27":{"start":{"line":48,"column":4},"end":{"line":51,"column":11}},"28":{"start":{"line":49,"column":8},"end":{"line":51,"column":11}},"29":{"start":{"line":50,"column":12},"end":{"line":50,"column":32}},"30":{"start":{"line":52,"column":4},"end":{"line":55,"column":11}},"31":{"start":{"line":53,"column":8},"end":{"line":55,"column":11}},"32":{"start":{"line":54,"column":12},"end":{"line":54,"column":32}},"33":{"start":{"line":56,"column":4},"end":{"line":59,"column":11}},"34":{"start":{"line":57,"column":8},"end":{"line":59,"column":11}},"35":{"start":{"line":58,"column":12},"end":{"line":58,"column":33}},"36":{"start":{"line":60,"column":4},"end":{"line":63,"column":11}},"37":{"start":{"line":61,"column":8},"end":{"line":63,"column":11}},"38":{"start":{"line":62,"column":12},"end":{"line":62,"column":33}},"39":{"start":{"line":66,"column":0},"end":{"line":76,"column":2}},"40":{"start":{"line":67,"column":4},"end":{"line":67,"column":16}},"41":{"start":{"line":68,"column":4},"end":{"line":69,"column":51}},"42":{"start":{"line":69,"column":8},"end":{"line":69,"column":51}},"43":{"start":{"line":70,"column":4},"end":{"line":71,"column":54}},"44":{"start":{"line":71,"column":8},"end":{"line":71,"column":54}},"45":{"start":{"line":72,"column":4},"end":{"line":73,"column":58}},"46":{"start":{"line":73,"column":8},"end":{"line":73,"column":58}},"47":{"start":{"line":74,"column":4},"end":{"line":75,"column":59}},"48":{"start":{"line":75,"column":8},"end":{"line":75,"column":59}},"49":{"start":{"line":78,"column":0},"end":{"line":114,"column":2}},"50":{"start":{"line":79,"column":4},"end":{"line":80,"column":18}},"51":{"start":{"line":80,"column":8},"end":{"line":80,"column":18}},"52":{"start":{"line":81,"column":4},"end":{"line":81,"column":33}},"53":{"start":{"line":82,"column":4},"end":{"line":82,"column":16}},"54":{"start":{"line":83,"column":4},"end":{"line":84,"column":20}},"55":{"start":{"line":84,"column":8},"end":{"line":84,"column":20}},"56":{"start":{"line":85,"column":4},"end":{"line":85,"column":74}},"57":{"start":{"line":86,"column":4},"end":{"line":89,"column":6}},"58":{"start":{"line":90,"column":4},"end":{"line":95,"column":5}},"59":{"start":{"line":91,"column":8},"end":{"line":92,"column":69}},"60":{"start":{"line":92,"column":12},"end":{"line":92,"column":69}},"61":{"start":{"line":93,"column":8},"end":{"line":94,"column":68}},"62":{"start":{"line":94,"column":12},"end":{"line":94,"column":68}},"63":{"start":{"line":96,"column":4},"end":{"line":96,"column":16}},"64":{"start":{"line":97,"column":4},"end":{"line":100,"column":11}},"65":{"start":{"line":98,"column":8},"end":{"line":100,"column":11}},"66":{"start":{"line":99,"column":12},"end":{"line":99,"column":51}},"67":{"start":{"line":101,"column":4},"end":{"line":104,"column":11}},"68":{"start":{"line":102,"column":8},"end":{"line":104,"column":11}},"69":{"start":{"line":103,"column":12},"end":{"line":103,"column":51}},"70":{"start":{"line":105,"column":4},"end":{"line":108,"column":11}},"71":{"start":{"line":106,"column":8},"end":{"line":108,"column":11}},"72":{"start":{"line":107,"column":12},"end":{"line":107,"column":53}},"73":{"start":{"line":109,"column":4},"end":{"line":112,"column":11}},"74":{"start":{"line":110,"column":8},"end":{"line":112,"column":11}},"75":{"start":{"line":111,"column":12},"end":{"line":111,"column":52}},"76":{"start":{"line":113,"column":4},"end":{"line":113,"column":25}},"77":{"start":{"line":116,"column":0},"end":{"line":126,"column":1}},"78":{"start":{"line":117,"column":4},"end":{"line":124,"column":5}},"79":{"start":{"line":118,"column":8},"end":{"line":123,"column":26}},"80":{"start":{"line":119,"column":12},"end":{"line":119,"column":100}},"81":{"start":{"line":120,"column":12},"end":{"line":122,"column":92}},"82":{"start":{"line":125,"column":4},"end":{"line":125,"column":17}},"83":{"start":{"line":128,"column":0},"end":{"line":133,"column":1}},"84":{"start":{"line":129,"column":4},"end":{"line":132,"column":7}},"85":{"start":{"line":135,"column":0},"end":{"line":157,"column":2}},"86":{"start":{"line":136,"column":4},"end":{"line":136,"column":66}},"87":{"start":{"line":137,"column":4},"end":{"line":137,"column":78}},"88":{"start":{"line":138,"column":4},"end":{"line":141,"column":5}},"89":{"start":{"line":139,"column":8},"end":{"line":139,"column":68}},"90":{"start":{"line":140,"column":8},"end":{"line":140,"column":40}},"91":{"start":{"line":142,"column":4},"end":{"line":142,"column":31}},"92":{"start":{"line":143,"column":4},"end":{"line":143,"column":21}},"93":{"start":{"line":144,"column":4},"end":{"line":152,"column":7}},"94":{"start":{"line":145,"column":8},"end":{"line":146,"column":19}},"95":{"start":{"line":146,"column":12},"end":{"line":146,"column":19}},"96":{"start":{"line":147,"column":8},"end":{"line":147,"column":70}},"97":{"start":{"line":148,"column":8},"end":{"line":151,"column":9}},"98":{"start":{"line":149,"column":12},"end":{"line":149,"column":78}},"99":{"start":{"line":150,"column":12},"end":{"line":150,"column":47}},"100":{"start":{"line":153,"column":4},"end":{"line":153,"column":38}},"101":{"start":{"line":154,"column":4},"end":{"line":155,"column":15}},"102":{"start":{"line":155,"column":8},"end":{"line":155,"column":15}},"103":{"start":{"line":156,"column":4},"end":{"line":156,"column":24}},"104":{"start":{"line":159,"column":0},"end":{"line":176,"column":2}},"105":{"start":{"line":160,"column":4},"end":{"line":160,"column":41}},"106":{"start":{"line":161,"column":4},"end":{"line":161,"column":13}},"107":{"start":{"line":162,"column":4},"end":{"line":168,"column":5}},"108":{"start":{"line":164,"column":8},"end":{"line":164,"column":96}},"109":{"start":{"line":167,"column":8},"end":{"line":167,"column":83}},"110":{"start":{"line":169,"column":4},"end":{"line":169,"column":93}},"111":{"start":{"line":170,"column":4},"end":{"line":172,"column":7}},"112":{"start":{"line":171,"column":8},"end":{"line":171,"column":62}},"113":{"start":{"line":173,"column":4},"end":{"line":174,"column":51}},"114":{"start":{"line":174,"column":8},"end":{"line":174,"column":51}},"115":{"start":{"line":175,"column":4},"end":{"line":175,"column":40}},"116":{"start":{"line":178,"column":0},"end":{"line":182,"column":2}},"117":{"start":{"line":179,"column":4},"end":{"line":180,"column":40}},"118":{"start":{"line":180,"column":8},"end":{"line":180,"column":40}},"119":{"start":{"line":181,"column":4},"end":{"line":181,"column":15}},"120":{"start":{"line":184,"column":0},"end":{"line":186,"column":2}},"121":{"start":{"line":185,"column":4},"end":{"line":185,"column":333}},"122":{"start":{"line":191,"column":0},"end":{"line":197,"column":27}},"123":{"start":{"line":192,"column":4},"end":{"line":196,"column":6}},"124":{"start":{"line":193,"column":8},"end":{"line":195,"column":25}},"125":{"start":{"line":199,"column":0},"end":{"line":205,"column":2}},"126":{"start":{"line":200,"column":4},"end":{"line":204,"column":7}},"127":{"start":{"line":201,"column":8},"end":{"line":203,"column":17}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":16},"end":{"line":23,"column":33}},{"start":{"line":23,"column":37},"end":{"line":23,"column":56}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":33}},{"start":{"line":24,"column":37},"end":{"line":24,"column":56}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"5":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":33},"end":{"line":30,"column":35}},{"start":{"line":30,"column":38},"end":{"line":30,"column":39}}]},"6":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"8":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"9":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"10":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"11":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"12":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"13":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"14":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"15":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"16":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"17":{"line":85,"type":"cond-expr","locations":[{"start":{"line":85,"column":23},"end":{"line":85,"column":68}},{"start":{"line":85,"column":71},"end":{"line":85,"column":73}}]},"18":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":64},"end":{"line":87,"column":76}},{"start":{"line":87,"column":79},"end":{"line":87,"column":81}}]},"19":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"20":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":8}},{"start":{"line":91,"column":8},"end":{"line":91,"column":8}}]},"21":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"22":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"23":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"24":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"25":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"26":{"line":120,"type":"cond-expr","locations":[{"start":{"line":121,"column":18},"end":{"line":121,"column":56}},{"start":{"line":122,"column":18},"end":{"line":122,"column":91}}]},"27":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":84},"end":{"line":129,"column":91}},{"start":{"line":129,"column":94},"end":{"line":129,"column":111}}]},"28":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":18},"end":{"line":137,"column":44}},{"start":{"line":137,"column":48},"end":{"line":137,"column":77}}]},"29":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"30":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8}}]},"31":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":18},"end":{"line":147,"column":40}},{"start":{"line":147,"column":44},"end":{"line":147,"column":69}}]},"32":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"33":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"34":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":15},"end":{"line":160,"column":27}},{"start":{"line":160,"column":31},"end":{"line":160,"column":40}}]},"35":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":56},"end":{"line":169,"column":74}},{"start":{"line":169,"column":78},"end":{"line":169,"column":90}}]},"36":{"line":171,"type":"cond-expr","locations":[{"start":{"line":171,"column":27},"end":{"line":171,"column":52}},{"start":{"line":171,"column":55},"end":{"line":171,"column":61}}]},"37":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"38":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":18},"end":{"line":180,"column":27}},{"start":{"line":180,"column":30},"end":{"line":180,"column":39}}]},"39":{"line":193,"type":"cond-expr","locations":[{"start":{"line":194,"column":14},"end":{"line":194,"column":28}},{"start":{"line":195,"column":14},"end":{"line":195,"column":24}}]},"40":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":15},"end":{"line":193,"column":37}},{"start":{"line":193,"column":41},"end":{"line":193,"column":63}}]},"41":{"line":201,"type":"cond-expr","locations":[{"start":{"line":202,"column":14},"end":{"line":202,"column":27}},{"start":{"line":203,"column":14},"end":{"line":203,"column":16}}]}},"code":["\"use strict\";","var fs            = require(\"fs\"),","    path          = require(\"path\"),","    child_process = require(\"child_process\");","","var semver;","","try {","    // installed as a peer dependency","    require.resolve(\"protobufjs\");","    exports.pathToProtobufJs = \"protobufjs\";","} catch (e) {","    // local development, i.e. forked from github","    exports.pathToProtobufJs = \"..\";","}","","var protobuf = require(exports.pathToProtobufJs);","","function basenameCompare(a, b) {","    var aa = String(a).replace(/\\.\\w+$/, \"\").split(/(-?\\d*\\.?\\d+)/g),","        bb = String(b).replace(/\\.\\w+$/, \"\").split(/(-?\\d*\\.?\\d+)/g);","    for (var i = 0, k = Math.min(aa.length, bb.length); i < k; i++) {","        var x = parseFloat(aa[i]) || aa[i].toLowerCase(),","            y = parseFloat(bb[i]) || bb[i].toLowerCase();","        if (x < y)","            return -1;","        if (x > y)","            return 1;","    }","    return a.length < b.length ? -1 : 0;","}","","exports.requireAll = function requireAll(dirname) {","    dirname   = path.join(__dirname, dirname);","    var files = fs.readdirSync(dirname).sort(basenameCompare),","        all = {};","    files.forEach(function(file) {","        var basename = path.basename(file, \".js\"),","            extname  = path.extname(file);","        if (extname === \".js\")","            all[basename] = require(path.join(dirname, file));","    });","    return all;","};","","exports.traverse = function traverse(current, fn) {","    fn(current);","    if (current.fieldsArray)","        current.fieldsArray.forEach(function(field) {","            traverse(field, fn);","        });","    if (current.oneofsArray)","        current.oneofsArray.forEach(function(oneof) {","            traverse(oneof, fn);","        });","    if (current.methodsArray)","        current.methodsArray.forEach(function(method) {","            traverse(method, fn);","        });","    if (current.nestedArray)","        current.nestedArray.forEach(function(nested) {","            traverse(nested, fn);","        });","};","","exports.traverseResolved = function traverseResolved(current, fn) {","    fn(current);","    if (current.resolvedType)","        traverseResolved(current.resolvedType, fn);","    if (current.resolvedKeyType)","        traverseResolved(current.resolvedKeyType, fn);","    if (current.resolvedRequestType)","        traverseResolved(current.resolvedRequestType, fn);","    if (current.resolvedResponseType)","        traverseResolved(current.resolvedResponseType, fn);","};","","exports.inspect = function inspect(object, indent) {","    if (!object)","        return \"\";","    var chalk = require(\"chalk\");","    var sb = [];","    if (!indent)","        indent = \"\";","    var ind = indent ? indent.substring(0, indent.length - 2) + \"└ \" : \"\";","    sb.push(","        ind + chalk.bold(object.toString()) + (object.visible ? \" (visible)\" : \"\"),","        indent + chalk.gray(\"parent: \") + object.parent","    );","    if (object instanceof protobuf.Field) {","        if (object.extend !== undefined)","            sb.push(indent + chalk.gray(\"extend: \") + object.extend);","        if (object.partOf)","            sb.push(indent + chalk.gray(\"oneof : \") + object.oneof);","    }","    sb.push(\"\");","    if (object.fieldsArray)","        object.fieldsArray.forEach(function(field) {","            sb.push(inspect(field, indent + \"  \"));","        });","    if (object.oneofsArray)","        object.oneofsArray.forEach(function(oneof) {","            sb.push(inspect(oneof, indent + \"  \"));","        });","    if (object.methodsArray)","        object.methodsArray.forEach(function(service) {","            sb.push(inspect(service, indent + \"  \"));","        });","    if (object.nestedArray)","        object.nestedArray.forEach(function(nested) {","            sb.push(inspect(nested, indent + \"  \"));","        });","    return sb.join(\"\\n\");","};","","function modExists(name, version) {","    for (var i = 0; i < module.paths.length; ++i) {","        try {","            var pkg = JSON.parse(fs.readFileSync(path.join(module.paths[i], name, \"package.json\")));","            return semver","                ? semver.satisfies(pkg.version, version)","                : parseInt(pkg.version, 10) === parseInt(version.replace(/^[\\^~]/, \"\"), 10); // used for semver only","        } catch (e) {/**/}","    }","    return false;","}","","function modInstall(install) {","    child_process.execSync(\"npm --silent install \" + (typeof install === \"string\" ? install : install.join(\" \")), {","        cwd: __dirname,","        stdio: \"ignore\"","    });","}","","exports.setup = function() {","    var pkg = require(path.join(__dirname, \"..\", \"package.json\"));","    var version = pkg.dependencies[\"semver\"] || pkg.devDependencies[\"semver\"];","    if (!modExists(\"semver\", version)) {","        process.stderr.write(\"installing semver@\" + version + \"\\n\");","        modInstall(\"semver@\" + version);","    }","    semver = require(\"semver\"); // used from now on for version comparison","    var install = [];","    pkg.cliDependencies.forEach(function(name) {","        if (name === \"semver\")","            return;","        version = pkg.dependencies[name] || pkg.devDependencies[name];","        if (!modExists(name, version)) {","            process.stderr.write(\"installing \" + name + \"@\" + version + \"\\n\");","            install.push(name + \"@\" + version);","        }","    });","    require(\"../scripts/postinstall\"); // emit postinstall warning, if any","    if (!install.length)","        return;","    modInstall(install);","};","","exports.wrap = function(OUTPUT, options) {","    var name = options.wrap || \"default\";","    var wrap;","    try {","        // try built-in wrappers first","        wrap = fs.readFileSync(path.join(__dirname, \"wrappers\", name + \".js\")).toString(\"utf8\");","    } catch (e) {","        // otherwise fetch the custom one","        wrap = fs.readFileSync(path.resolve(process.cwd(), name)).toString(\"utf8\");","    }","    wrap = wrap.replace(/\\$DEPENDENCY/g, JSON.stringify(options.dependency || \"protobufjs\"));","    wrap = wrap.replace(/( *)\\$OUTPUT;/, function($0, $1) {","        return $1.length ? OUTPUT.replace(/^/mg, $1) : OUTPUT;","    });","    if (options.lint !== \"\")","        wrap = \"/*\" + options.lint + \"*/\\n\" + wrap;","    return wrap.replace(/\\r?\\n/g, \"\\n\");","};","","exports.pad = function(str, len, l) {","    while (str.length < len)","        str = l ? str + \" \" : \" \" + str;","    return str;","};","","exports.reserved = function reserved(name) {","    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);","};","","// generate dot-notation property accessors where possible. this saves a few chars (i.e. m.hello","// instead of m[\"hello\"]) but has no measurable performance impact (on V8). not present within the","// library itself because the reserved words check requires a rather longish regex.","exports.safeProp = protobuf.util.safeProp = (function(safeProp) {","    return function safeProp_dn(name) {","        return !/^[$\\w]+$/.test(name) || exports.reserved(name)","            ? safeProp(name)","            : \".\" + name;","    };","})(protobuf.util.safeProp);","","exports.jsonSafeProp = function(json) {","    return json.replace(/^( +)\"(\\w+)\":/mg, function($0, $1, $2) {","        return exports.safeProp($2).charAt(0) === \".\"","            ? $1 + $2 + \":\"","            : $0;","    });","};",""],"l":{"2":1,"6":1,"8":1,"10":1,"11":1,"14":0,"17":1,"19":1,"20":0,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"30":0,"33":1,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"43":0,"46":1,"47":0,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"101":0,"102":0,"103":0,"105":0,"106":0,"107":0,"109":0,"110":0,"111":0,"113":0,"116":1,"117":40,"118":40,"119":40,"120":40,"125":0,"128":1,"129":0,"135":1,"136":4,"137":4,"138":4,"139":0,"140":0,"142":4,"143":4,"144":4,"145":40,"146":4,"147":36,"148":36,"149":0,"150":0,"153":4,"154":0,"155":0,"156":0,"159":1,"160":0,"161":0,"162":0,"164":0,"167":0,"169":0,"170":0,"171":0,"173":0,"174":0,"175":0,"178":1,"179":0,"180":0,"181":0,"184":1,"185":0,"191":1,"192":1,"193":0,"199":1,"200":0,"201":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/cli/node_modules/semver/semver.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/cli/node_modules/semver/semver.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":34,"93":34,"94":31,"95":1,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":1,"111":0,"112":0,"113":1,"114":1,"115":0,"116":0,"117":1,"118":1,"119":187,"120":74,"121":74,"122":0,"123":113,"124":0,"125":113,"126":0,"127":113,"128":0,"129":113,"130":113,"131":113,"132":113,"133":0,"134":113,"135":113,"136":113,"137":113,"138":113,"139":0,"140":113,"141":0,"142":113,"143":0,"144":113,"145":113,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":113,"153":113,"154":1,"155":113,"156":113,"157":0,"158":113,"159":1,"160":0,"161":1,"162":74,"163":74,"164":0,"165":74,"166":1,"167":74,"168":0,"169":74,"170":1,"171":31,"172":0,"173":31,"174":0,"175":31,"176":0,"177":31,"178":31,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":1,"249":1,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":1,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":1,"274":1,"275":152,"276":152,"277":152,"278":152,"279":152,"280":152,"281":1,"282":1,"283":0,"284":1,"285":1,"286":0,"287":1,"288":1,"289":0,"290":1,"291":1,"292":0,"293":1,"294":1,"295":74,"296":1,"297":1,"298":0,"299":1,"300":1,"301":0,"302":1,"303":1,"304":0,"305":0,"306":1,"307":1,"308":0,"309":0,"310":1,"311":1,"312":0,"313":1,"314":1,"315":35,"316":1,"317":1,"318":4,"319":1,"320":1,"321":0,"322":1,"323":1,"324":35,"325":1,"326":1,"327":0,"328":1,"329":1,"330":74,"331":74,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":4,"345":4,"346":0,"347":0,"348":0,"349":0,"350":35,"351":35,"352":35,"353":35,"354":0,"355":0,"356":0,"357":74,"358":1,"359":1,"360":74,"361":0,"362":0,"363":0,"364":74,"365":0,"366":74,"367":74,"368":74,"369":74,"370":0,"371":74,"372":74,"373":1,"374":1,"375":74,"376":74,"377":74,"378":0,"379":74,"380":74,"381":0,"382":74,"383":0,"384":74,"385":1,"386":74,"387":1,"388":74,"389":74,"390":0,"391":74,"392":0,"393":74,"394":1,"395":1,"396":39,"397":0,"398":39,"399":0,"400":39,"401":39,"402":39,"403":39,"404":39,"405":39,"406":0,"407":39,"408":1,"409":39,"410":39,"411":39,"412":1,"413":0,"414":1,"415":39,"416":39,"417":39,"418":39,"419":39,"420":39,"421":39,"422":39,"423":39,"424":39,"425":39,"426":39,"427":39,"428":39,"429":39,"430":0,"431":0,"432":39,"433":74,"434":39,"435":1,"436":1,"437":0,"438":0,"439":0,"440":1,"441":39,"442":39,"443":39,"444":39,"445":39,"446":39,"447":39,"448":39,"449":39,"450":39,"451":1,"452":327,"453":1,"454":39,"455":74,"456":1,"457":74,"458":74,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":1,"476":39,"477":39,"478":1,"479":39,"480":39,"481":39,"482":35,"483":35,"484":35,"485":0,"486":35,"487":0,"488":35,"489":0,"490":0,"491":0,"492":35,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":35,"502":35,"503":0,"504":0,"505":0,"506":35,"507":35,"508":35,"509":1,"510":39,"511":39,"512":74,"513":1,"514":74,"515":74,"516":74,"517":74,"518":74,"519":74,"520":74,"521":74,"522":74,"523":0,"524":74,"525":0,"526":0,"527":0,"528":74,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":74,"549":0,"550":74,"551":0,"552":74,"553":74,"554":1,"555":39,"556":39,"557":1,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":1,"576":39,"577":0,"578":39,"579":39,"580":39,"581":39,"582":39,"583":0,"584":1,"585":39,"586":74,"587":0,"588":39,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":39,"599":1,"600":1,"601":39,"602":39,"603":0,"604":39,"605":1,"606":1,"607":0,"608":0,"609":0,"610":1,"611":1,"612":0,"613":0,"614":0,"615":1,"616":1,"617":0,"618":0,"619":0,"620":1,"621":1,"622":0,"623":1,"624":1,"625":0,"626":1,"627":1,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":1,"668":1,"669":0,"670":0},"b":{"1":[0,1],"2":[1,1,1,0],"3":[1,0],"4":[31,3],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[74,113],"13":[74,0],"14":[0,113],"15":[0,113],"16":[0,113],"17":[0,113],"18":[0,113],"19":[0,113],"20":[113,113],"21":[0,113],"22":[113,113],"23":[0,113],"24":[113,113],"25":[113,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,113],"30":[0,113],"31":[0,74],"32":[74,31],"33":[0,74],"34":[74,39,39],"35":[0,31],"36":[0,31],"37":[31,0],"38":[0,31],"39":[31,31],"40":[31,0],"41":[31,31],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0,0,0,0,0,0,0],"48":[0,0],"49":[0,0],"50":[0,0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0,0],"66":[0,0],"67":[0,0],"68":[0,0,0],"69":[0,0],"70":[152,0],"71":[152,152],"72":[0,152],"73":[152,152],"74":[0,152],"75":[152,152],"76":[35,117],"77":[8,109],"78":[0,0,4,4,4,0,0,35,35,0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,74],"84":[0,0],"85":[0,74],"86":[0,74],"87":[0,74],"88":[0,74],"89":[0,74],"90":[0,74],"91":[0,74],"92":[0,74],"93":[0,39],"94":[39,0],"95":[0,39],"96":[0,39],"97":[0,39],"98":[0,39],"99":[0,39],"100":[327,327,327],"101":[0,74],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,39],"108":[0,35],"109":[0,35],"110":[0,35],"111":[0,0],"112":[0,35],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,35],"117":[0,0],"118":[0,74],"119":[74,74],"120":[74,74],"121":[0,74],"122":[74,0],"123":[0,74],"124":[0,0],"125":[0,0],"126":[0,74],"127":[74,70],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,74],"136":[0,74],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,39],"145":[39,0],"146":[39,0],"147":[0,74],"148":[0,39],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0]},"f":{"1":0,"2":1125,"3":0,"4":0,"5":0,"6":187,"7":0,"8":113,"9":0,"10":74,"11":74,"12":31,"13":0,"14":0,"15":0,"16":152,"17":0,"18":0,"19":0,"20":0,"21":74,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":35,"30":4,"31":0,"32":35,"33":0,"34":74,"35":74,"36":74,"37":74,"38":74,"39":39,"40":39,"41":39,"42":39,"43":39,"44":0,"45":39,"46":39,"47":0,"48":74,"49":0,"50":0,"51":0,"52":39,"53":327,"54":39,"55":74,"56":74,"57":0,"58":39,"59":39,"60":39,"61":35,"62":39,"63":74,"64":74,"65":74,"66":39,"67":0,"68":39,"69":39,"70":39,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":22},"end":{"line":9,"column":33}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":22},"end":{"line":15,"column":33}}},"3":{"name":"parse","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":31}}},"4":{"name":"valid","line":258,"loc":{"start":{"line":258,"column":0},"end":{"line":258,"column":31}}},"5":{"name":"clean","line":265,"loc":{"start":{"line":265,"column":0},"end":{"line":265,"column":31}}},"6":{"name":"SemVer","line":272,"loc":{"start":{"line":272,"column":0},"end":{"line":272,"column":32}}},"7":{"name":"(anonymous_7)","line":315,"loc":{"start":{"line":315,"column":42},"end":{"line":315,"column":55}}},"8":{"name":"(anonymous_8)","line":328,"loc":{"start":{"line":328,"column":26},"end":{"line":328,"column":37}}},"9":{"name":"(anonymous_9)","line":335,"loc":{"start":{"line":335,"column":28},"end":{"line":335,"column":39}}},"10":{"name":"(anonymous_10)","line":339,"loc":{"start":{"line":339,"column":27},"end":{"line":339,"column":43}}},"11":{"name":"(anonymous_11)","line":347,"loc":{"start":{"line":347,"column":31},"end":{"line":347,"column":47}}},"12":{"name":"(anonymous_12)","line":356,"loc":{"start":{"line":356,"column":30},"end":{"line":356,"column":46}}},"13":{"name":"(anonymous_13)","line":388,"loc":{"start":{"line":388,"column":23},"end":{"line":388,"column":53}}},"14":{"name":"inc","line":485,"loc":{"start":{"line":485,"column":0},"end":{"line":485,"column":50}}},"15":{"name":"diff","line":499,"loc":{"start":{"line":499,"column":0},"end":{"line":499,"column":34}}},"16":{"name":"compareIdentifiers","line":528,"loc":{"start":{"line":528,"column":0},"end":{"line":528,"column":34}}},"17":{"name":"rcompareIdentifiers","line":545,"loc":{"start":{"line":545,"column":0},"end":{"line":545,"column":35}}},"18":{"name":"major","line":550,"loc":{"start":{"line":550,"column":0},"end":{"line":550,"column":25}}},"19":{"name":"minor","line":555,"loc":{"start":{"line":555,"column":0},"end":{"line":555,"column":25}}},"20":{"name":"patch","line":560,"loc":{"start":{"line":560,"column":0},"end":{"line":560,"column":25}}},"21":{"name":"compare","line":565,"loc":{"start":{"line":565,"column":0},"end":{"line":565,"column":30}}},"22":{"name":"compareLoose","line":570,"loc":{"start":{"line":570,"column":0},"end":{"line":570,"column":28}}},"23":{"name":"rcompare","line":575,"loc":{"start":{"line":575,"column":0},"end":{"line":575,"column":31}}},"24":{"name":"sort","line":580,"loc":{"start":{"line":580,"column":0},"end":{"line":580,"column":27}}},"25":{"name":"(anonymous_25)","line":581,"loc":{"start":{"line":581,"column":19},"end":{"line":581,"column":34}}},"26":{"name":"rsort","line":587,"loc":{"start":{"line":587,"column":0},"end":{"line":587,"column":28}}},"27":{"name":"(anonymous_27)","line":588,"loc":{"start":{"line":588,"column":19},"end":{"line":588,"column":34}}},"28":{"name":"gt","line":594,"loc":{"start":{"line":594,"column":0},"end":{"line":594,"column":25}}},"29":{"name":"lt","line":599,"loc":{"start":{"line":599,"column":0},"end":{"line":599,"column":25}}},"30":{"name":"eq","line":604,"loc":{"start":{"line":604,"column":0},"end":{"line":604,"column":25}}},"31":{"name":"neq","line":609,"loc":{"start":{"line":609,"column":0},"end":{"line":609,"column":26}}},"32":{"name":"gte","line":614,"loc":{"start":{"line":614,"column":0},"end":{"line":614,"column":26}}},"33":{"name":"lte","line":619,"loc":{"start":{"line":619,"column":0},"end":{"line":619,"column":26}}},"34":{"name":"cmp","line":624,"loc":{"start":{"line":624,"column":0},"end":{"line":624,"column":30}}},"35":{"name":"Comparator","line":649,"loc":{"start":{"line":649,"column":0},"end":{"line":649,"column":33}}},"36":{"name":"(anonymous_36)","line":673,"loc":{"start":{"line":673,"column":29},"end":{"line":673,"column":44}}},"37":{"name":"(anonymous_37)","line":691,"loc":{"start":{"line":691,"column":32},"end":{"line":691,"column":43}}},"38":{"name":"(anonymous_38)","line":695,"loc":{"start":{"line":695,"column":28},"end":{"line":695,"column":46}}},"39":{"name":"Range","line":709,"loc":{"start":{"line":709,"column":0},"end":{"line":709,"column":29}}},"40":{"name":"(anonymous_40)","line":720,"loc":{"start":{"line":720,"column":43},"end":{"line":720,"column":59}}},"41":{"name":"(anonymous_41)","line":722,"loc":{"start":{"line":722,"column":18},"end":{"line":722,"column":30}}},"42":{"name":"(anonymous_42)","line":734,"loc":{"start":{"line":734,"column":25},"end":{"line":734,"column":36}}},"43":{"name":"(anonymous_43)","line":735,"loc":{"start":{"line":735,"column":28},"end":{"line":735,"column":44}}},"44":{"name":"(anonymous_44)","line":741,"loc":{"start":{"line":741,"column":27},"end":{"line":741,"column":38}}},"45":{"name":"(anonymous_45)","line":745,"loc":{"start":{"line":745,"column":29},"end":{"line":745,"column":45}}},"46":{"name":"(anonymous_46)","line":770,"loc":{"start":{"line":770,"column":33},"end":{"line":770,"column":48}}},"47":{"name":"(anonymous_47)","line":775,"loc":{"start":{"line":775,"column":21},"end":{"line":775,"column":36}}},"48":{"name":"(anonymous_48)","line":779,"loc":{"start":{"line":779,"column":16},"end":{"line":779,"column":31}}},"49":{"name":"toComparators","line":788,"loc":{"start":{"line":788,"column":0},"end":{"line":788,"column":37}}},"50":{"name":"(anonymous_50)","line":789,"loc":{"start":{"line":789,"column":41},"end":{"line":789,"column":56}}},"51":{"name":"(anonymous_51)","line":790,"loc":{"start":{"line":790,"column":20},"end":{"line":790,"column":32}}},"52":{"name":"parseComparator","line":799,"loc":{"start":{"line":799,"column":0},"end":{"line":799,"column":38}}},"53":{"name":"isX","line":812,"loc":{"start":{"line":812,"column":0},"end":{"line":812,"column":17}}},"54":{"name":"replaceTildes","line":822,"loc":{"start":{"line":822,"column":0},"end":{"line":822,"column":36}}},"55":{"name":"(anonymous_55)","line":823,"loc":{"start":{"line":823,"column":38},"end":{"line":823,"column":53}}},"56":{"name":"replaceTilde","line":828,"loc":{"start":{"line":828,"column":0},"end":{"line":828,"column":35}}},"57":{"name":"(anonymous_57)","line":830,"loc":{"start":{"line":830,"column":25},"end":{"line":830,"column":50}}},"58":{"name":"replaceCarets","line":863,"loc":{"start":{"line":863,"column":0},"end":{"line":863,"column":36}}},"59":{"name":"(anonymous_59)","line":864,"loc":{"start":{"line":864,"column":38},"end":{"line":864,"column":53}}},"60":{"name":"replaceCaret","line":869,"loc":{"start":{"line":869,"column":0},"end":{"line":869,"column":35}}},"61":{"name":"(anonymous_61)","line":872,"loc":{"start":{"line":872,"column":25},"end":{"line":872,"column":50}}},"62":{"name":"replaceXRanges","line":918,"loc":{"start":{"line":918,"column":0},"end":{"line":918,"column":37}}},"63":{"name":"(anonymous_63)","line":920,"loc":{"start":{"line":920,"column":31},"end":{"line":920,"column":46}}},"64":{"name":"replaceXRange","line":925,"loc":{"start":{"line":925,"column":0},"end":{"line":925,"column":36}}},"65":{"name":"(anonymous_65)","line":928,"loc":{"start":{"line":928,"column":25},"end":{"line":928,"column":58}}},"66":{"name":"replaceStars","line":991,"loc":{"start":{"line":991,"column":0},"end":{"line":991,"column":35}}},"67":{"name":"hyphenReplace","line":1002,"loc":{"start":{"line":1002,"column":0},"end":{"line":1004,"column":48}}},"68":{"name":"(anonymous_68)","line":1031,"loc":{"start":{"line":1031,"column":23},"end":{"line":1031,"column":41}}},"69":{"name":"testSet","line":1045,"loc":{"start":{"line":1045,"column":0},"end":{"line":1045,"column":31}}},"70":{"name":"satisfies","line":1079,"loc":{"start":{"line":1079,"column":0},"end":{"line":1079,"column":42}}},"71":{"name":"maxSatisfying","line":1089,"loc":{"start":{"line":1089,"column":0},"end":{"line":1089,"column":47}}},"72":{"name":"(anonymous_72)","line":1090,"loc":{"start":{"line":1090,"column":25},"end":{"line":1090,"column":43}}},"73":{"name":"(anonymous_73)","line":1092,"loc":{"start":{"line":1092,"column":10},"end":{"line":1092,"column":25}}},"74":{"name":"minSatisfying","line":1098,"loc":{"start":{"line":1098,"column":0},"end":{"line":1098,"column":47}}},"75":{"name":"(anonymous_75)","line":1099,"loc":{"start":{"line":1099,"column":25},"end":{"line":1099,"column":43}}},"76":{"name":"(anonymous_76)","line":1101,"loc":{"start":{"line":1101,"column":10},"end":{"line":1101,"column":25}}},"77":{"name":"validRange","line":1107,"loc":{"start":{"line":1107,"column":0},"end":{"line":1107,"column":34}}},"78":{"name":"ltr","line":1119,"loc":{"start":{"line":1119,"column":0},"end":{"line":1119,"column":36}}},"79":{"name":"gtr","line":1125,"loc":{"start":{"line":1125,"column":0},"end":{"line":1125,"column":36}}},"80":{"name":"outside","line":1130,"loc":{"start":{"line":1130,"column":0},"end":{"line":1130,"column":46}}},"81":{"name":"(anonymous_81)","line":1168,"loc":{"start":{"line":1168,"column":24},"end":{"line":1168,"column":45}}},"82":{"name":"prerelease","line":1200,"loc":{"start":{"line":1200,"column":0},"end":{"line":1200,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":22}},"3":{"start":{"line":5,"column":12},"end":{"line":15,"column":36}},"4":{"start":{"line":9,"column":14},"end":{"line":13,"column":18}},"5":{"start":{"line":10,"column":16},"end":{"line":10,"column":68}},"6":{"start":{"line":11,"column":16},"end":{"line":11,"column":39}},"7":{"start":{"line":12,"column":16},"end":{"line":12,"column":49}},"8":{"start":{"line":15,"column":14},"end":{"line":15,"column":36}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":21}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":67}},"12":{"start":{"line":25,"column":0},"end":{"line":25,"column":25}},"13":{"start":{"line":26,"column":0},"end":{"line":26,"column":27}},"14":{"start":{"line":27,"column":0},"end":{"line":27,"column":10}},"15":{"start":{"line":35,"column":0},"end":{"line":35,"column":28}},"16":{"start":{"line":36,"column":0},"end":{"line":36,"column":39}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":33}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":39}},"19":{"start":{"line":45,"column":0},"end":{"line":45,"column":31}},"20":{"start":{"line":46,"column":0},"end":{"line":46,"column":57}},"21":{"start":{"line":52,"column":0},"end":{"line":52,"column":22}},"22":{"start":{"line":53,"column":0},"end":{"line":55,"column":54}},"23":{"start":{"line":57,"column":0},"end":{"line":57,"column":27}},"24":{"start":{"line":58,"column":0},"end":{"line":60,"column":64}},"25":{"start":{"line":65,"column":0},"end":{"line":65,"column":31}},"26":{"start":{"line":66,"column":0},"end":{"line":67,"column":66}},"27":{"start":{"line":69,"column":0},"end":{"line":69,"column":36}},"28":{"start":{"line":70,"column":0},"end":{"line":71,"column":71}},"29":{"start":{"line":78,"column":0},"end":{"line":78,"column":21}},"30":{"start":{"line":79,"column":0},"end":{"line":80,"column":64}},"31":{"start":{"line":82,"column":0},"end":{"line":82,"column":26}},"32":{"start":{"line":83,"column":0},"end":{"line":84,"column":74}},"33":{"start":{"line":89,"column":0},"end":{"line":89,"column":26}},"34":{"start":{"line":90,"column":0},"end":{"line":90,"column":39}},"35":{"start":{"line":96,"column":0},"end":{"line":96,"column":16}},"36":{"start":{"line":97,"column":0},"end":{"line":98,"column":54}},"37":{"start":{"line":110,"column":0},"end":{"line":110,"column":15}},"38":{"start":{"line":111,"column":0},"end":{"line":113,"column":33}},"39":{"start":{"line":115,"column":0},"end":{"line":115,"column":34}},"40":{"start":{"line":120,"column":0},"end":{"line":122,"column":34}},"41":{"start":{"line":124,"column":0},"end":{"line":124,"column":16}},"42":{"start":{"line":125,"column":0},"end":{"line":125,"column":36}},"43":{"start":{"line":127,"column":0},"end":{"line":127,"column":15}},"44":{"start":{"line":128,"column":0},"end":{"line":128,"column":27}},"45":{"start":{"line":133,"column":0},"end":{"line":133,"column":32}},"46":{"start":{"line":134,"column":0},"end":{"line":134,"column":70}},"47":{"start":{"line":135,"column":0},"end":{"line":135,"column":27}},"48":{"start":{"line":136,"column":0},"end":{"line":136,"column":60}},"49":{"start":{"line":138,"column":0},"end":{"line":138,"column":22}},"50":{"start":{"line":139,"column":0},"end":{"line":144,"column":26}},"51":{"start":{"line":146,"column":0},"end":{"line":146,"column":27}},"52":{"start":{"line":147,"column":0},"end":{"line":152,"column":31}},"53":{"start":{"line":154,"column":0},"end":{"line":154,"column":17}},"54":{"start":{"line":155,"column":0},"end":{"line":155,"column":64}},"55":{"start":{"line":156,"column":0},"end":{"line":156,"column":22}},"56":{"start":{"line":157,"column":0},"end":{"line":157,"column":74}},"57":{"start":{"line":161,"column":0},"end":{"line":161,"column":20}},"58":{"start":{"line":162,"column":0},"end":{"line":162,"column":27}},"59":{"start":{"line":164,"column":0},"end":{"line":164,"column":20}},"60":{"start":{"line":165,"column":0},"end":{"line":165,"column":52}},"61":{"start":{"line":166,"column":0},"end":{"line":166,"column":48}},"62":{"start":{"line":167,"column":0},"end":{"line":167,"column":29}},"63":{"start":{"line":169,"column":0},"end":{"line":169,"column":16}},"64":{"start":{"line":170,"column":0},"end":{"line":170,"column":59}},"65":{"start":{"line":171,"column":0},"end":{"line":171,"column":21}},"66":{"start":{"line":172,"column":0},"end":{"line":172,"column":69}},"67":{"start":{"line":176,"column":0},"end":{"line":176,"column":20}},"68":{"start":{"line":177,"column":0},"end":{"line":177,"column":27}},"69":{"start":{"line":179,"column":0},"end":{"line":179,"column":20}},"70":{"start":{"line":180,"column":0},"end":{"line":180,"column":52}},"71":{"start":{"line":181,"column":0},"end":{"line":181,"column":48}},"72":{"start":{"line":182,"column":0},"end":{"line":182,"column":29}},"73":{"start":{"line":184,"column":0},"end":{"line":184,"column":16}},"74":{"start":{"line":185,"column":0},"end":{"line":185,"column":59}},"75":{"start":{"line":186,"column":0},"end":{"line":186,"column":21}},"76":{"start":{"line":187,"column":0},"end":{"line":187,"column":69}},"77":{"start":{"line":190,"column":0},"end":{"line":190,"column":26}},"78":{"start":{"line":191,"column":0},"end":{"line":191,"column":72}},"79":{"start":{"line":192,"column":0},"end":{"line":192,"column":21}},"80":{"start":{"line":193,"column":0},"end":{"line":193,"column":66}},"81":{"start":{"line":198,"column":0},"end":{"line":198,"column":25}},"82":{"start":{"line":199,"column":0},"end":{"line":200,"column":74}},"83":{"start":{"line":203,"column":0},"end":{"line":203,"column":58}},"84":{"start":{"line":204,"column":0},"end":{"line":204,"column":37}},"85":{"start":{"line":211,"column":0},"end":{"line":211,"column":22}},"86":{"start":{"line":212,"column":0},"end":{"line":215,"column":27}},"87":{"start":{"line":217,"column":0},"end":{"line":217,"column":27}},"88":{"start":{"line":218,"column":0},"end":{"line":221,"column":32}},"89":{"start":{"line":224,"column":0},"end":{"line":224,"column":15}},"90":{"start":{"line":225,"column":0},"end":{"line":225,"column":30}},"91":{"start":{"line":229,"column":0},"end":{"line":233,"column":1}},"92":{"start":{"line":230,"column":2},"end":{"line":230,"column":19}},"93":{"start":{"line":231,"column":2},"end":{"line":232,"column":31}},"94":{"start":{"line":232,"column":4},"end":{"line":232,"column":31}},"95":{"start":{"line":235,"column":0},"end":{"line":235,"column":22}},"96":{"start":{"line":236,"column":0},"end":{"line":255,"column":1}},"97":{"start":{"line":237,"column":2},"end":{"line":238,"column":19}},"98":{"start":{"line":238,"column":4},"end":{"line":238,"column":19}},"99":{"start":{"line":240,"column":2},"end":{"line":241,"column":16}},"100":{"start":{"line":241,"column":4},"end":{"line":241,"column":16}},"101":{"start":{"line":243,"column":2},"end":{"line":244,"column":16}},"102":{"start":{"line":244,"column":4},"end":{"line":244,"column":16}},"103":{"start":{"line":246,"column":2},"end":{"line":246,"column":39}},"104":{"start":{"line":247,"column":2},"end":{"line":248,"column":16}},"105":{"start":{"line":248,"column":4},"end":{"line":248,"column":16}},"106":{"start":{"line":250,"column":2},"end":{"line":254,"column":3}},"107":{"start":{"line":251,"column":4},"end":{"line":251,"column":38}},"108":{"start":{"line":253,"column":4},"end":{"line":253,"column":16}},"109":{"start":{"line":257,"column":0},"end":{"line":257,"column":22}},"110":{"start":{"line":258,"column":0},"end":{"line":261,"column":1}},"111":{"start":{"line":259,"column":2},"end":{"line":259,"column":32}},"112":{"start":{"line":260,"column":2},"end":{"line":260,"column":30}},"113":{"start":{"line":264,"column":0},"end":{"line":264,"column":22}},"114":{"start":{"line":265,"column":0},"end":{"line":268,"column":1}},"115":{"start":{"line":266,"column":2},"end":{"line":266,"column":61}},"116":{"start":{"line":267,"column":2},"end":{"line":267,"column":30}},"117":{"start":{"line":270,"column":0},"end":{"line":270,"column":24}},"118":{"start":{"line":272,"column":0},"end":{"line":326,"column":1}},"119":{"start":{"line":273,"column":2},"end":{"line":280,"column":3}},"120":{"start":{"line":274,"column":4},"end":{"line":277,"column":32}},"121":{"start":{"line":275,"column":6},"end":{"line":275,"column":21}},"122":{"start":{"line":277,"column":6},"end":{"line":277,"column":32}},"123":{"start":{"line":278,"column":9},"end":{"line":280,"column":3}},"124":{"start":{"line":279,"column":4},"end":{"line":279,"column":55}},"125":{"start":{"line":282,"column":2},"end":{"line":283,"column":79}},"126":{"start":{"line":283,"column":4},"end":{"line":283,"column":79}},"127":{"start":{"line":285,"column":2},"end":{"line":286,"column":38}},"128":{"start":{"line":286,"column":4},"end":{"line":286,"column":38}},"129":{"start":{"line":288,"column":2},"end":{"line":288,"column":34}},"130":{"start":{"line":289,"column":2},"end":{"line":289,"column":21}},"131":{"start":{"line":290,"column":2},"end":{"line":290,"column":61}},"132":{"start":{"line":292,"column":2},"end":{"line":293,"column":55}},"133":{"start":{"line":293,"column":4},"end":{"line":293,"column":55}},"134":{"start":{"line":295,"column":2},"end":{"line":295,"column":21}},"135":{"start":{"line":298,"column":2},"end":{"line":298,"column":21}},"136":{"start":{"line":299,"column":2},"end":{"line":299,"column":21}},"137":{"start":{"line":300,"column":2},"end":{"line":300,"column":21}},"138":{"start":{"line":302,"column":2},"end":{"line":303,"column":48}},"139":{"start":{"line":303,"column":4},"end":{"line":303,"column":48}},"140":{"start":{"line":305,"column":2},"end":{"line":306,"column":48}},"141":{"start":{"line":306,"column":4},"end":{"line":306,"column":48}},"142":{"start":{"line":308,"column":2},"end":{"line":309,"column":48}},"143":{"start":{"line":309,"column":4},"end":{"line":309,"column":48}},"144":{"start":{"line":312,"column":2},"end":{"line":322,"column":7}},"145":{"start":{"line":313,"column":4},"end":{"line":313,"column":25}},"146":{"start":{"line":315,"column":4},"end":{"line":322,"column":7}},"147":{"start":{"line":316,"column":6},"end":{"line":320,"column":7}},"148":{"start":{"line":317,"column":8},"end":{"line":317,"column":22}},"149":{"start":{"line":318,"column":8},"end":{"line":319,"column":21}},"150":{"start":{"line":319,"column":10},"end":{"line":319,"column":21}},"151":{"start":{"line":321,"column":6},"end":{"line":321,"column":16}},"152":{"start":{"line":324,"column":2},"end":{"line":324,"column":43}},"153":{"start":{"line":325,"column":2},"end":{"line":325,"column":16}},"154":{"start":{"line":328,"column":0},"end":{"line":333,"column":2}},"155":{"start":{"line":329,"column":2},"end":{"line":329,"column":66}},"156":{"start":{"line":330,"column":2},"end":{"line":331,"column":52}},"157":{"start":{"line":331,"column":4},"end":{"line":331,"column":52}},"158":{"start":{"line":332,"column":2},"end":{"line":332,"column":22}},"159":{"start":{"line":335,"column":0},"end":{"line":337,"column":2}},"160":{"start":{"line":336,"column":2},"end":{"line":336,"column":22}},"161":{"start":{"line":339,"column":0},"end":{"line":345,"column":2}},"162":{"start":{"line":340,"column":2},"end":{"line":340,"column":59}},"163":{"start":{"line":341,"column":2},"end":{"line":342,"column":42}},"164":{"start":{"line":342,"column":4},"end":{"line":342,"column":42}},"165":{"start":{"line":344,"column":2},"end":{"line":344,"column":59}},"166":{"start":{"line":347,"column":0},"end":{"line":354,"column":2}},"167":{"start":{"line":348,"column":2},"end":{"line":349,"column":42}},"168":{"start":{"line":349,"column":4},"end":{"line":349,"column":42}},"169":{"start":{"line":351,"column":2},"end":{"line":353,"column":53}},"170":{"start":{"line":356,"column":0},"end":{"line":384,"column":2}},"171":{"start":{"line":357,"column":2},"end":{"line":358,"column":42}},"172":{"start":{"line":358,"column":4},"end":{"line":358,"column":42}},"173":{"start":{"line":361,"column":2},"end":{"line":366,"column":13}},"174":{"start":{"line":362,"column":4},"end":{"line":362,"column":14}},"175":{"start":{"line":363,"column":7},"end":{"line":366,"column":13}},"176":{"start":{"line":364,"column":4},"end":{"line":364,"column":13}},"177":{"start":{"line":365,"column":7},"end":{"line":366,"column":13}},"178":{"start":{"line":366,"column":4},"end":{"line":366,"column":13}},"179":{"start":{"line":368,"column":2},"end":{"line":368,"column":12}},"180":{"start":{"line":369,"column":2},"end":{"line":383,"column":16}},"181":{"start":{"line":370,"column":4},"end":{"line":370,"column":31}},"182":{"start":{"line":371,"column":4},"end":{"line":371,"column":32}},"183":{"start":{"line":372,"column":4},"end":{"line":372,"column":41}},"184":{"start":{"line":373,"column":4},"end":{"line":382,"column":38}},"185":{"start":{"line":374,"column":6},"end":{"line":374,"column":15}},"186":{"start":{"line":375,"column":9},"end":{"line":382,"column":38}},"187":{"start":{"line":376,"column":6},"end":{"line":376,"column":15}},"188":{"start":{"line":377,"column":9},"end":{"line":382,"column":38}},"189":{"start":{"line":378,"column":6},"end":{"line":378,"column":16}},"190":{"start":{"line":379,"column":9},"end":{"line":382,"column":38}},"191":{"start":{"line":380,"column":6},"end":{"line":380,"column":15}},"192":{"start":{"line":382,"column":6},"end":{"line":382,"column":38}},"193":{"start":{"line":388,"column":0},"end":{"line":482,"column":2}},"194":{"start":{"line":389,"column":2},"end":{"line":478,"column":3}},"195":{"start":{"line":391,"column":6},"end":{"line":391,"column":33}},"196":{"start":{"line":392,"column":6},"end":{"line":392,"column":21}},"197":{"start":{"line":393,"column":6},"end":{"line":393,"column":21}},"198":{"start":{"line":394,"column":6},"end":{"line":394,"column":19}},"199":{"start":{"line":395,"column":6},"end":{"line":395,"column":34}},"200":{"start":{"line":396,"column":6},"end":{"line":396,"column":12}},"201":{"start":{"line":398,"column":6},"end":{"line":398,"column":33}},"202":{"start":{"line":399,"column":6},"end":{"line":399,"column":21}},"203":{"start":{"line":400,"column":6},"end":{"line":400,"column":19}},"204":{"start":{"line":401,"column":6},"end":{"line":401,"column":34}},"205":{"start":{"line":402,"column":6},"end":{"line":402,"column":12}},"206":{"start":{"line":407,"column":6},"end":{"line":407,"column":33}},"207":{"start":{"line":408,"column":6},"end":{"line":408,"column":36}},"208":{"start":{"line":409,"column":6},"end":{"line":409,"column":34}},"209":{"start":{"line":410,"column":6},"end":{"line":410,"column":12}},"210":{"start":{"line":414,"column":6},"end":{"line":415,"column":38}},"211":{"start":{"line":415,"column":8},"end":{"line":415,"column":38}},"212":{"start":{"line":416,"column":6},"end":{"line":416,"column":34}},"213":{"start":{"line":417,"column":6},"end":{"line":417,"column":12}},"214":{"start":{"line":424,"column":6},"end":{"line":425,"column":21}},"215":{"start":{"line":425,"column":8},"end":{"line":425,"column":21}},"216":{"start":{"line":426,"column":6},"end":{"line":426,"column":21}},"217":{"start":{"line":427,"column":6},"end":{"line":427,"column":21}},"218":{"start":{"line":428,"column":6},"end":{"line":428,"column":27}},"219":{"start":{"line":429,"column":6},"end":{"line":429,"column":12}},"220":{"start":{"line":435,"column":6},"end":{"line":436,"column":21}},"221":{"start":{"line":436,"column":8},"end":{"line":436,"column":21}},"222":{"start":{"line":437,"column":6},"end":{"line":437,"column":21}},"223":{"start":{"line":438,"column":6},"end":{"line":438,"column":27}},"224":{"start":{"line":439,"column":6},"end":{"line":439,"column":12}},"225":{"start":{"line":445,"column":6},"end":{"line":446,"column":21}},"226":{"start":{"line":446,"column":8},"end":{"line":446,"column":21}},"227":{"start":{"line":447,"column":6},"end":{"line":447,"column":27}},"228":{"start":{"line":448,"column":6},"end":{"line":448,"column":12}},"229":{"start":{"line":452,"column":6},"end":{"line":464,"column":7}},"230":{"start":{"line":453,"column":8},"end":{"line":453,"column":30}},"231":{"start":{"line":455,"column":8},"end":{"line":455,"column":39}},"232":{"start":{"line":456,"column":8},"end":{"line":461,"column":9}},"233":{"start":{"line":457,"column":10},"end":{"line":460,"column":11}},"234":{"start":{"line":458,"column":12},"end":{"line":458,"column":33}},"235":{"start":{"line":459,"column":12},"end":{"line":459,"column":19}},"236":{"start":{"line":462,"column":8},"end":{"line":463,"column":34}},"237":{"start":{"line":463,"column":10},"end":{"line":463,"column":34}},"238":{"start":{"line":465,"column":6},"end":{"line":473,"column":7}},"239":{"start":{"line":468,"column":8},"end":{"line":472,"column":44}},"240":{"start":{"line":469,"column":10},"end":{"line":470,"column":46}},"241":{"start":{"line":470,"column":12},"end":{"line":470,"column":46}},"242":{"start":{"line":472,"column":10},"end":{"line":472,"column":44}},"243":{"start":{"line":474,"column":6},"end":{"line":474,"column":12}},"244":{"start":{"line":477,"column":6},"end":{"line":477,"column":64}},"245":{"start":{"line":479,"column":2},"end":{"line":479,"column":16}},"246":{"start":{"line":480,"column":2},"end":{"line":480,"column":26}},"247":{"start":{"line":481,"column":2},"end":{"line":481,"column":14}},"248":{"start":{"line":484,"column":0},"end":{"line":484,"column":18}},"249":{"start":{"line":485,"column":0},"end":{"line":496,"column":1}},"250":{"start":{"line":486,"column":2},"end":{"line":489,"column":3}},"251":{"start":{"line":487,"column":4},"end":{"line":487,"column":23}},"252":{"start":{"line":488,"column":4},"end":{"line":488,"column":22}},"253":{"start":{"line":491,"column":2},"end":{"line":495,"column":3}},"254":{"start":{"line":492,"column":4},"end":{"line":492,"column":71}},"255":{"start":{"line":494,"column":4},"end":{"line":494,"column":16}},"256":{"start":{"line":498,"column":0},"end":{"line":498,"column":20}},"257":{"start":{"line":499,"column":0},"end":{"line":523,"column":1}},"258":{"start":{"line":500,"column":2},"end":{"line":522,"column":3}},"259":{"start":{"line":501,"column":4},"end":{"line":501,"column":16}},"260":{"start":{"line":503,"column":4},"end":{"line":503,"column":29}},"261":{"start":{"line":504,"column":4},"end":{"line":504,"column":29}},"262":{"start":{"line":505,"column":4},"end":{"line":514,"column":5}},"263":{"start":{"line":506,"column":6},"end":{"line":512,"column":7}},"264":{"start":{"line":507,"column":8},"end":{"line":511,"column":9}},"265":{"start":{"line":508,"column":10},"end":{"line":510,"column":11}},"266":{"start":{"line":509,"column":12},"end":{"line":509,"column":29}},"267":{"start":{"line":513,"column":6},"end":{"line":513,"column":26}},"268":{"start":{"line":515,"column":4},"end":{"line":521,"column":5}},"269":{"start":{"line":516,"column":6},"end":{"line":520,"column":7}},"270":{"start":{"line":517,"column":8},"end":{"line":519,"column":9}},"271":{"start":{"line":518,"column":10},"end":{"line":518,"column":21}},"272":{"start":{"line":525,"column":0},"end":{"line":525,"column":48}},"273":{"start":{"line":527,"column":0},"end":{"line":527,"column":25}},"274":{"start":{"line":528,"column":0},"end":{"line":542,"column":1}},"275":{"start":{"line":529,"column":2},"end":{"line":529,"column":29}},"276":{"start":{"line":530,"column":2},"end":{"line":530,"column":29}},"277":{"start":{"line":532,"column":2},"end":{"line":535,"column":3}},"278":{"start":{"line":533,"column":4},"end":{"line":533,"column":11}},"279":{"start":{"line":534,"column":4},"end":{"line":534,"column":11}},"280":{"start":{"line":537,"column":2},"end":{"line":541,"column":11}},"281":{"start":{"line":544,"column":0},"end":{"line":544,"column":50}},"282":{"start":{"line":545,"column":0},"end":{"line":547,"column":1}},"283":{"start":{"line":546,"column":2},"end":{"line":546,"column":34}},"284":{"start":{"line":549,"column":0},"end":{"line":549,"column":22}},"285":{"start":{"line":550,"column":0},"end":{"line":552,"column":1}},"286":{"start":{"line":551,"column":2},"end":{"line":551,"column":36}},"287":{"start":{"line":554,"column":0},"end":{"line":554,"column":22}},"288":{"start":{"line":555,"column":0},"end":{"line":557,"column":1}},"289":{"start":{"line":556,"column":2},"end":{"line":556,"column":36}},"290":{"start":{"line":559,"column":0},"end":{"line":559,"column":22}},"291":{"start":{"line":560,"column":0},"end":{"line":562,"column":1}},"292":{"start":{"line":561,"column":2},"end":{"line":561,"column":36}},"293":{"start":{"line":564,"column":0},"end":{"line":564,"column":26}},"294":{"start":{"line":565,"column":0},"end":{"line":567,"column":1}},"295":{"start":{"line":566,"column":2},"end":{"line":566,"column":41}},"296":{"start":{"line":569,"column":0},"end":{"line":569,"column":36}},"297":{"start":{"line":570,"column":0},"end":{"line":572,"column":1}},"298":{"start":{"line":571,"column":2},"end":{"line":571,"column":29}},"299":{"start":{"line":574,"column":0},"end":{"line":574,"column":28}},"300":{"start":{"line":575,"column":0},"end":{"line":577,"column":1}},"301":{"start":{"line":576,"column":2},"end":{"line":576,"column":30}},"302":{"start":{"line":579,"column":0},"end":{"line":579,"column":20}},"303":{"start":{"line":580,"column":0},"end":{"line":584,"column":1}},"304":{"start":{"line":581,"column":2},"end":{"line":583,"column":5}},"305":{"start":{"line":582,"column":4},"end":{"line":582,"column":40}},"306":{"start":{"line":586,"column":0},"end":{"line":586,"column":22}},"307":{"start":{"line":587,"column":0},"end":{"line":591,"column":1}},"308":{"start":{"line":588,"column":2},"end":{"line":590,"column":5}},"309":{"start":{"line":589,"column":4},"end":{"line":589,"column":41}},"310":{"start":{"line":593,"column":0},"end":{"line":593,"column":16}},"311":{"start":{"line":594,"column":0},"end":{"line":596,"column":1}},"312":{"start":{"line":595,"column":2},"end":{"line":595,"column":34}},"313":{"start":{"line":598,"column":0},"end":{"line":598,"column":16}},"314":{"start":{"line":599,"column":0},"end":{"line":601,"column":1}},"315":{"start":{"line":600,"column":2},"end":{"line":600,"column":34}},"316":{"start":{"line":603,"column":0},"end":{"line":603,"column":16}},"317":{"start":{"line":604,"column":0},"end":{"line":606,"column":1}},"318":{"start":{"line":605,"column":2},"end":{"line":605,"column":36}},"319":{"start":{"line":608,"column":0},"end":{"line":608,"column":18}},"320":{"start":{"line":609,"column":0},"end":{"line":611,"column":1}},"321":{"start":{"line":610,"column":2},"end":{"line":610,"column":36}},"322":{"start":{"line":613,"column":0},"end":{"line":613,"column":18}},"323":{"start":{"line":614,"column":0},"end":{"line":616,"column":1}},"324":{"start":{"line":615,"column":2},"end":{"line":615,"column":35}},"325":{"start":{"line":618,"column":0},"end":{"line":618,"column":18}},"326":{"start":{"line":619,"column":0},"end":{"line":621,"column":1}},"327":{"start":{"line":620,"column":2},"end":{"line":620,"column":35}},"328":{"start":{"line":623,"column":0},"end":{"line":623,"column":18}},"329":{"start":{"line":624,"column":0},"end":{"line":646,"column":1}},"330":{"start":{"line":625,"column":2},"end":{"line":625,"column":10}},"331":{"start":{"line":626,"column":2},"end":{"line":644,"column":3}},"332":{"start":{"line":628,"column":6},"end":{"line":628,"column":47}},"333":{"start":{"line":628,"column":33},"end":{"line":628,"column":47}},"334":{"start":{"line":629,"column":6},"end":{"line":629,"column":47}},"335":{"start":{"line":629,"column":33},"end":{"line":629,"column":47}},"336":{"start":{"line":630,"column":6},"end":{"line":630,"column":20}},"337":{"start":{"line":631,"column":6},"end":{"line":631,"column":12}},"338":{"start":{"line":633,"column":6},"end":{"line":633,"column":47}},"339":{"start":{"line":633,"column":33},"end":{"line":633,"column":47}},"340":{"start":{"line":634,"column":6},"end":{"line":634,"column":47}},"341":{"start":{"line":634,"column":33},"end":{"line":634,"column":47}},"342":{"start":{"line":635,"column":6},"end":{"line":635,"column":20}},"343":{"start":{"line":636,"column":6},"end":{"line":636,"column":12}},"344":{"start":{"line":637,"column":34},"end":{"line":637,"column":56}},"345":{"start":{"line":637,"column":57},"end":{"line":637,"column":63}},"346":{"start":{"line":638,"column":15},"end":{"line":638,"column":38}},"347":{"start":{"line":638,"column":39},"end":{"line":638,"column":45}},"348":{"start":{"line":639,"column":14},"end":{"line":639,"column":36}},"349":{"start":{"line":639,"column":37},"end":{"line":639,"column":43}},"350":{"start":{"line":640,"column":15},"end":{"line":640,"column":38}},"351":{"start":{"line":640,"column":39},"end":{"line":640,"column":45}},"352":{"start":{"line":641,"column":14},"end":{"line":641,"column":36}},"353":{"start":{"line":641,"column":37},"end":{"line":641,"column":43}},"354":{"start":{"line":642,"column":15},"end":{"line":642,"column":38}},"355":{"start":{"line":642,"column":39},"end":{"line":642,"column":45}},"356":{"start":{"line":643,"column":13},"end":{"line":643,"column":60}},"357":{"start":{"line":645,"column":2},"end":{"line":645,"column":13}},"358":{"start":{"line":648,"column":0},"end":{"line":648,"column":32}},"359":{"start":{"line":649,"column":0},"end":{"line":670,"column":1}},"360":{"start":{"line":650,"column":2},"end":{"line":655,"column":3}},"361":{"start":{"line":651,"column":4},"end":{"line":654,"column":24}},"362":{"start":{"line":652,"column":6},"end":{"line":652,"column":18}},"363":{"start":{"line":654,"column":6},"end":{"line":654,"column":24}},"364":{"start":{"line":657,"column":2},"end":{"line":658,"column":39}},"365":{"start":{"line":658,"column":4},"end":{"line":658,"column":39}},"366":{"start":{"line":660,"column":2},"end":{"line":660,"column":35}},"367":{"start":{"line":661,"column":2},"end":{"line":661,"column":21}},"368":{"start":{"line":662,"column":2},"end":{"line":662,"column":19}},"369":{"start":{"line":664,"column":2},"end":{"line":667,"column":53}},"370":{"start":{"line":665,"column":4},"end":{"line":665,"column":20}},"371":{"start":{"line":667,"column":4},"end":{"line":667,"column":53}},"372":{"start":{"line":669,"column":2},"end":{"line":669,"column":22}},"373":{"start":{"line":672,"column":0},"end":{"line":672,"column":13}},"374":{"start":{"line":673,"column":0},"end":{"line":689,"column":2}},"375":{"start":{"line":674,"column":2},"end":{"line":674,"column":60}},"376":{"start":{"line":675,"column":2},"end":{"line":675,"column":24}},"377":{"start":{"line":677,"column":2},"end":{"line":678,"column":55}},"378":{"start":{"line":678,"column":4},"end":{"line":678,"column":55}},"379":{"start":{"line":680,"column":2},"end":{"line":680,"column":23}},"380":{"start":{"line":681,"column":2},"end":{"line":682,"column":23}},"381":{"start":{"line":682,"column":4},"end":{"line":682,"column":23}},"382":{"start":{"line":685,"column":2},"end":{"line":688,"column":47}},"383":{"start":{"line":686,"column":4},"end":{"line":686,"column":22}},"384":{"start":{"line":688,"column":4},"end":{"line":688,"column":47}},"385":{"start":{"line":691,"column":0},"end":{"line":693,"column":2}},"386":{"start":{"line":692,"column":2},"end":{"line":692,"column":20}},"387":{"start":{"line":695,"column":0},"end":{"line":705,"column":2}},"388":{"start":{"line":696,"column":2},"end":{"line":696,"column":48}},"389":{"start":{"line":698,"column":2},"end":{"line":699,"column":16}},"390":{"start":{"line":699,"column":4},"end":{"line":699,"column":16}},"391":{"start":{"line":701,"column":2},"end":{"line":702,"column":46}},"392":{"start":{"line":702,"column":4},"end":{"line":702,"column":46}},"393":{"start":{"line":704,"column":2},"end":{"line":704,"column":62}},"394":{"start":{"line":708,"column":0},"end":{"line":708,"column":22}},"395":{"start":{"line":709,"column":0},"end":{"line":732,"column":1}},"396":{"start":{"line":710,"column":2},"end":{"line":711,"column":17}},"397":{"start":{"line":711,"column":4},"end":{"line":711,"column":17}},"398":{"start":{"line":713,"column":2},"end":{"line":714,"column":35}},"399":{"start":{"line":714,"column":4},"end":{"line":714,"column":35}},"400":{"start":{"line":716,"column":2},"end":{"line":716,"column":21}},"401":{"start":{"line":719,"column":2},"end":{"line":719,"column":19}},"402":{"start":{"line":720,"column":2},"end":{"line":725,"column":5}},"403":{"start":{"line":721,"column":4},"end":{"line":721,"column":41}},"404":{"start":{"line":724,"column":4},"end":{"line":724,"column":20}},"405":{"start":{"line":727,"column":2},"end":{"line":729,"column":3}},"406":{"start":{"line":728,"column":4},"end":{"line":728,"column":58}},"407":{"start":{"line":731,"column":2},"end":{"line":731,"column":16}},"408":{"start":{"line":734,"column":0},"end":{"line":739,"column":2}},"409":{"start":{"line":735,"column":2},"end":{"line":737,"column":23}},"410":{"start":{"line":736,"column":4},"end":{"line":736,"column":34}},"411":{"start":{"line":738,"column":2},"end":{"line":738,"column":20}},"412":{"start":{"line":741,"column":0},"end":{"line":743,"column":2}},"413":{"start":{"line":742,"column":2},"end":{"line":742,"column":20}},"414":{"start":{"line":745,"column":0},"end":{"line":784,"column":2}},"415":{"start":{"line":746,"column":2},"end":{"line":746,"column":25}},"416":{"start":{"line":747,"column":2},"end":{"line":747,"column":23}},"417":{"start":{"line":748,"column":2},"end":{"line":748,"column":31}},"418":{"start":{"line":750,"column":2},"end":{"line":750,"column":58}},"419":{"start":{"line":751,"column":2},"end":{"line":751,"column":43}},"420":{"start":{"line":752,"column":2},"end":{"line":752,"column":33}},"421":{"start":{"line":754,"column":2},"end":{"line":754,"column":67}},"422":{"start":{"line":755,"column":2},"end":{"line":755,"column":54}},"423":{"start":{"line":758,"column":2},"end":{"line":758,"column":57}},"424":{"start":{"line":761,"column":2},"end":{"line":761,"column":57}},"425":{"start":{"line":764,"column":2},"end":{"line":764,"column":39}},"426":{"start":{"line":769,"column":2},"end":{"line":769,"column":60}},"427":{"start":{"line":770,"column":2},"end":{"line":772,"column":28}},"428":{"start":{"line":771,"column":4},"end":{"line":771,"column":40}},"429":{"start":{"line":773,"column":2},"end":{"line":778,"column":3}},"430":{"start":{"line":775,"column":4},"end":{"line":777,"column":7}},"431":{"start":{"line":776,"column":6},"end":{"line":776,"column":34}},"432":{"start":{"line":779,"column":2},"end":{"line":781,"column":5}},"433":{"start":{"line":780,"column":4},"end":{"line":780,"column":39}},"434":{"start":{"line":783,"column":2},"end":{"line":783,"column":13}},"435":{"start":{"line":787,"column":0},"end":{"line":787,"column":38}},"436":{"start":{"line":788,"column":0},"end":{"line":794,"column":1}},"437":{"start":{"line":789,"column":2},"end":{"line":793,"column":5}},"438":{"start":{"line":790,"column":4},"end":{"line":792,"column":35}},"439":{"start":{"line":791,"column":6},"end":{"line":791,"column":21}},"440":{"start":{"line":799,"column":0},"end":{"line":810,"column":1}},"441":{"start":{"line":800,"column":2},"end":{"line":800,"column":22}},"442":{"start":{"line":801,"column":2},"end":{"line":801,"column":36}},"443":{"start":{"line":802,"column":2},"end":{"line":802,"column":23}},"444":{"start":{"line":803,"column":2},"end":{"line":803,"column":36}},"445":{"start":{"line":804,"column":2},"end":{"line":804,"column":24}},"446":{"start":{"line":805,"column":2},"end":{"line":805,"column":37}},"447":{"start":{"line":806,"column":2},"end":{"line":806,"column":24}},"448":{"start":{"line":807,"column":2},"end":{"line":807,"column":35}},"449":{"start":{"line":808,"column":2},"end":{"line":808,"column":23}},"450":{"start":{"line":809,"column":2},"end":{"line":809,"column":14}},"451":{"start":{"line":812,"column":0},"end":{"line":814,"column":1}},"452":{"start":{"line":813,"column":2},"end":{"line":813,"column":55}},"453":{"start":{"line":822,"column":0},"end":{"line":826,"column":1}},"454":{"start":{"line":823,"column":2},"end":{"line":825,"column":15}},"455":{"start":{"line":824,"column":4},"end":{"line":824,"column":37}},"456":{"start":{"line":828,"column":0},"end":{"line":855,"column":1}},"457":{"start":{"line":829,"column":2},"end":{"line":829,"column":45}},"458":{"start":{"line":830,"column":2},"end":{"line":854,"column":5}},"459":{"start":{"line":831,"column":4},"end":{"line":831,"column":41}},"460":{"start":{"line":832,"column":4},"end":{"line":832,"column":12}},"461":{"start":{"line":834,"column":4},"end":{"line":850,"column":45}},"462":{"start":{"line":835,"column":6},"end":{"line":835,"column":15}},"463":{"start":{"line":836,"column":9},"end":{"line":850,"column":45}},"464":{"start":{"line":837,"column":6},"end":{"line":837,"column":52}},"465":{"start":{"line":838,"column":9},"end":{"line":850,"column":45}},"466":{"start":{"line":840,"column":6},"end":{"line":840,"column":68}},"467":{"start":{"line":841,"column":9},"end":{"line":850,"column":45}},"468":{"start":{"line":842,"column":6},"end":{"line":842,"column":35}},"469":{"start":{"line":843,"column":6},"end":{"line":844,"column":22}},"470":{"start":{"line":844,"column":8},"end":{"line":844,"column":22}},"471":{"start":{"line":845,"column":6},"end":{"line":846,"column":45}},"472":{"start":{"line":849,"column":6},"end":{"line":850,"column":45}},"473":{"start":{"line":852,"column":4},"end":{"line":852,"column":31}},"474":{"start":{"line":853,"column":4},"end":{"line":853,"column":15}},"475":{"start":{"line":863,"column":0},"end":{"line":867,"column":1}},"476":{"start":{"line":864,"column":2},"end":{"line":866,"column":15}},"477":{"start":{"line":865,"column":4},"end":{"line":865,"column":37}},"478":{"start":{"line":869,"column":0},"end":{"line":916,"column":1}},"479":{"start":{"line":870,"column":2},"end":{"line":870,"column":30}},"480":{"start":{"line":871,"column":2},"end":{"line":871,"column":45}},"481":{"start":{"line":872,"column":2},"end":{"line":915,"column":5}},"482":{"start":{"line":873,"column":4},"end":{"line":873,"column":41}},"483":{"start":{"line":874,"column":4},"end":{"line":874,"column":12}},"484":{"start":{"line":876,"column":4},"end":{"line":911,"column":5}},"485":{"start":{"line":877,"column":6},"end":{"line":877,"column":15}},"486":{"start":{"line":878,"column":9},"end":{"line":911,"column":5}},"487":{"start":{"line":879,"column":6},"end":{"line":879,"column":52}},"488":{"start":{"line":880,"column":9},"end":{"line":911,"column":5}},"489":{"start":{"line":881,"column":6},"end":{"line":884,"column":62}},"490":{"start":{"line":882,"column":8},"end":{"line":882,"column":70}},"491":{"start":{"line":884,"column":8},"end":{"line":884,"column":62}},"492":{"start":{"line":885,"column":11},"end":{"line":911,"column":5}},"493":{"start":{"line":886,"column":6},"end":{"line":886,"column":35}},"494":{"start":{"line":887,"column":6},"end":{"line":888,"column":22}},"495":{"start":{"line":888,"column":8},"end":{"line":888,"column":22}},"496":{"start":{"line":889,"column":6},"end":{"line":898,"column":39}},"497":{"start":{"line":890,"column":8},"end":{"line":895,"column":49}},"498":{"start":{"line":891,"column":10},"end":{"line":892,"column":52}},"499":{"start":{"line":894,"column":10},"end":{"line":895,"column":49}},"500":{"start":{"line":897,"column":8},"end":{"line":898,"column":39}},"501":{"start":{"line":900,"column":6},"end":{"line":900,"column":21}},"502":{"start":{"line":901,"column":6},"end":{"line":910,"column":39}},"503":{"start":{"line":902,"column":8},"end":{"line":907,"column":49}},"504":{"start":{"line":903,"column":10},"end":{"line":904,"column":52}},"505":{"start":{"line":906,"column":10},"end":{"line":907,"column":49}},"506":{"start":{"line":909,"column":8},"end":{"line":910,"column":39}},"507":{"start":{"line":913,"column":4},"end":{"line":913,"column":31}},"508":{"start":{"line":914,"column":4},"end":{"line":914,"column":15}},"509":{"start":{"line":918,"column":0},"end":{"line":923,"column":1}},"510":{"start":{"line":919,"column":2},"end":{"line":919,"column":39}},"511":{"start":{"line":920,"column":2},"end":{"line":922,"column":15}},"512":{"start":{"line":921,"column":4},"end":{"line":921,"column":38}},"513":{"start":{"line":925,"column":0},"end":{"line":987,"column":1}},"514":{"start":{"line":926,"column":2},"end":{"line":926,"column":21}},"515":{"start":{"line":927,"column":2},"end":{"line":927,"column":47}},"516":{"start":{"line":928,"column":2},"end":{"line":986,"column":5}},"517":{"start":{"line":929,"column":4},"end":{"line":929,"column":50}},"518":{"start":{"line":930,"column":4},"end":{"line":930,"column":20}},"519":{"start":{"line":931,"column":4},"end":{"line":931,"column":26}},"520":{"start":{"line":932,"column":4},"end":{"line":932,"column":26}},"521":{"start":{"line":933,"column":4},"end":{"line":933,"column":18}},"522":{"start":{"line":935,"column":4},"end":{"line":936,"column":16}},"523":{"start":{"line":936,"column":6},"end":{"line":936,"column":16}},"524":{"start":{"line":938,"column":4},"end":{"line":981,"column":5}},"525":{"start":{"line":939,"column":6},"end":{"line":945,"column":7}},"526":{"start":{"line":941,"column":8},"end":{"line":941,"column":23}},"527":{"start":{"line":944,"column":8},"end":{"line":944,"column":18}},"528":{"start":{"line":946,"column":11},"end":{"line":981,"column":5}},"529":{"start":{"line":948,"column":6},"end":{"line":949,"column":14}},"530":{"start":{"line":949,"column":8},"end":{"line":949,"column":14}},"531":{"start":{"line":950,"column":6},"end":{"line":951,"column":14}},"532":{"start":{"line":951,"column":8},"end":{"line":951,"column":14}},"533":{"start":{"line":953,"column":6},"end":{"line":974,"column":7}},"534":{"start":{"line":957,"column":8},"end":{"line":957,"column":20}},"535":{"start":{"line":958,"column":8},"end":{"line":965,"column":9}},"536":{"start":{"line":959,"column":10},"end":{"line":959,"column":21}},"537":{"start":{"line":960,"column":10},"end":{"line":960,"column":16}},"538":{"start":{"line":961,"column":10},"end":{"line":961,"column":16}},"539":{"start":{"line":962,"column":15},"end":{"line":965,"column":9}},"540":{"start":{"line":963,"column":10},"end":{"line":963,"column":21}},"541":{"start":{"line":964,"column":10},"end":{"line":964,"column":16}},"542":{"start":{"line":966,"column":13},"end":{"line":974,"column":7}},"543":{"start":{"line":969,"column":8},"end":{"line":969,"column":19}},"544":{"start":{"line":970,"column":8},"end":{"line":973,"column":21}},"545":{"start":{"line":971,"column":10},"end":{"line":971,"column":21}},"546":{"start":{"line":973,"column":10},"end":{"line":973,"column":21}},"547":{"start":{"line":976,"column":6},"end":{"line":976,"column":41}},"548":{"start":{"line":977,"column":11},"end":{"line":981,"column":5}},"549":{"start":{"line":978,"column":6},"end":{"line":978,"column":52}},"550":{"start":{"line":979,"column":11},"end":{"line":981,"column":5}},"551":{"start":{"line":980,"column":6},"end":{"line":980,"column":68}},"552":{"start":{"line":983,"column":4},"end":{"line":983,"column":32}},"553":{"start":{"line":985,"column":4},"end":{"line":985,"column":15}},"554":{"start":{"line":991,"column":0},"end":{"line":995,"column":1}},"555":{"start":{"line":992,"column":2},"end":{"line":992,"column":37}},"556":{"start":{"line":994,"column":2},"end":{"line":994,"column":43}},"557":{"start":{"line":1002,"column":0},"end":{"line":1027,"column":1}},"558":{"start":{"line":1006,"column":2},"end":{"line":1013,"column":23}},"559":{"start":{"line":1007,"column":4},"end":{"line":1007,"column":14}},"560":{"start":{"line":1008,"column":7},"end":{"line":1013,"column":23}},"561":{"start":{"line":1009,"column":4},"end":{"line":1009,"column":30}},"562":{"start":{"line":1010,"column":7},"end":{"line":1013,"column":23}},"563":{"start":{"line":1011,"column":4},"end":{"line":1011,"column":39}},"564":{"start":{"line":1013,"column":4},"end":{"line":1013,"column":23}},"565":{"start":{"line":1015,"column":2},"end":{"line":1024,"column":19}},"566":{"start":{"line":1016,"column":4},"end":{"line":1016,"column":12}},"567":{"start":{"line":1017,"column":7},"end":{"line":1024,"column":19}},"568":{"start":{"line":1018,"column":4},"end":{"line":1018,"column":34}},"569":{"start":{"line":1019,"column":7},"end":{"line":1024,"column":19}},"570":{"start":{"line":1020,"column":4},"end":{"line":1020,"column":43}},"571":{"start":{"line":1021,"column":7},"end":{"line":1024,"column":19}},"572":{"start":{"line":1022,"column":4},"end":{"line":1022,"column":53}},"573":{"start":{"line":1024,"column":4},"end":{"line":1024,"column":19}},"574":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":34}},"575":{"start":{"line":1031,"column":0},"end":{"line":1043,"column":2}},"576":{"start":{"line":1032,"column":2},"end":{"line":1033,"column":17}},"577":{"start":{"line":1033,"column":4},"end":{"line":1033,"column":17}},"578":{"start":{"line":1035,"column":2},"end":{"line":1036,"column":46}},"579":{"start":{"line":1036,"column":4},"end":{"line":1036,"column":46}},"580":{"start":{"line":1038,"column":2},"end":{"line":1041,"column":3}},"581":{"start":{"line":1039,"column":4},"end":{"line":1040,"column":18}},"582":{"start":{"line":1040,"column":6},"end":{"line":1040,"column":18}},"583":{"start":{"line":1042,"column":2},"end":{"line":1042,"column":15}},"584":{"start":{"line":1045,"column":0},"end":{"line":1076,"column":1}},"585":{"start":{"line":1046,"column":2},"end":{"line":1049,"column":3}},"586":{"start":{"line":1047,"column":4},"end":{"line":1048,"column":19}},"587":{"start":{"line":1048,"column":6},"end":{"line":1048,"column":19}},"588":{"start":{"line":1051,"column":2},"end":{"line":1073,"column":3}},"589":{"start":{"line":1057,"column":4},"end":{"line":1069,"column":5}},"590":{"start":{"line":1058,"column":6},"end":{"line":1058,"column":27}},"591":{"start":{"line":1059,"column":6},"end":{"line":1060,"column":17}},"592":{"start":{"line":1060,"column":8},"end":{"line":1060,"column":17}},"593":{"start":{"line":1062,"column":6},"end":{"line":1068,"column":7}},"594":{"start":{"line":1063,"column":8},"end":{"line":1063,"column":36}},"595":{"start":{"line":1064,"column":8},"end":{"line":1067,"column":22}},"596":{"start":{"line":1067,"column":10},"end":{"line":1067,"column":22}},"597":{"start":{"line":1072,"column":4},"end":{"line":1072,"column":17}},"598":{"start":{"line":1075,"column":2},"end":{"line":1075,"column":14}},"599":{"start":{"line":1078,"column":0},"end":{"line":1078,"column":30}},"600":{"start":{"line":1079,"column":0},"end":{"line":1086,"column":1}},"601":{"start":{"line":1080,"column":2},"end":{"line":1084,"column":3}},"602":{"start":{"line":1081,"column":4},"end":{"line":1081,"column":36}},"603":{"start":{"line":1083,"column":4},"end":{"line":1083,"column":17}},"604":{"start":{"line":1085,"column":2},"end":{"line":1085,"column":29}},"605":{"start":{"line":1088,"column":0},"end":{"line":1088,"column":38}},"606":{"start":{"line":1089,"column":0},"end":{"line":1095,"column":1}},"607":{"start":{"line":1090,"column":2},"end":{"line":1094,"column":16}},"608":{"start":{"line":1091,"column":4},"end":{"line":1091,"column":44}},"609":{"start":{"line":1093,"column":4},"end":{"line":1093,"column":33}},"610":{"start":{"line":1097,"column":0},"end":{"line":1097,"column":38}},"611":{"start":{"line":1098,"column":0},"end":{"line":1104,"column":1}},"612":{"start":{"line":1099,"column":2},"end":{"line":1103,"column":16}},"613":{"start":{"line":1100,"column":4},"end":{"line":1100,"column":44}},"614":{"start":{"line":1102,"column":4},"end":{"line":1102,"column":32}},"615":{"start":{"line":1106,"column":0},"end":{"line":1106,"column":32}},"616":{"start":{"line":1107,"column":0},"end":{"line":1115,"column":1}},"617":{"start":{"line":1108,"column":2},"end":{"line":1114,"column":3}},"618":{"start":{"line":1111,"column":4},"end":{"line":1111,"column":48}},"619":{"start":{"line":1113,"column":4},"end":{"line":1113,"column":16}},"620":{"start":{"line":1118,"column":0},"end":{"line":1118,"column":18}},"621":{"start":{"line":1119,"column":0},"end":{"line":1121,"column":1}},"622":{"start":{"line":1120,"column":2},"end":{"line":1120,"column":45}},"623":{"start":{"line":1124,"column":0},"end":{"line":1124,"column":18}},"624":{"start":{"line":1125,"column":0},"end":{"line":1127,"column":1}},"625":{"start":{"line":1126,"column":2},"end":{"line":1126,"column":45}},"626":{"start":{"line":1129,"column":0},"end":{"line":1129,"column":26}},"627":{"start":{"line":1130,"column":0},"end":{"line":1197,"column":1}},"628":{"start":{"line":1131,"column":2},"end":{"line":1131,"column":39}},"629":{"start":{"line":1132,"column":2},"end":{"line":1132,"column":34}},"630":{"start":{"line":1134,"column":2},"end":{"line":1134,"column":37}},"631":{"start":{"line":1135,"column":2},"end":{"line":1152,"column":3}},"632":{"start":{"line":1137,"column":6},"end":{"line":1137,"column":16}},"633":{"start":{"line":1138,"column":6},"end":{"line":1138,"column":18}},"634":{"start":{"line":1139,"column":6},"end":{"line":1139,"column":16}},"635":{"start":{"line":1140,"column":6},"end":{"line":1140,"column":17}},"636":{"start":{"line":1141,"column":6},"end":{"line":1141,"column":19}},"637":{"start":{"line":1142,"column":6},"end":{"line":1142,"column":12}},"638":{"start":{"line":1144,"column":6},"end":{"line":1144,"column":16}},"639":{"start":{"line":1145,"column":6},"end":{"line":1145,"column":18}},"640":{"start":{"line":1146,"column":6},"end":{"line":1146,"column":16}},"641":{"start":{"line":1147,"column":6},"end":{"line":1147,"column":17}},"642":{"start":{"line":1148,"column":6},"end":{"line":1148,"column":19}},"643":{"start":{"line":1149,"column":6},"end":{"line":1149,"column":12}},"644":{"start":{"line":1151,"column":6},"end":{"line":1151,"column":67}},"645":{"start":{"line":1155,"column":2},"end":{"line":1157,"column":3}},"646":{"start":{"line":1156,"column":4},"end":{"line":1156,"column":17}},"647":{"start":{"line":1162,"column":2},"end":{"line":1195,"column":3}},"648":{"start":{"line":1163,"column":4},"end":{"line":1163,"column":35}},"649":{"start":{"line":1165,"column":4},"end":{"line":1165,"column":20}},"650":{"start":{"line":1166,"column":4},"end":{"line":1166,"column":19}},"651":{"start":{"line":1168,"column":4},"end":{"line":1179,"column":7}},"652":{"start":{"line":1169,"column":6},"end":{"line":1171,"column":7}},"653":{"start":{"line":1170,"column":8},"end":{"line":1170,"column":46}},"654":{"start":{"line":1172,"column":6},"end":{"line":1172,"column":32}},"655":{"start":{"line":1173,"column":6},"end":{"line":1173,"column":30}},"656":{"start":{"line":1174,"column":6},"end":{"line":1178,"column":7}},"657":{"start":{"line":1175,"column":8},"end":{"line":1175,"column":26}},"658":{"start":{"line":1176,"column":13},"end":{"line":1178,"column":7}},"659":{"start":{"line":1177,"column":8},"end":{"line":1177,"column":25}},"660":{"start":{"line":1183,"column":4},"end":{"line":1185,"column":5}},"661":{"start":{"line":1184,"column":6},"end":{"line":1184,"column":19}},"662":{"start":{"line":1189,"column":4},"end":{"line":1194,"column":5}},"663":{"start":{"line":1191,"column":6},"end":{"line":1191,"column":19}},"664":{"start":{"line":1192,"column":11},"end":{"line":1194,"column":5}},"665":{"start":{"line":1193,"column":6},"end":{"line":1193,"column":19}},"666":{"start":{"line":1196,"column":2},"end":{"line":1196,"column":14}},"667":{"start":{"line":1199,"column":0},"end":{"line":1199,"column":32}},"668":{"start":{"line":1200,"column":0},"end":{"line":1203,"column":1}},"669":{"start":{"line":1201,"column":2},"end":{"line":1201,"column":37}},"670":{"start":{"line":1202,"column":2},"end":{"line":1202,"column":73}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":12},"end":{"line":5,"column":12}},{"start":{"line":5,"column":12},"end":{"line":5,"column":12}}]},"2":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":16},"end":{"line":5,"column":43}},{"start":{"line":6,"column":16},"end":{"line":6,"column":27}},{"start":{"line":7,"column":16},"end":{"line":7,"column":38}},{"start":{"line":8,"column":16},"end":{"line":8,"column":58}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":23},"end":{"line":22,"column":46}},{"start":{"line":22,"column":50},"end":{"line":22,"column":66}}]},"4":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"5":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"6":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":240,"column":2}},{"start":{"line":240,"column":2},"end":{"line":240,"column":2}}]},"7":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"8":{"line":246,"type":"cond-expr","locations":[{"start":{"line":246,"column":18},"end":{"line":246,"column":27}},{"start":{"line":246,"column":30},"end":{"line":246,"column":38}}]},"9":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"10":{"line":260,"type":"cond-expr","locations":[{"start":{"line":260,"column":13},"end":{"line":260,"column":22}},{"start":{"line":260,"column":25},"end":{"line":260,"column":29}}]},"11":{"line":267,"type":"cond-expr","locations":[{"start":{"line":267,"column":13},"end":{"line":267,"column":22}},{"start":{"line":267,"column":25},"end":{"line":267,"column":29}}]},"12":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":2},"end":{"line":273,"column":2}},{"start":{"line":273,"column":2},"end":{"line":273,"column":2}}]},"13":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":4},"end":{"line":274,"column":4}},{"start":{"line":274,"column":4},"end":{"line":274,"column":4}}]},"14":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":9},"end":{"line":278,"column":9}},{"start":{"line":278,"column":9},"end":{"line":278,"column":9}}]},"15":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"16":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":2},"end":{"line":285,"column":2}},{"start":{"line":285,"column":2},"end":{"line":285,"column":2}}]},"17":{"line":290,"type":"cond-expr","locations":[{"start":{"line":290,"column":39},"end":{"line":290,"column":48}},{"start":{"line":290,"column":51},"end":{"line":290,"column":59}}]},"18":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":2},"end":{"line":292,"column":2}},{"start":{"line":292,"column":2},"end":{"line":292,"column":2}}]},"19":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"20":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":35}},{"start":{"line":302,"column":39},"end":{"line":302,"column":53}}]},"21":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":2},"end":{"line":305,"column":2}},{"start":{"line":305,"column":2},"end":{"line":305,"column":2}}]},"22":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":6},"end":{"line":305,"column":35}},{"start":{"line":305,"column":39},"end":{"line":305,"column":53}}]},"23":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":308,"column":2}},{"start":{"line":308,"column":2},"end":{"line":308,"column":2}}]},"24":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":6},"end":{"line":308,"column":35}},{"start":{"line":308,"column":39},"end":{"line":308,"column":53}}]},"25":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"26":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":6},"end":{"line":316,"column":6}},{"start":{"line":316,"column":6},"end":{"line":316,"column":6}}]},"27":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":8},"end":{"line":318,"column":8}},{"start":{"line":318,"column":8},"end":{"line":318,"column":8}}]},"28":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":12},"end":{"line":318,"column":20}},{"start":{"line":318,"column":24},"end":{"line":318,"column":46}}]},"29":{"line":324,"type":"cond-expr","locations":[{"start":{"line":324,"column":22},"end":{"line":324,"column":37}},{"start":{"line":324,"column":40},"end":{"line":324,"column":42}}]},"30":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":2},"end":{"line":330,"column":2}},{"start":{"line":330,"column":2},"end":{"line":330,"column":2}}]},"31":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":2},"end":{"line":341,"column":2}},{"start":{"line":341,"column":2},"end":{"line":341,"column":2}}]},"32":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":9},"end":{"line":344,"column":32}},{"start":{"line":344,"column":36},"end":{"line":344,"column":58}}]},"33":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":2},"end":{"line":348,"column":2}},{"start":{"line":348,"column":2},"end":{"line":348,"column":2}}]},"34":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":9},"end":{"line":351,"column":52}},{"start":{"line":352,"column":9},"end":{"line":352,"column":52}},{"start":{"line":353,"column":9},"end":{"line":353,"column":52}}]},"35":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"36":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":2},"end":{"line":361,"column":2}},{"start":{"line":361,"column":2},"end":{"line":361,"column":2}}]},"37":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":6},"end":{"line":361,"column":28}},{"start":{"line":361,"column":32},"end":{"line":361,"column":56}}]},"38":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":7},"end":{"line":363,"column":7}},{"start":{"line":363,"column":7},"end":{"line":363,"column":7}}]},"39":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":11},"end":{"line":363,"column":34}},{"start":{"line":363,"column":38},"end":{"line":363,"column":61}}]},"40":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":7},"end":{"line":365,"column":7}},{"start":{"line":365,"column":7},"end":{"line":365,"column":7}}]},"41":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":11},"end":{"line":365,"column":34}},{"start":{"line":365,"column":38},"end":{"line":365,"column":62}}]},"42":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":4},"end":{"line":373,"column":4}},{"start":{"line":373,"column":4},"end":{"line":373,"column":4}}]},"43":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":8},"end":{"line":373,"column":23}},{"start":{"line":373,"column":27},"end":{"line":373,"column":42}}]},"44":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":9},"end":{"line":375,"column":9}},{"start":{"line":375,"column":9},"end":{"line":375,"column":9}}]},"45":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":9},"end":{"line":377,"column":9}},{"start":{"line":377,"column":9},"end":{"line":377,"column":9}}]},"46":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":9},"end":{"line":379,"column":9}},{"start":{"line":379,"column":9},"end":{"line":379,"column":9}}]},"47":{"line":389,"type":"switch","locations":[{"start":{"line":390,"column":4},"end":{"line":396,"column":12}},{"start":{"line":397,"column":4},"end":{"line":402,"column":12}},{"start":{"line":403,"column":4},"end":{"line":410,"column":12}},{"start":{"line":413,"column":4},"end":{"line":417,"column":12}},{"start":{"line":419,"column":4},"end":{"line":429,"column":12}},{"start":{"line":430,"column":4},"end":{"line":439,"column":12}},{"start":{"line":440,"column":4},"end":{"line":448,"column":12}},{"start":{"line":451,"column":4},"end":{"line":474,"column":12}},{"start":{"line":476,"column":4},"end":{"line":477,"column":64}}]},"48":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":6},"end":{"line":414,"column":6}},{"start":{"line":414,"column":6},"end":{"line":414,"column":6}}]},"49":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":6},"end":{"line":424,"column":6}},{"start":{"line":424,"column":6},"end":{"line":424,"column":6}}]},"50":{"line":424,"type":"binary-expr","locations":[{"start":{"line":424,"column":10},"end":{"line":424,"column":26}},{"start":{"line":424,"column":30},"end":{"line":424,"column":46}},{"start":{"line":424,"column":50},"end":{"line":424,"column":78}}]},"51":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":6},"end":{"line":435,"column":6}},{"start":{"line":435,"column":6},"end":{"line":435,"column":6}}]},"52":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":10},"end":{"line":435,"column":26}},{"start":{"line":435,"column":30},"end":{"line":435,"column":58}}]},"53":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":6},"end":{"line":445,"column":6}},{"start":{"line":445,"column":6},"end":{"line":445,"column":6}}]},"54":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":6},"end":{"line":452,"column":6}},{"start":{"line":452,"column":6},"end":{"line":452,"column":6}}]},"55":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":10},"end":{"line":457,"column":10}},{"start":{"line":457,"column":10},"end":{"line":457,"column":10}}]},"56":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":8},"end":{"line":462,"column":8}},{"start":{"line":462,"column":8},"end":{"line":462,"column":8}}]},"57":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":6},"end":{"line":465,"column":6}},{"start":{"line":465,"column":6},"end":{"line":465,"column":6}}]},"58":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":8},"end":{"line":468,"column":8}},{"start":{"line":468,"column":8},"end":{"line":468,"column":8}}]},"59":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":10},"end":{"line":469,"column":10}},{"start":{"line":469,"column":10},"end":{"line":469,"column":10}}]},"60":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":486,"column":2}},{"start":{"line":486,"column":2},"end":{"line":486,"column":2}}]},"61":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":2},"end":{"line":500,"column":2}},{"start":{"line":500,"column":2},"end":{"line":500,"column":2}}]},"62":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":4},"end":{"line":505,"column":4}},{"start":{"line":505,"column":4},"end":{"line":505,"column":4}}]},"63":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":8},"end":{"line":505,"column":28}},{"start":{"line":505,"column":32},"end":{"line":505,"column":52}}]},"64":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":8},"end":{"line":507,"column":8}},{"start":{"line":507,"column":8},"end":{"line":507,"column":8}}]},"65":{"line":507,"type":"binary-expr","locations":[{"start":{"line":507,"column":12},"end":{"line":507,"column":27}},{"start":{"line":507,"column":31},"end":{"line":507,"column":46}},{"start":{"line":507,"column":50},"end":{"line":507,"column":65}}]},"66":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":10},"end":{"line":508,"column":10}},{"start":{"line":508,"column":10},"end":{"line":508,"column":10}}]},"67":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":6},"end":{"line":516,"column":6}},{"start":{"line":516,"column":6},"end":{"line":516,"column":6}}]},"68":{"line":516,"type":"binary-expr","locations":[{"start":{"line":516,"column":10},"end":{"line":516,"column":25}},{"start":{"line":516,"column":29},"end":{"line":516,"column":44}},{"start":{"line":516,"column":48},"end":{"line":516,"column":63}}]},"69":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":8},"end":{"line":517,"column":8}},{"start":{"line":517,"column":8},"end":{"line":517,"column":8}}]},"70":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":2},"end":{"line":532,"column":2}},{"start":{"line":532,"column":2},"end":{"line":532,"column":2}}]},"71":{"line":532,"type":"binary-expr","locations":[{"start":{"line":532,"column":6},"end":{"line":532,"column":10}},{"start":{"line":532,"column":14},"end":{"line":532,"column":18}}]},"72":{"line":537,"type":"cond-expr","locations":[{"start":{"line":537,"column":27},"end":{"line":537,"column":29}},{"start":{"line":538,"column":9},"end":{"line":541,"column":10}}]},"73":{"line":537,"type":"binary-expr","locations":[{"start":{"line":537,"column":10},"end":{"line":537,"column":14}},{"start":{"line":537,"column":18},"end":{"line":537,"column":23}}]},"74":{"line":538,"type":"cond-expr","locations":[{"start":{"line":538,"column":27},"end":{"line":538,"column":28}},{"start":{"line":539,"column":9},"end":{"line":541,"column":10}}]},"75":{"line":538,"type":"binary-expr","locations":[{"start":{"line":538,"column":10},"end":{"line":538,"column":14}},{"start":{"line":538,"column":18},"end":{"line":538,"column":23}}]},"76":{"line":539,"type":"cond-expr","locations":[{"start":{"line":539,"column":17},"end":{"line":539,"column":19}},{"start":{"line":540,"column":9},"end":{"line":541,"column":10}}]},"77":{"line":540,"type":"cond-expr","locations":[{"start":{"line":540,"column":17},"end":{"line":540,"column":18}},{"start":{"line":541,"column":9},"end":{"line":541,"column":10}}]},"78":{"line":626,"type":"switch","locations":[{"start":{"line":627,"column":4},"end":{"line":631,"column":12}},{"start":{"line":632,"column":4},"end":{"line":636,"column":12}},{"start":{"line":637,"column":4},"end":{"line":637,"column":12}},{"start":{"line":637,"column":13},"end":{"line":637,"column":22}},{"start":{"line":637,"column":23},"end":{"line":637,"column":63}},{"start":{"line":638,"column":4},"end":{"line":638,"column":45}},{"start":{"line":639,"column":4},"end":{"line":639,"column":43}},{"start":{"line":640,"column":4},"end":{"line":640,"column":45}},{"start":{"line":641,"column":4},"end":{"line":641,"column":43}},{"start":{"line":642,"column":4},"end":{"line":642,"column":45}},{"start":{"line":643,"column":4},"end":{"line":643,"column":60}}]},"79":{"line":628,"type":"if","locations":[{"start":{"line":628,"column":6},"end":{"line":628,"column":6}},{"start":{"line":628,"column":6},"end":{"line":628,"column":6}}]},"80":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":6},"end":{"line":629,"column":6}},{"start":{"line":629,"column":6},"end":{"line":629,"column":6}}]},"81":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":6},"end":{"line":633,"column":6}},{"start":{"line":633,"column":6},"end":{"line":633,"column":6}}]},"82":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":6},"end":{"line":634,"column":6}},{"start":{"line":634,"column":6},"end":{"line":634,"column":6}}]},"83":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":2},"end":{"line":650,"column":2}},{"start":{"line":650,"column":2},"end":{"line":650,"column":2}}]},"84":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":4},"end":{"line":651,"column":4}},{"start":{"line":651,"column":4},"end":{"line":651,"column":4}}]},"85":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":2},"end":{"line":657,"column":2}},{"start":{"line":657,"column":2},"end":{"line":657,"column":2}}]},"86":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":2},"end":{"line":664,"column":2}},{"start":{"line":664,"column":2},"end":{"line":664,"column":2}}]},"87":{"line":674,"type":"cond-expr","locations":[{"start":{"line":674,"column":23},"end":{"line":674,"column":42}},{"start":{"line":674,"column":45},"end":{"line":674,"column":59}}]},"88":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":2},"end":{"line":677,"column":2}},{"start":{"line":677,"column":2},"end":{"line":677,"column":2}}]},"89":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":2},"end":{"line":681,"column":2}},{"start":{"line":681,"column":2},"end":{"line":681,"column":2}}]},"90":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":2},"end":{"line":685,"column":2}},{"start":{"line":685,"column":2},"end":{"line":685,"column":2}}]},"91":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":2},"end":{"line":698,"column":2}},{"start":{"line":698,"column":2},"end":{"line":698,"column":2}}]},"92":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":2},"end":{"line":701,"column":2}},{"start":{"line":701,"column":2},"end":{"line":701,"column":2}}]},"93":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":2},"end":{"line":710,"column":2}},{"start":{"line":710,"column":2},"end":{"line":710,"column":2}}]},"94":{"line":710,"type":"binary-expr","locations":[{"start":{"line":710,"column":7},"end":{"line":710,"column":29}},{"start":{"line":710,"column":34},"end":{"line":710,"column":55}}]},"95":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":2},"end":{"line":713,"column":2}},{"start":{"line":713,"column":2},"end":{"line":713,"column":2}}]},"96":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":2},"end":{"line":727,"column":2}},{"start":{"line":727,"column":2},"end":{"line":727,"column":2}}]},"97":{"line":750,"type":"cond-expr","locations":[{"start":{"line":750,"column":19},"end":{"line":750,"column":39}},{"start":{"line":750,"column":42},"end":{"line":750,"column":57}}]},"98":{"line":769,"type":"cond-expr","locations":[{"start":{"line":769,"column":23},"end":{"line":769,"column":42}},{"start":{"line":769,"column":45},"end":{"line":769,"column":59}}]},"99":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":2},"end":{"line":773,"column":2}},{"start":{"line":773,"column":2},"end":{"line":773,"column":2}}]},"100":{"line":813,"type":"binary-expr","locations":[{"start":{"line":813,"column":9},"end":{"line":813,"column":12}},{"start":{"line":813,"column":16},"end":{"line":813,"column":40}},{"start":{"line":813,"column":44},"end":{"line":813,"column":54}}]},"101":{"line":829,"type":"cond-expr","locations":[{"start":{"line":829,"column":18},"end":{"line":829,"column":32}},{"start":{"line":829,"column":35},"end":{"line":829,"column":44}}]},"102":{"line":834,"type":"if","locations":[{"start":{"line":834,"column":4},"end":{"line":834,"column":4}},{"start":{"line":834,"column":4},"end":{"line":834,"column":4}}]},"103":{"line":836,"type":"if","locations":[{"start":{"line":836,"column":9},"end":{"line":836,"column":9}},{"start":{"line":836,"column":9},"end":{"line":836,"column":9}}]},"104":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":9},"end":{"line":838,"column":9}},{"start":{"line":838,"column":9},"end":{"line":838,"column":9}}]},"105":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":9},"end":{"line":841,"column":9}},{"start":{"line":841,"column":9},"end":{"line":841,"column":9}}]},"106":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":6},"end":{"line":843,"column":6}},{"start":{"line":843,"column":6},"end":{"line":843,"column":6}}]},"107":{"line":871,"type":"cond-expr","locations":[{"start":{"line":871,"column":18},"end":{"line":871,"column":32}},{"start":{"line":871,"column":35},"end":{"line":871,"column":44}}]},"108":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":4},"end":{"line":876,"column":4}},{"start":{"line":876,"column":4},"end":{"line":876,"column":4}}]},"109":{"line":878,"type":"if","locations":[{"start":{"line":878,"column":9},"end":{"line":878,"column":9}},{"start":{"line":878,"column":9},"end":{"line":878,"column":9}}]},"110":{"line":880,"type":"if","locations":[{"start":{"line":880,"column":9},"end":{"line":880,"column":9}},{"start":{"line":880,"column":9},"end":{"line":880,"column":9}}]},"111":{"line":881,"type":"if","locations":[{"start":{"line":881,"column":6},"end":{"line":881,"column":6}},{"start":{"line":881,"column":6},"end":{"line":881,"column":6}}]},"112":{"line":885,"type":"if","locations":[{"start":{"line":885,"column":11},"end":{"line":885,"column":11}},{"start":{"line":885,"column":11},"end":{"line":885,"column":11}}]},"113":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":6},"end":{"line":887,"column":6}},{"start":{"line":887,"column":6},"end":{"line":887,"column":6}}]},"114":{"line":889,"type":"if","locations":[{"start":{"line":889,"column":6},"end":{"line":889,"column":6}},{"start":{"line":889,"column":6},"end":{"line":889,"column":6}}]},"115":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":8},"end":{"line":890,"column":8}},{"start":{"line":890,"column":8},"end":{"line":890,"column":8}}]},"116":{"line":901,"type":"if","locations":[{"start":{"line":901,"column":6},"end":{"line":901,"column":6}},{"start":{"line":901,"column":6},"end":{"line":901,"column":6}}]},"117":{"line":902,"type":"if","locations":[{"start":{"line":902,"column":8},"end":{"line":902,"column":8}},{"start":{"line":902,"column":8},"end":{"line":902,"column":8}}]},"118":{"line":927,"type":"cond-expr","locations":[{"start":{"line":927,"column":18},"end":{"line":927,"column":33}},{"start":{"line":927,"column":36},"end":{"line":927,"column":46}}]},"119":{"line":931,"type":"binary-expr","locations":[{"start":{"line":931,"column":13},"end":{"line":931,"column":15}},{"start":{"line":931,"column":19},"end":{"line":931,"column":25}}]},"120":{"line":932,"type":"binary-expr","locations":[{"start":{"line":932,"column":13},"end":{"line":932,"column":15}},{"start":{"line":932,"column":19},"end":{"line":932,"column":25}}]},"121":{"line":935,"type":"if","locations":[{"start":{"line":935,"column":4},"end":{"line":935,"column":4}},{"start":{"line":935,"column":4},"end":{"line":935,"column":4}}]},"122":{"line":935,"type":"binary-expr","locations":[{"start":{"line":935,"column":8},"end":{"line":935,"column":20}},{"start":{"line":935,"column":24},"end":{"line":935,"column":28}}]},"123":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":4},"end":{"line":938,"column":4}},{"start":{"line":938,"column":4},"end":{"line":938,"column":4}}]},"124":{"line":939,"type":"if","locations":[{"start":{"line":939,"column":6},"end":{"line":939,"column":6}},{"start":{"line":939,"column":6},"end":{"line":939,"column":6}}]},"125":{"line":939,"type":"binary-expr","locations":[{"start":{"line":939,"column":10},"end":{"line":939,"column":22}},{"start":{"line":939,"column":26},"end":{"line":939,"column":38}}]},"126":{"line":946,"type":"if","locations":[{"start":{"line":946,"column":11},"end":{"line":946,"column":11}},{"start":{"line":946,"column":11},"end":{"line":946,"column":11}}]},"127":{"line":946,"type":"binary-expr","locations":[{"start":{"line":946,"column":15},"end":{"line":946,"column":19}},{"start":{"line":946,"column":23},"end":{"line":946,"column":27}}]},"128":{"line":948,"type":"if","locations":[{"start":{"line":948,"column":6},"end":{"line":948,"column":6}},{"start":{"line":948,"column":6},"end":{"line":948,"column":6}}]},"129":{"line":950,"type":"if","locations":[{"start":{"line":950,"column":6},"end":{"line":950,"column":6}},{"start":{"line":950,"column":6},"end":{"line":950,"column":6}}]},"130":{"line":953,"type":"if","locations":[{"start":{"line":953,"column":6},"end":{"line":953,"column":6}},{"start":{"line":953,"column":6},"end":{"line":953,"column":6}}]},"131":{"line":958,"type":"if","locations":[{"start":{"line":958,"column":8},"end":{"line":958,"column":8}},{"start":{"line":958,"column":8},"end":{"line":958,"column":8}}]},"132":{"line":962,"type":"if","locations":[{"start":{"line":962,"column":15},"end":{"line":962,"column":15}},{"start":{"line":962,"column":15},"end":{"line":962,"column":15}}]},"133":{"line":966,"type":"if","locations":[{"start":{"line":966,"column":13},"end":{"line":966,"column":13}},{"start":{"line":966,"column":13},"end":{"line":966,"column":13}}]},"134":{"line":970,"type":"if","locations":[{"start":{"line":970,"column":8},"end":{"line":970,"column":8}},{"start":{"line":970,"column":8},"end":{"line":970,"column":8}}]},"135":{"line":977,"type":"if","locations":[{"start":{"line":977,"column":11},"end":{"line":977,"column":11}},{"start":{"line":977,"column":11},"end":{"line":977,"column":11}}]},"136":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":11},"end":{"line":979,"column":11}},{"start":{"line":979,"column":11},"end":{"line":979,"column":11}}]},"137":{"line":1006,"type":"if","locations":[{"start":{"line":1006,"column":2},"end":{"line":1006,"column":2}},{"start":{"line":1006,"column":2},"end":{"line":1006,"column":2}}]},"138":{"line":1008,"type":"if","locations":[{"start":{"line":1008,"column":7},"end":{"line":1008,"column":7}},{"start":{"line":1008,"column":7},"end":{"line":1008,"column":7}}]},"139":{"line":1010,"type":"if","locations":[{"start":{"line":1010,"column":7},"end":{"line":1010,"column":7}},{"start":{"line":1010,"column":7},"end":{"line":1010,"column":7}}]},"140":{"line":1015,"type":"if","locations":[{"start":{"line":1015,"column":2},"end":{"line":1015,"column":2}},{"start":{"line":1015,"column":2},"end":{"line":1015,"column":2}}]},"141":{"line":1017,"type":"if","locations":[{"start":{"line":1017,"column":7},"end":{"line":1017,"column":7}},{"start":{"line":1017,"column":7},"end":{"line":1017,"column":7}}]},"142":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":7},"end":{"line":1019,"column":7}},{"start":{"line":1019,"column":7},"end":{"line":1019,"column":7}}]},"143":{"line":1021,"type":"if","locations":[{"start":{"line":1021,"column":7},"end":{"line":1021,"column":7}},{"start":{"line":1021,"column":7},"end":{"line":1021,"column":7}}]},"144":{"line":1032,"type":"if","locations":[{"start":{"line":1032,"column":2},"end":{"line":1032,"column":2}},{"start":{"line":1032,"column":2},"end":{"line":1032,"column":2}}]},"145":{"line":1035,"type":"if","locations":[{"start":{"line":1035,"column":2},"end":{"line":1035,"column":2}},{"start":{"line":1035,"column":2},"end":{"line":1035,"column":2}}]},"146":{"line":1039,"type":"if","locations":[{"start":{"line":1039,"column":4},"end":{"line":1039,"column":4}},{"start":{"line":1039,"column":4},"end":{"line":1039,"column":4}}]},"147":{"line":1047,"type":"if","locations":[{"start":{"line":1047,"column":4},"end":{"line":1047,"column":4}},{"start":{"line":1047,"column":4},"end":{"line":1047,"column":4}}]},"148":{"line":1051,"type":"if","locations":[{"start":{"line":1051,"column":2},"end":{"line":1051,"column":2}},{"start":{"line":1051,"column":2},"end":{"line":1051,"column":2}}]},"149":{"line":1059,"type":"if","locations":[{"start":{"line":1059,"column":6},"end":{"line":1059,"column":6}},{"start":{"line":1059,"column":6},"end":{"line":1059,"column":6}}]},"150":{"line":1062,"type":"if","locations":[{"start":{"line":1062,"column":6},"end":{"line":1062,"column":6}},{"start":{"line":1062,"column":6},"end":{"line":1062,"column":6}}]},"151":{"line":1064,"type":"if","locations":[{"start":{"line":1064,"column":8},"end":{"line":1064,"column":8}},{"start":{"line":1064,"column":8},"end":{"line":1064,"column":8}}]},"152":{"line":1064,"type":"binary-expr","locations":[{"start":{"line":1064,"column":12},"end":{"line":1064,"column":43}},{"start":{"line":1065,"column":12},"end":{"line":1065,"column":43}},{"start":{"line":1066,"column":12},"end":{"line":1066,"column":43}}]},"153":{"line":1090,"type":"binary-expr","locations":[{"start":{"line":1090,"column":9},"end":{"line":1094,"column":7}},{"start":{"line":1094,"column":11},"end":{"line":1094,"column":15}}]},"154":{"line":1099,"type":"binary-expr","locations":[{"start":{"line":1099,"column":9},"end":{"line":1103,"column":7}},{"start":{"line":1103,"column":11},"end":{"line":1103,"column":15}}]},"155":{"line":1111,"type":"binary-expr","locations":[{"start":{"line":1111,"column":11},"end":{"line":1111,"column":40}},{"start":{"line":1111,"column":44},"end":{"line":1111,"column":47}}]},"156":{"line":1135,"type":"switch","locations":[{"start":{"line":1136,"column":4},"end":{"line":1142,"column":12}},{"start":{"line":1143,"column":4},"end":{"line":1149,"column":12}},{"start":{"line":1150,"column":4},"end":{"line":1151,"column":67}}]},"157":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":2},"end":{"line":1155,"column":2}},{"start":{"line":1155,"column":2},"end":{"line":1155,"column":2}}]},"158":{"line":1169,"type":"if","locations":[{"start":{"line":1169,"column":6},"end":{"line":1169,"column":6}},{"start":{"line":1169,"column":6},"end":{"line":1169,"column":6}}]},"159":{"line":1172,"type":"binary-expr","locations":[{"start":{"line":1172,"column":13},"end":{"line":1172,"column":17}},{"start":{"line":1172,"column":21},"end":{"line":1172,"column":31}}]},"160":{"line":1173,"type":"binary-expr","locations":[{"start":{"line":1173,"column":12},"end":{"line":1173,"column":15}},{"start":{"line":1173,"column":19},"end":{"line":1173,"column":29}}]},"161":{"line":1174,"type":"if","locations":[{"start":{"line":1174,"column":6},"end":{"line":1174,"column":6}},{"start":{"line":1174,"column":6},"end":{"line":1174,"column":6}}]},"162":{"line":1176,"type":"if","locations":[{"start":{"line":1176,"column":13},"end":{"line":1176,"column":13}},{"start":{"line":1176,"column":13},"end":{"line":1176,"column":13}}]},"163":{"line":1183,"type":"if","locations":[{"start":{"line":1183,"column":4},"end":{"line":1183,"column":4}},{"start":{"line":1183,"column":4},"end":{"line":1183,"column":4}}]},"164":{"line":1183,"type":"binary-expr","locations":[{"start":{"line":1183,"column":8},"end":{"line":1183,"column":30}},{"start":{"line":1183,"column":34},"end":{"line":1183,"column":57}}]},"165":{"line":1189,"type":"if","locations":[{"start":{"line":1189,"column":4},"end":{"line":1189,"column":4}},{"start":{"line":1189,"column":4},"end":{"line":1189,"column":4}}]},"166":{"line":1189,"type":"binary-expr","locations":[{"start":{"line":1189,"column":9},"end":{"line":1189,"column":22}},{"start":{"line":1189,"column":26},"end":{"line":1189,"column":47}},{"start":{"line":1190,"column":8},"end":{"line":1190,"column":34}}]},"167":{"line":1192,"type":"if","locations":[{"start":{"line":1192,"column":11},"end":{"line":1192,"column":11}},{"start":{"line":1192,"column":11},"end":{"line":1192,"column":11}}]},"168":{"line":1192,"type":"binary-expr","locations":[{"start":{"line":1192,"column":15},"end":{"line":1192,"column":37}},{"start":{"line":1192,"column":41},"end":{"line":1192,"column":66}}]},"169":{"line":1202,"type":"cond-expr","locations":[{"start":{"line":1202,"column":48},"end":{"line":1202,"column":65}},{"start":{"line":1202,"column":68},"end":{"line":1202,"column":72}}]},"170":{"line":1202,"type":"binary-expr","locations":[{"start":{"line":1202,"column":10},"end":{"line":1202,"column":16}},{"start":{"line":1202,"column":20},"end":{"line":1202,"column":44}}]}},"code":["exports = module.exports = SemVer;","","// The debug function is excluded entirely from the minified version.","/* nomin */ var debug;","/* nomin */ if (typeof process === 'object' &&","    /* nomin */ process.env &&","    /* nomin */ process.env.NODE_DEBUG &&","    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))","  /* nomin */ debug = function() {","    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);","    /* nomin */ args.unshift('SEMVER');","    /* nomin */ console.log.apply(console, args);","    /* nomin */ };","/* nomin */ else","  /* nomin */ debug = function() {};","","// Note: this is the semver.org version of the spec that it implements","// Not necessarily the package version of this code.","exports.SEMVER_SPEC_VERSION = '2.0.0';","","var MAX_LENGTH = 256;","var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;","","// The actual regexps go on exports.re","var re = exports.re = [];","var src = exports.src = [];","var R = 0;","","// The following Regular Expressions can be used for tokenizing,","// validating, and parsing SemVer version strings.","","// ## Numeric Identifier","// A single `0`, or a non-zero digit followed by zero or more digits.","","var NUMERICIDENTIFIER = R++;","src[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';","var NUMERICIDENTIFIERLOOSE = R++;","src[NUMERICIDENTIFIERLOOSE] = '[0-9]+';","","","// ## Non-numeric Identifier","// Zero or more digits, followed by a letter or hyphen, and then zero or","// more letters, digits, or hyphens.","","var NONNUMERICIDENTIFIER = R++;","src[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';","","","// ## Main Version","// Three dot-separated numeric identifiers.","","var MAINVERSION = R++;","src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +","                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +","                   '(' + src[NUMERICIDENTIFIER] + ')';","","var MAINVERSIONLOOSE = R++;","src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +","                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +","                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';","","// ## Pre-release Version Identifier","// A numeric identifier, or a non-numeric identifier.","","var PRERELEASEIDENTIFIER = R++;","src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +","                            '|' + src[NONNUMERICIDENTIFIER] + ')';","","var PRERELEASEIDENTIFIERLOOSE = R++;","src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +","                                 '|' + src[NONNUMERICIDENTIFIER] + ')';","","","// ## Pre-release Version","// Hyphen, followed by one or more dot-separated pre-release version","// identifiers.","","var PRERELEASE = R++;","src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +","                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';","","var PRERELEASELOOSE = R++;","src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +","                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';","","// ## Build Metadata Identifier","// Any combination of digits, letters, or hyphens.","","var BUILDIDENTIFIER = R++;","src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';","","// ## Build Metadata","// Plus sign, followed by one or more period-separated build metadata","// identifiers.","","var BUILD = R++;","src[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +","             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';","","","// ## Full Version String","// A main version, followed optionally by a pre-release version and","// build metadata.","","// Note that the only major, minor, patch, and pre-release sections of","// the version string are capturing groups.  The build metadata is not a","// capturing group, because it should not ever be used in version","// comparison.","","var FULL = R++;","var FULLPLAIN = 'v?' + src[MAINVERSION] +","                src[PRERELEASE] + '?' +","                src[BUILD] + '?';","","src[FULL] = '^' + FULLPLAIN + '$';","","// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.","// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty","// common in the npm registry.","var LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +","                 src[PRERELEASELOOSE] + '?' +","                 src[BUILD] + '?';","","var LOOSE = R++;","src[LOOSE] = '^' + LOOSEPLAIN + '$';","","var GTLT = R++;","src[GTLT] = '((?:<|>)?=?)';","","// Something like \"2.*\" or \"1.2.x\".","// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"","// Only the first item is strictly required.","var XRANGEIDENTIFIERLOOSE = R++;","src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';","var XRANGEIDENTIFIER = R++;","src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';","","var XRANGEPLAIN = R++;","src[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +","                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +","                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +","                   '(?:' + src[PRERELEASE] + ')?' +","                   src[BUILD] + '?' +","                   ')?)?';","","var XRANGEPLAINLOOSE = R++;","src[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +","                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +","                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +","                        '(?:' + src[PRERELEASELOOSE] + ')?' +","                        src[BUILD] + '?' +","                        ')?)?';","","var XRANGE = R++;","src[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';","var XRANGELOOSE = R++;","src[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';","","// Tilde ranges.","// Meaning is \"reasonably at or greater than\"","var LONETILDE = R++;","src[LONETILDE] = '(?:~>?)';","","var TILDETRIM = R++;","src[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';","re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');","var tildeTrimReplace = '$1~';","","var TILDE = R++;","src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';","var TILDELOOSE = R++;","src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';","","// Caret ranges.","// Meaning is \"at least and backwards compatible with\"","var LONECARET = R++;","src[LONECARET] = '(?:\\\\^)';","","var CARETTRIM = R++;","src[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';","re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');","var caretTrimReplace = '$1^';","","var CARET = R++;","src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';","var CARETLOOSE = R++;","src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';","","// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"","var COMPARATORLOOSE = R++;","src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';","var COMPARATOR = R++;","src[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';","","","// An expression to strip any whitespace between the gtlt and the thing","// it modifies, so that `> 1.2.3` ==> `>1.2.3`","var COMPARATORTRIM = R++;","src[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +","                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';","","// this one has to use the /g flag","re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');","var comparatorTrimReplace = '$1$2$3';","","","// Something like `1.2.3 - 1.2.4`","// Note that these all use the loose form, because they'll be","// checked against either the strict or loose comparator form","// later.","var HYPHENRANGE = R++;","src[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +","                   '\\\\s+-\\\\s+' +","                   '(' + src[XRANGEPLAIN] + ')' +","                   '\\\\s*$';","","var HYPHENRANGELOOSE = R++;","src[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +","                        '\\\\s+-\\\\s+' +","                        '(' + src[XRANGEPLAINLOOSE] + ')' +","                        '\\\\s*$';","","// Star ranges basically just allow anything at all.","var STAR = R++;","src[STAR] = '(<|>)?=?\\\\s*\\\\*';","","// Compile to actual regexp objects.","// All are flag-free, unless they were created above with a flag.","for (var i = 0; i < R; i++) {","  debug(i, src[i]);","  if (!re[i])","    re[i] = new RegExp(src[i]);","}","","exports.parse = parse;","function parse(version, loose) {","  if (version instanceof SemVer)","    return version;","","  if (typeof version !== 'string')","    return null;","","  if (version.length > MAX_LENGTH)","    return null;","","  var r = loose ? re[LOOSE] : re[FULL];","  if (!r.test(version))","    return null;","","  try {","    return new SemVer(version, loose);","  } catch (er) {","    return null;","  }","}","","exports.valid = valid;","function valid(version, loose) {","  var v = parse(version, loose);","  return v ? v.version : null;","}","","","exports.clean = clean;","function clean(version, loose) {","  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);","  return s ? s.version : null;","}","","exports.SemVer = SemVer;","","function SemVer(version, loose) {","  if (version instanceof SemVer) {","    if (version.loose === loose)","      return version;","    else","      version = version.version;","  } else if (typeof version !== 'string') {","    throw new TypeError('Invalid Version: ' + version);","  }","","  if (version.length > MAX_LENGTH)","    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')","","  if (!(this instanceof SemVer))","    return new SemVer(version, loose);","","  debug('SemVer', version, loose);","  this.loose = loose;","  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);","","  if (!m)","    throw new TypeError('Invalid Version: ' + version);","","  this.raw = version;","","  // these are actually numbers","  this.major = +m[1];","  this.minor = +m[2];","  this.patch = +m[3];","","  if (this.major > MAX_SAFE_INTEGER || this.major < 0)","    throw new TypeError('Invalid major version')","","  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)","    throw new TypeError('Invalid minor version')","","  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)","    throw new TypeError('Invalid patch version')","","  // numberify any prerelease numeric ids","  if (!m[4])","    this.prerelease = [];","  else","    this.prerelease = m[4].split('.').map(function(id) {","      if (/^[0-9]+$/.test(id)) {","        var num = +id;","        if (num >= 0 && num < MAX_SAFE_INTEGER)","          return num;","      }","      return id;","    });","","  this.build = m[5] ? m[5].split('.') : [];","  this.format();","}","","SemVer.prototype.format = function() {","  this.version = this.major + '.' + this.minor + '.' + this.patch;","  if (this.prerelease.length)","    this.version += '-' + this.prerelease.join('.');","  return this.version;","};","","SemVer.prototype.toString = function() {","  return this.version;","};","","SemVer.prototype.compare = function(other) {","  debug('SemVer.compare', this.version, this.loose, other);","  if (!(other instanceof SemVer))","    other = new SemVer(other, this.loose);","","  return this.compareMain(other) || this.comparePre(other);","};","","SemVer.prototype.compareMain = function(other) {","  if (!(other instanceof SemVer))","    other = new SemVer(other, this.loose);","","  return compareIdentifiers(this.major, other.major) ||","         compareIdentifiers(this.minor, other.minor) ||","         compareIdentifiers(this.patch, other.patch);","};","","SemVer.prototype.comparePre = function(other) {","  if (!(other instanceof SemVer))","    other = new SemVer(other, this.loose);","","  // NOT having a prerelease is > having one","  if (this.prerelease.length && !other.prerelease.length)","    return -1;","  else if (!this.prerelease.length && other.prerelease.length)","    return 1;","  else if (!this.prerelease.length && !other.prerelease.length)","    return 0;","","  var i = 0;","  do {","    var a = this.prerelease[i];","    var b = other.prerelease[i];","    debug('prerelease compare', i, a, b);","    if (a === undefined && b === undefined)","      return 0;","    else if (b === undefined)","      return 1;","    else if (a === undefined)","      return -1;","    else if (a === b)","      continue;","    else","      return compareIdentifiers(a, b);","  } while (++i);","};","","// preminor will bump the version up to the next minor release, and immediately","// down to pre-release. premajor and prepatch work the same way.","SemVer.prototype.inc = function(release, identifier) {","  switch (release) {","    case 'premajor':","      this.prerelease.length = 0;","      this.patch = 0;","      this.minor = 0;","      this.major++;","      this.inc('pre', identifier);","      break;","    case 'preminor':","      this.prerelease.length = 0;","      this.patch = 0;","      this.minor++;","      this.inc('pre', identifier);","      break;","    case 'prepatch':","      // If this is already a prerelease, it will bump to the next version","      // drop any prereleases that might already exist, since they are not","      // relevant at this point.","      this.prerelease.length = 0;","      this.inc('patch', identifier);","      this.inc('pre', identifier);","      break;","    // If the input is a non-prerelease version, this acts the same as","    // prepatch.","    case 'prerelease':","      if (this.prerelease.length === 0)","        this.inc('patch', identifier);","      this.inc('pre', identifier);","      break;","","    case 'major':","      // If this is a pre-major version, bump up to the same major version.","      // Otherwise increment major.","      // 1.0.0-5 bumps to 1.0.0","      // 1.1.0 bumps to 2.0.0","      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)","        this.major++;","      this.minor = 0;","      this.patch = 0;","      this.prerelease = [];","      break;","    case 'minor':","      // If this is a pre-minor version, bump up to the same minor version.","      // Otherwise increment minor.","      // 1.2.0-5 bumps to 1.2.0","      // 1.2.1 bumps to 1.3.0","      if (this.patch !== 0 || this.prerelease.length === 0)","        this.minor++;","      this.patch = 0;","      this.prerelease = [];","      break;","    case 'patch':","      // If this is not a pre-release version, it will increment the patch.","      // If it is a pre-release it will bump up to the same patch version.","      // 1.2.0-5 patches to 1.2.0","      // 1.2.0 patches to 1.2.1","      if (this.prerelease.length === 0)","        this.patch++;","      this.prerelease = [];","      break;","    // This probably shouldn't be used publicly.","    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.","    case 'pre':","      if (this.prerelease.length === 0)","        this.prerelease = [0];","      else {","        var i = this.prerelease.length;","        while (--i >= 0) {","          if (typeof this.prerelease[i] === 'number') {","            this.prerelease[i]++;","            i = -2;","          }","        }","        if (i === -1) // didn't increment anything","          this.prerelease.push(0);","      }","      if (identifier) {","        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,","        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0","        if (this.prerelease[0] === identifier) {","          if (isNaN(this.prerelease[1]))","            this.prerelease = [identifier, 0];","        } else","          this.prerelease = [identifier, 0];","      }","      break;","","    default:","      throw new Error('invalid increment argument: ' + release);","  }","  this.format();","  this.raw = this.version;","  return this;","};","","exports.inc = inc;","function inc(version, release, loose, identifier) {","  if (typeof(loose) === 'string') {","    identifier = loose;","    loose = undefined;","  }","","  try {","    return new SemVer(version, loose).inc(release, identifier).version;","  } catch (er) {","    return null;","  }","}","","exports.diff = diff;","function diff(version1, version2) {","  if (eq(version1, version2)) {","    return null;","  } else {","    var v1 = parse(version1);","    var v2 = parse(version2);","    if (v1.prerelease.length || v2.prerelease.length) {","      for (var key in v1) {","        if (key === 'major' || key === 'minor' || key === 'patch') {","          if (v1[key] !== v2[key]) {","            return 'pre'+key;","          }","        }","      }","      return 'prerelease';","    }","    for (var key in v1) {","      if (key === 'major' || key === 'minor' || key === 'patch') {","        if (v1[key] !== v2[key]) {","          return key;","        }","      }","    }","  }","}","","exports.compareIdentifiers = compareIdentifiers;","","var numeric = /^[0-9]+$/;","function compareIdentifiers(a, b) {","  var anum = numeric.test(a);","  var bnum = numeric.test(b);","","  if (anum && bnum) {","    a = +a;","    b = +b;","  }","","  return (anum && !bnum) ? -1 :","         (bnum && !anum) ? 1 :","         a < b ? -1 :","         a > b ? 1 :","         0;","}","","exports.rcompareIdentifiers = rcompareIdentifiers;","function rcompareIdentifiers(a, b) {","  return compareIdentifiers(b, a);","}","","exports.major = major;","function major(a, loose) {","  return new SemVer(a, loose).major;","}","","exports.minor = minor;","function minor(a, loose) {","  return new SemVer(a, loose).minor;","}","","exports.patch = patch;","function patch(a, loose) {","  return new SemVer(a, loose).patch;","}","","exports.compare = compare;","function compare(a, b, loose) {","  return new SemVer(a, loose).compare(b);","}","","exports.compareLoose = compareLoose;","function compareLoose(a, b) {","  return compare(a, b, true);","}","","exports.rcompare = rcompare;","function rcompare(a, b, loose) {","  return compare(b, a, loose);","}","","exports.sort = sort;","function sort(list, loose) {","  return list.sort(function(a, b) {","    return exports.compare(a, b, loose);","  });","}","","exports.rsort = rsort;","function rsort(list, loose) {","  return list.sort(function(a, b) {","    return exports.rcompare(a, b, loose);","  });","}","","exports.gt = gt;","function gt(a, b, loose) {","  return compare(a, b, loose) > 0;","}","","exports.lt = lt;","function lt(a, b, loose) {","  return compare(a, b, loose) < 0;","}","","exports.eq = eq;","function eq(a, b, loose) {","  return compare(a, b, loose) === 0;","}","","exports.neq = neq;","function neq(a, b, loose) {","  return compare(a, b, loose) !== 0;","}","","exports.gte = gte;","function gte(a, b, loose) {","  return compare(a, b, loose) >= 0;","}","","exports.lte = lte;","function lte(a, b, loose) {","  return compare(a, b, loose) <= 0;","}","","exports.cmp = cmp;","function cmp(a, op, b, loose) {","  var ret;","  switch (op) {","    case '===':","      if (typeof a === 'object') a = a.version;","      if (typeof b === 'object') b = b.version;","      ret = a === b;","      break;","    case '!==':","      if (typeof a === 'object') a = a.version;","      if (typeof b === 'object') b = b.version;","      ret = a !== b;","      break;","    case '': case '=': case '==': ret = eq(a, b, loose); break;","    case '!=': ret = neq(a, b, loose); break;","    case '>': ret = gt(a, b, loose); break;","    case '>=': ret = gte(a, b, loose); break;","    case '<': ret = lt(a, b, loose); break;","    case '<=': ret = lte(a, b, loose); break;","    default: throw new TypeError('Invalid operator: ' + op);","  }","  return ret;","}","","exports.Comparator = Comparator;","function Comparator(comp, loose) {","  if (comp instanceof Comparator) {","    if (comp.loose === loose)","      return comp;","    else","      comp = comp.value;","  }","","  if (!(this instanceof Comparator))","    return new Comparator(comp, loose);","","  debug('comparator', comp, loose);","  this.loose = loose;","  this.parse(comp);","","  if (this.semver === ANY)","    this.value = '';","  else","    this.value = this.operator + this.semver.version;","","  debug('comp', this);","}","","var ANY = {};","Comparator.prototype.parse = function(comp) {","  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];","  var m = comp.match(r);","","  if (!m)","    throw new TypeError('Invalid comparator: ' + comp);","","  this.operator = m[1];","  if (this.operator === '=')","    this.operator = '';","","  // if it literally is just '>' or '' then allow anything.","  if (!m[2])","    this.semver = ANY;","  else","    this.semver = new SemVer(m[2], this.loose);","};","","Comparator.prototype.toString = function() {","  return this.value;","};","","Comparator.prototype.test = function(version) {","  debug('Comparator.test', version, this.loose);","","  if (this.semver === ANY)","    return true;","","  if (typeof version === 'string')","    version = new SemVer(version, this.loose);","","  return cmp(version, this.operator, this.semver, this.loose);","};","","","exports.Range = Range;","function Range(range, loose) {","  if ((range instanceof Range) && range.loose === loose)","    return range;","","  if (!(this instanceof Range))","    return new Range(range, loose);","","  this.loose = loose;","","  // First, split based on boolean or ||","  this.raw = range;","  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {","    return this.parseRange(range.trim());","  }, this).filter(function(c) {","    // throw out any that are not relevant for whatever reason","    return c.length;","  });","","  if (!this.set.length) {","    throw new TypeError('Invalid SemVer Range: ' + range);","  }","","  this.format();","}","","Range.prototype.format = function() {","  this.range = this.set.map(function(comps) {","    return comps.join(' ').trim();","  }).join('||').trim();","  return this.range;","};","","Range.prototype.toString = function() {","  return this.range;","};","","Range.prototype.parseRange = function(range) {","  var loose = this.loose;","  range = range.trim();","  debug('range', range, loose);","  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`","  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];","  range = range.replace(hr, hyphenReplace);","  debug('hyphen replace', range);","  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`","  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);","  debug('comparator trim', range, re[COMPARATORTRIM]);","","  // `~ 1.2.3` => `~1.2.3`","  range = range.replace(re[TILDETRIM], tildeTrimReplace);","","  // `^ 1.2.3` => `^1.2.3`","  range = range.replace(re[CARETTRIM], caretTrimReplace);","","  // normalize spaces","  range = range.split(/\\s+/).join(' ');","","  // At this point, the range is completely trimmed and","  // ready to be split into comparators.","","  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];","  var set = range.split(' ').map(function(comp) {","    return parseComparator(comp, loose);","  }).join(' ').split(/\\s+/);","  if (this.loose) {","    // in loose mode, throw out any that are not valid comparators","    set = set.filter(function(comp) {","      return !!comp.match(compRe);","    });","  }","  set = set.map(function(comp) {","    return new Comparator(comp, loose);","  });","","  return set;","};","","// Mostly just for testing and legacy API reasons","exports.toComparators = toComparators;","function toComparators(range, loose) {","  return new Range(range, loose).set.map(function(comp) {","    return comp.map(function(c) {","      return c.value;","    }).join(' ').trim().split(' ');","  });","}","","// comprised of xranges, tildes, stars, and gtlt's at this point.","// already replaced the hyphen ranges","// turn into a set of JUST comparators.","function parseComparator(comp, loose) {","  debug('comp', comp);","  comp = replaceCarets(comp, loose);","  debug('caret', comp);","  comp = replaceTildes(comp, loose);","  debug('tildes', comp);","  comp = replaceXRanges(comp, loose);","  debug('xrange', comp);","  comp = replaceStars(comp, loose);","  debug('stars', comp);","  return comp;","}","","function isX(id) {","  return !id || id.toLowerCase() === 'x' || id === '*';","}","","// ~, ~> --> * (any, kinda silly)","// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0","// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0","// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0","// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0","// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0","function replaceTildes(comp, loose) {","  return comp.trim().split(/\\s+/).map(function(comp) {","    return replaceTilde(comp, loose);","  }).join(' ');","}","","function replaceTilde(comp, loose) {","  var r = loose ? re[TILDELOOSE] : re[TILDE];","  return comp.replace(r, function(_, M, m, p, pr) {","    debug('tilde', comp, _, M, m, p, pr);","    var ret;","","    if (isX(M))","      ret = '';","    else if (isX(m))","      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';","    else if (isX(p))","      // ~1.2 == >=1.2.0 <1.3.0","      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';","    else if (pr) {","      debug('replaceTilde pr', pr);","      if (pr.charAt(0) !== '-')","        pr = '-' + pr;","      ret = '>=' + M + '.' + m + '.' + p + pr +","            ' <' + M + '.' + (+m + 1) + '.0';","    } else","      // ~1.2.3 == >=1.2.3 <1.3.0","      ret = '>=' + M + '.' + m + '.' + p +","            ' <' + M + '.' + (+m + 1) + '.0';","","    debug('tilde return', ret);","    return ret;","  });","}","","// ^ --> * (any, kinda silly)","// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0","// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0","// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0","// ^1.2.3 --> >=1.2.3 <2.0.0","// ^1.2.0 --> >=1.2.0 <2.0.0","function replaceCarets(comp, loose) {","  return comp.trim().split(/\\s+/).map(function(comp) {","    return replaceCaret(comp, loose);","  }).join(' ');","}","","function replaceCaret(comp, loose) {","  debug('caret', comp, loose);","  var r = loose ? re[CARETLOOSE] : re[CARET];","  return comp.replace(r, function(_, M, m, p, pr) {","    debug('caret', comp, _, M, m, p, pr);","    var ret;","","    if (isX(M))","      ret = '';","    else if (isX(m))","      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';","    else if (isX(p)) {","      if (M === '0')","        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';","      else","        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';","    } else if (pr) {","      debug('replaceCaret pr', pr);","      if (pr.charAt(0) !== '-')","        pr = '-' + pr;","      if (M === '0') {","        if (m === '0')","          ret = '>=' + M + '.' + m + '.' + p + pr +","                ' <' + M + '.' + m + '.' + (+p + 1);","        else","          ret = '>=' + M + '.' + m + '.' + p + pr +","                ' <' + M + '.' + (+m + 1) + '.0';","      } else","        ret = '>=' + M + '.' + m + '.' + p + pr +","              ' <' + (+M + 1) + '.0.0';","    } else {","      debug('no pr');","      if (M === '0') {","        if (m === '0')","          ret = '>=' + M + '.' + m + '.' + p +","                ' <' + M + '.' + m + '.' + (+p + 1);","        else","          ret = '>=' + M + '.' + m + '.' + p +","                ' <' + M + '.' + (+m + 1) + '.0';","      } else","        ret = '>=' + M + '.' + m + '.' + p +","              ' <' + (+M + 1) + '.0.0';","    }","","    debug('caret return', ret);","    return ret;","  });","}","","function replaceXRanges(comp, loose) {","  debug('replaceXRanges', comp, loose);","  return comp.split(/\\s+/).map(function(comp) {","    return replaceXRange(comp, loose);","  }).join(' ');","}","","function replaceXRange(comp, loose) {","  comp = comp.trim();","  var r = loose ? re[XRANGELOOSE] : re[XRANGE];","  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {","    debug('xRange', comp, ret, gtlt, M, m, p, pr);","    var xM = isX(M);","    var xm = xM || isX(m);","    var xp = xm || isX(p);","    var anyX = xp;","","    if (gtlt === '=' && anyX)","      gtlt = '';","","    if (xM) {","      if (gtlt === '>' || gtlt === '<') {","        // nothing is allowed","        ret = '<0.0.0';","      } else {","        // nothing is forbidden","        ret = '*';","      }","    } else if (gtlt && anyX) {","      // replace X with 0","      if (xm)","        m = 0;","      if (xp)","        p = 0;","","      if (gtlt === '>') {","        // >1 => >=2.0.0","        // >1.2 => >=1.3.0","        // >1.2.3 => >= 1.2.4","        gtlt = '>=';","        if (xm) {","          M = +M + 1;","          m = 0;","          p = 0;","        } else if (xp) {","          m = +m + 1;","          p = 0;","        }","      } else if (gtlt === '<=') {","        // <=0.7.x is actually <0.8.0, since any 0.7.x should","        // pass.  Similarly, <=7.x is actually <8.0.0, etc.","        gtlt = '<';","        if (xm)","          M = +M + 1;","        else","          m = +m + 1;","      }","","      ret = gtlt + M + '.' + m + '.' + p;","    } else if (xm) {","      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';","    } else if (xp) {","      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';","    }","","    debug('xRange return', ret);","","    return ret;","  });","}","","// Because * is AND-ed with everything else in the comparator,","// and '' means \"any version\", just remove the *s entirely.","function replaceStars(comp, loose) {","  debug('replaceStars', comp, loose);","  // Looseness is ignored here.  star is always as loose as it gets!","  return comp.trim().replace(re[STAR], '');","}","","// This function is passed to string.replace(re[HYPHENRANGE])","// M, m, patch, prerelease, build","// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5","// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do","// 1.2 - 3.4 => >=1.2.0 <3.5.0","function hyphenReplace($0,","                       from, fM, fm, fp, fpr, fb,","                       to, tM, tm, tp, tpr, tb) {","","  if (isX(fM))","    from = '';","  else if (isX(fm))","    from = '>=' + fM + '.0.0';","  else if (isX(fp))","    from = '>=' + fM + '.' + fm + '.0';","  else","    from = '>=' + from;","","  if (isX(tM))","    to = '';","  else if (isX(tm))","    to = '<' + (+tM + 1) + '.0.0';","  else if (isX(tp))","    to = '<' + tM + '.' + (+tm + 1) + '.0';","  else if (tpr)","    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;","  else","    to = '<=' + to;","","  return (from + ' ' + to).trim();","}","","","// if ANY of the sets match ALL of its comparators, then pass","Range.prototype.test = function(version) {","  if (!version)","    return false;","","  if (typeof version === 'string')","    version = new SemVer(version, this.loose);","","  for (var i = 0; i < this.set.length; i++) {","    if (testSet(this.set[i], version))","      return true;","  }","  return false;","};","","function testSet(set, version) {","  for (var i = 0; i < set.length; i++) {","    if (!set[i].test(version))","      return false;","  }","","  if (version.prerelease.length) {","    // Find the set of versions that are allowed to have prereleases","    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0","    // That should allow `1.2.3-pr.2` to pass.","    // However, `1.2.4-alpha.notready` should NOT be allowed,","    // even though it's within the range set by the comparators.","    for (var i = 0; i < set.length; i++) {","      debug(set[i].semver);","      if (set[i].semver === ANY)","        continue;","","      if (set[i].semver.prerelease.length > 0) {","        var allowed = set[i].semver;","        if (allowed.major === version.major &&","            allowed.minor === version.minor &&","            allowed.patch === version.patch)","          return true;","      }","    }","","    // Version has a -pre, but it's not one of the ones we like.","    return false;","  }","","  return true;","}","","exports.satisfies = satisfies;","function satisfies(version, range, loose) {","  try {","    range = new Range(range, loose);","  } catch (er) {","    return false;","  }","  return range.test(version);","}","","exports.maxSatisfying = maxSatisfying;","function maxSatisfying(versions, range, loose) {","  return versions.filter(function(version) {","    return satisfies(version, range, loose);","  }).sort(function(a, b) {","    return rcompare(a, b, loose);","  })[0] || null;","}","","exports.minSatisfying = minSatisfying;","function minSatisfying(versions, range, loose) {","  return versions.filter(function(version) {","    return satisfies(version, range, loose);","  }).sort(function(a, b) {","    return compare(a, b, loose);","  })[0] || null;","}","","exports.validRange = validRange;","function validRange(range, loose) {","  try {","    // Return '*' instead of '' so that truthiness works.","    // This will throw if it's invalid anyway","    return new Range(range, loose).range || '*';","  } catch (er) {","    return null;","  }","}","","// Determine if version is less than all the versions possible in the range","exports.ltr = ltr;","function ltr(version, range, loose) {","  return outside(version, range, '<', loose);","}","","// Determine if version is greater than all the versions possible in the range.","exports.gtr = gtr;","function gtr(version, range, loose) {","  return outside(version, range, '>', loose);","}","","exports.outside = outside;","function outside(version, range, hilo, loose) {","  version = new SemVer(version, loose);","  range = new Range(range, loose);","","  var gtfn, ltefn, ltfn, comp, ecomp;","  switch (hilo) {","    case '>':","      gtfn = gt;","      ltefn = lte;","      ltfn = lt;","      comp = '>';","      ecomp = '>=';","      break;","    case '<':","      gtfn = lt;","      ltefn = gte;","      ltfn = gt;","      comp = '<';","      ecomp = '<=';","      break;","    default:","      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');","  }","","  // If it satisifes the range it is not outside","  if (satisfies(version, range, loose)) {","    return false;","  }","","  // From now on, variable terms are as if we're in \"gtr\" mode.","  // but note that everything is flipped for the \"ltr\" function.","","  for (var i = 0; i < range.set.length; ++i) {","    var comparators = range.set[i];","","    var high = null;","    var low = null;","","    comparators.forEach(function(comparator) {","      if (comparator.semver === ANY) {","        comparator = new Comparator('>=0.0.0')","      }","      high = high || comparator;","      low = low || comparator;","      if (gtfn(comparator.semver, high.semver, loose)) {","        high = comparator;","      } else if (ltfn(comparator.semver, low.semver, loose)) {","        low = comparator;","      }","    });","","    // If the edge version comparator has a operator then our version","    // isn't outside it","    if (high.operator === comp || high.operator === ecomp) {","      return false;","    }","","    // If the lowest version comparator has an operator and our version","    // is less than it then it isn't higher than the range","    if ((!low.operator || low.operator === comp) &&","        ltefn(version, low.semver)) {","      return false;","    } else if (low.operator === ecomp && ltfn(version, low.semver)) {","      return false;","    }","  }","  return true;","}","","exports.prerelease = prerelease;","function prerelease(version, loose) {","  var parsed = parse(version, loose);","  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;","}",""],"l":{"1":1,"4":1,"5":1,"9":0,"10":0,"11":0,"12":0,"15":1,"19":1,"21":1,"22":1,"25":1,"26":1,"27":1,"35":1,"36":1,"37":1,"38":1,"45":1,"46":1,"52":1,"53":1,"57":1,"58":1,"65":1,"66":1,"69":1,"70":1,"78":1,"79":1,"82":1,"83":1,"89":1,"90":1,"96":1,"97":1,"110":1,"111":1,"115":1,"120":1,"124":1,"125":1,"127":1,"128":1,"133":1,"134":1,"135":1,"136":1,"138":1,"139":1,"146":1,"147":1,"154":1,"155":1,"156":1,"157":1,"161":1,"162":1,"164":1,"165":1,"166":1,"167":1,"169":1,"170":1,"171":1,"172":1,"176":1,"177":1,"179":1,"180":1,"181":1,"182":1,"184":1,"185":1,"186":1,"187":1,"190":1,"191":1,"192":1,"193":1,"198":1,"199":1,"203":1,"204":1,"211":1,"212":1,"217":1,"218":1,"224":1,"225":1,"229":1,"230":34,"231":34,"232":31,"235":1,"236":1,"237":0,"238":0,"240":0,"241":0,"243":0,"244":0,"246":0,"247":0,"248":0,"250":0,"251":0,"253":0,"257":1,"258":1,"259":0,"260":0,"264":1,"265":1,"266":0,"267":0,"270":1,"272":1,"273":187,"274":74,"275":74,"277":0,"278":113,"279":0,"282":113,"283":0,"285":113,"286":0,"288":113,"289":113,"290":113,"292":113,"293":0,"295":113,"298":113,"299":113,"300":113,"302":113,"303":0,"305":113,"306":0,"308":113,"309":0,"312":113,"313":113,"315":0,"316":0,"317":0,"318":0,"319":0,"321":0,"324":113,"325":113,"328":1,"329":113,"330":113,"331":0,"332":113,"335":1,"336":0,"339":1,"340":74,"341":74,"342":0,"344":74,"347":1,"348":74,"349":0,"351":74,"356":1,"357":31,"358":0,"361":31,"362":0,"363":31,"364":0,"365":31,"366":31,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"382":0,"388":1,"389":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"398":0,"399":0,"400":0,"401":0,"402":0,"407":0,"408":0,"409":0,"410":0,"414":0,"415":0,"416":0,"417":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"435":0,"436":0,"437":0,"438":0,"439":0,"445":0,"446":0,"447":0,"448":0,"452":0,"453":0,"455":0,"456":0,"457":0,"458":0,"459":0,"462":0,"463":0,"465":0,"468":0,"469":0,"470":0,"472":0,"474":0,"477":0,"479":0,"480":0,"481":0,"484":1,"485":1,"486":0,"487":0,"488":0,"491":0,"492":0,"494":0,"498":1,"499":1,"500":0,"501":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"513":0,"515":0,"516":0,"517":0,"518":0,"525":1,"527":1,"528":1,"529":152,"530":152,"532":152,"533":152,"534":152,"537":152,"544":1,"545":1,"546":0,"549":1,"550":1,"551":0,"554":1,"555":1,"556":0,"559":1,"560":1,"561":0,"564":1,"565":1,"566":74,"569":1,"570":1,"571":0,"574":1,"575":1,"576":0,"579":1,"580":1,"581":0,"582":0,"586":1,"587":1,"588":0,"589":0,"593":1,"594":1,"595":0,"598":1,"599":1,"600":35,"603":1,"604":1,"605":4,"608":1,"609":1,"610":0,"613":1,"614":1,"615":35,"618":1,"619":1,"620":0,"623":1,"624":1,"625":74,"626":74,"628":0,"629":0,"630":0,"631":0,"633":0,"634":0,"635":0,"636":0,"637":4,"638":0,"639":0,"640":35,"641":35,"642":0,"643":0,"645":74,"648":1,"649":1,"650":74,"651":0,"652":0,"654":0,"657":74,"658":0,"660":74,"661":74,"662":74,"664":74,"665":0,"667":74,"669":74,"672":1,"673":1,"674":74,"675":74,"677":74,"678":0,"680":74,"681":74,"682":0,"685":74,"686":0,"688":74,"691":1,"692":74,"695":1,"696":74,"698":74,"699":0,"701":74,"702":0,"704":74,"708":1,"709":1,"710":39,"711":0,"713":39,"714":0,"716":39,"719":39,"720":39,"721":39,"724":39,"727":39,"728":0,"731":39,"734":1,"735":39,"736":39,"738":39,"741":1,"742":0,"745":1,"746":39,"747":39,"748":39,"750":39,"751":39,"752":39,"754":39,"755":39,"758":39,"761":39,"764":39,"769":39,"770":39,"771":39,"773":39,"775":0,"776":0,"779":39,"780":74,"783":39,"787":1,"788":1,"789":0,"790":0,"791":0,"799":1,"800":39,"801":39,"802":39,"803":39,"804":39,"805":39,"806":39,"807":39,"808":39,"809":39,"812":1,"813":327,"822":1,"823":39,"824":74,"828":1,"829":74,"830":74,"831":0,"832":0,"834":0,"835":0,"836":0,"837":0,"838":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"849":0,"852":0,"853":0,"863":1,"864":39,"865":39,"869":1,"870":39,"871":39,"872":39,"873":35,"874":35,"876":35,"877":0,"878":35,"879":0,"880":35,"881":0,"882":0,"884":0,"885":35,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"894":0,"897":0,"900":35,"901":35,"902":0,"903":0,"906":0,"909":35,"913":35,"914":35,"918":1,"919":39,"920":39,"921":74,"925":1,"926":74,"927":74,"928":74,"929":74,"930":74,"931":74,"932":74,"933":74,"935":74,"936":0,"938":74,"939":0,"941":0,"944":0,"946":74,"948":0,"949":0,"950":0,"951":0,"953":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"966":0,"969":0,"970":0,"971":0,"973":0,"976":0,"977":74,"978":0,"979":74,"980":0,"983":74,"985":74,"991":1,"992":39,"994":39,"1002":1,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1013":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1024":0,"1026":0,"1031":1,"1032":39,"1033":0,"1035":39,"1036":39,"1038":39,"1039":39,"1040":39,"1042":0,"1045":1,"1046":39,"1047":74,"1048":0,"1051":39,"1057":0,"1058":0,"1059":0,"1060":0,"1062":0,"1063":0,"1064":0,"1067":0,"1072":0,"1075":39,"1078":1,"1079":1,"1080":39,"1081":39,"1083":0,"1085":39,"1088":1,"1089":1,"1090":0,"1091":0,"1093":0,"1097":1,"1098":1,"1099":0,"1100":0,"1102":0,"1106":1,"1107":1,"1108":0,"1111":0,"1113":0,"1118":1,"1119":1,"1120":0,"1124":1,"1125":1,"1126":0,"1129":1,"1130":1,"1131":0,"1132":0,"1134":0,"1135":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1151":0,"1155":0,"1156":0,"1162":0,"1163":0,"1165":0,"1166":0,"1168":0,"1169":0,"1170":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1183":0,"1184":0,"1189":0,"1191":0,"1192":0,"1193":0,"1196":0,"1199":1,"1200":1,"1201":0,"1202":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/gentests.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/gentests.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":9},"end":{"line":17,"column":40}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":23},"end":{"line":26,"column":38}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":9},"end":{"line":28,"column":31}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":9},"end":{"line":48,"column":24}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":7},"end":{"line":53,"column":29}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":5,"column":34}},"2":{"start":{"line":7,"column":0},"end":{"line":42,"column":3}},"3":{"start":{"line":18,"column":4},"end":{"line":18,"column":48}},"4":{"start":{"line":19,"column":4},"end":{"line":20,"column":59}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":59}},"6":{"start":{"line":21,"column":4},"end":{"line":41,"column":7}},"7":{"start":{"line":27,"column":8},"end":{"line":27,"column":27}},"8":{"start":{"line":29,"column":8},"end":{"line":30,"column":22}},"9":{"start":{"line":30,"column":12},"end":{"line":30,"column":22}},"10":{"start":{"line":31,"column":8},"end":{"line":31,"column":95}},"11":{"start":{"line":32,"column":8},"end":{"line":32,"column":106}},"12":{"start":{"line":33,"column":8},"end":{"line":33,"column":68}},"13":{"start":{"line":34,"column":8},"end":{"line":40,"column":9}},"14":{"start":{"line":35,"column":12},"end":{"line":35,"column":53}},"15":{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},"16":{"start":{"line":38,"column":16},"end":{"line":38,"column":69}},"17":{"start":{"line":44,"column":0},"end":{"line":60,"column":3}},"18":{"start":{"line":49,"column":4},"end":{"line":49,"column":45}},"19":{"start":{"line":50,"column":4},"end":{"line":59,"column":7}},"20":{"start":{"line":54,"column":8},"end":{"line":55,"column":22}},"21":{"start":{"line":55,"column":12},"end":{"line":55,"column":22}},"22":{"start":{"line":56,"column":8},"end":{"line":56,"column":88}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":97}},"24":{"start":{"line":58,"column":8},"end":{"line":58,"column":68}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":12}},{"start":{"line":37,"column":12},"end":{"line":37,"column":12}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]}},"code":["\"use strict\";","var fs   = require(\"fs\"),","    path = require(\"path\"),","    pbjs = require(\"../cli/pbjs\"),","    pbts = require(\"../cli/pbts\");","","[","    { file: \"tests/data/comments.proto\", flags: [] },","    { file: \"tests/data/convert.proto\", flags: [] },","    { file: \"tests/data/mapbox/vector_tile.proto\", flags: [] },","    { file: \"tests/data/package.proto\", flags: [] },","    { file: \"tests/data/rpc.proto\", flags: [ \"es6\" ] },","    { file: \"tests/data/rpc.proto\", flags: [] },","    { file: \"tests/data/test.proto\", flags: [] },","    { file: \"bench/data/bench.proto\", flags: [\"no-create\", \"no-verify\", \"no-delimited\", \"no-convert\", \"no-comments\"], out: \"bench/data/static_pbjs.js\" }","]",".forEach(function({ file, flags, out }) {","    var basename = file.replace(/\\.proto$/, \"\");","    if (!out)","        out = [ basename ].concat(flags).join(\"-\") + \".js\";","    pbjs.main([","        \"--target\", \"static-module\",","        \"--wrap\", \"commonjs\",","        \"--root\", \"test_\" + path.basename(basename, \".js\"),","        file","    ].concat(flags.map(function(flag) {","        return \"--\" + flag;","    })), function(err, output) {","        if (err)","            throw err;","        var pathToProtobufjs = path.relative(path.dirname(out), \"minimal\").replace(/\\\\/g, \"/\");","        fs.writeFileSync(out, output.replace(/\"protobufjs\\/minimal\"/g, JSON.stringify(pathToProtobufjs)));","        process.stdout.write(\"pbjs: \" + file + \" -> \" + out + \"\\n\");","        try {","            require(path.join(__dirname, \"..\", out));","        } catch (err) {","            if (!flags.includes(\"es6\")) {","                process.stderr.write(\"ERROR: \" + err.message + \"\\n\");","            }","        }","    });","});","","[","    \"tests/data/rpc.js\",","    \"tests/data/test.js\",","]",".forEach(function(file) {","    var out = file.replace(/\\.js$/, \".d.ts\");","    pbts.main([","        \"--no-comments\",","        file","    ], function(err, output) {","        if (err)","            throw err;","        var pathToProtobufjs = path.relative(path.dirname(out), \"\").replace(/\\\\/g, \"/\");","        fs.writeFileSync(out, output.replace(/\"protobufjs\"/g, JSON.stringify(pathToProtobufjs)));","        process.stdout.write(\"pbts: \" + file + \" -> \" + out + \"\\n\");","    });","});"],"l":{"2":2,"7":0,"18":0,"19":0,"20":0,"21":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"44":0,"49":0,"50":0,"54":0,"55":0,"56":0,"57":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/gulpfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/gulpfile.js","s":{"1":2,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"defineTask","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":56},"end":{"line":16,"column":75}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":33}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":21}},"3":{"start":{"line":6,"column":0},"end":{"line":24,"column":1}},"4":{"start":{"line":7,"column":4},"end":{"line":10,"column":8}},"5":{"start":{"line":11,"column":4},"end":{"line":15,"column":8}},"6":{"start":{"line":16,"column":4},"end":{"line":22,"column":7}},"7":{"start":{"line":17,"column":8},"end":{"line":21,"column":10}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":77}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":65}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":65}},"11":{"start":{"line":28,"column":0},"end":{"line":28,"column":65}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}}},"branchMap":{},"code":["var gulp   = require(\"gulp\"),","    bundle = require(\"./bundle\");","","var defaultTask = [];","","function defineTask(name, entry, target) {","    gulp.task(name + \"-bundle\", bundle.bind(this, {","        entry    : entry,","        target   : target","    }));","    gulp.task(name + \"-minify\" , [ name + \"-bundle\" ], bundle.bind(this, {","        entry    : entry,","        target   : target,","        compress : true","    }));","    gulp.task(name + \"-compress\", [ name + \"-minify\" ], function(callback) {","        bundle.compress(","            target + \"/protobuf.min.js\",","            target + \"/protobuf.min.js.gz\",","            callback","        );","    });","    defaultTask.push(name + \"-bundle\", name + \"-minify\", name + \"-compress\");","}","","defineTask(\"full\"   , \"../src/index\"        , \"../dist\"        );","defineTask(\"light\"  , \"../src/index-light\"  , \"../dist/light\"  );","defineTask(\"minimal\", \"../src/index-minimal\", \"../dist/minimal\");","","gulp.task(\"default\", defaultTask);",""],"l":{"1":2,"4":0,"6":1,"7":0,"11":0,"16":0,"17":0,"23":0,"26":0,"27":0,"28":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/pages.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/pages.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":12},"end":{"line":8,"column":30}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":17}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":5,"column":30}},"2":{"start":{"line":7,"column":0},"end":{"line":16,"column":3}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":29}},"4":{"start":{"line":12,"column":4},"end":{"line":15,"column":28}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":28}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]}},"code":["/*eslint-disable no-console*/","\"use strict\";","","var ghpages = require(\"gh-pages\"),","    path    = require(\"path\");","","ghpages.publish(path.join(__dirname, \"..\", \"docs\"), {","    logger: function(message) {","        console.log(message);","    }","}, function(err) {","    if (err)","        console.error(err);","    else","        console.log(\"done\");","});",""],"l":{"4":2,"7":0,"9":0,"12":0,"13":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/prepublish.js":{"path":"/home/travis/build/npmtest/node-npmtest-protobufjs/node_modules/protobufjs/scripts/prepublish.js","s":{"1":1,"2":1,"3":2},"b":{},"f":{"1":2},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":9},"end":{"line":11,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":25}},"2":{"start":{"line":7,"column":0},"end":{"line":13,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":99}}},"branchMap":{},"code":["\"use strict\";","","var path = require(\"path\"),","    fs   = require(\"fs\");","","// ensure LF on bin files","[","    path.join(__dirname, \"..\", \"bin\", \"pbjs\"),","    path.join(__dirname, \"..\", \"bin\", \"pbts\")","]",".forEach(function(file) {","    fs.writeFileSync(file, fs.readFileSync(file).toString(\"utf8\").replace(/\\r?\\n/g, \"\\n\"), \"utf8\");","});",""],"l":{"3":1,"7":1,"12":2}}}